{"version":3,"sources":["webpack:///./src/app/pages/payments/paypal/paypal.module.ts","webpack:///./src/app/pages/payments/paypal/paypal.page.html","webpack:///./src/app/pages/payments/paypal/paypal.page.scss","webpack:///./src/app/pages/payments/paypal/paypal.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEF;AAE3C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uDAAU;KACtB;CACF,CAAC;AAWF;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAT5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,uDAAU,CAAC;SAC3B,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB7B,0mBAA0mB,gBAAgB,eAAe,k0B;;;;;;;;;;;ACAzoB,yCAAyC,qBAAqB,qBAAqB,EAAE,+CAA+C,md;;;;;;;;;;;;;;;;;;;ACAlF;AACoC;AACzB;AAO7D;IAEE,oBACU,MAAc,EACd,IAAiB;QADjB,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAa;QAI3B,kBAAa,GAAW,MAAM,CAAC;QAC/B,aAAQ,GAAW,KAAK,CAAC;QACzB,iBAAY,GAAW,GAAG,CAAC;IAH3B,CAAC;IAMD,6BAAQ,GAAR;IACA,CAAC;IACD,kCAAa,GAAb;QAAA,iBA6BC;QA5BC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACf,2BAA2B,EAAE,2BAA2B;YACxD,wBAAwB,EAAE,kFAAkF;SAC7G,CAAC,CAAC,IAAI,CAAC;YACN,kGAAkG;YAClG,KAAI,CAAC,MAAM,CAAC,eAAe,CAAC,0BAA0B,EAAE,IAAI,4EAAmB,CAAC;YAC9E,yEAAyE;YACzE,qEAAqE;aACtE,CAAC,CAAC,CAAC,IAAI,CAAC;gBACP,IAAI,OAAO,GAAG,IAAI,sEAAa,CAAC,KAAI,CAAC,aAAa,EAAE,KAAI,CAAC,QAAQ,EAAE,aAAa,EAAE,MAAM,CAAC,CAAC;gBAC1F,KAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;oBAClD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACjB,oBAAoB;gBACtB,CAAC,EAAE,UAAC,KAAU;oBACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;oBAC5B,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;oBAC/C,yDAAyD;gBAC3D,CAAC,CAAC,CAAC;YACL,CAAC,EAAE,UAAC,KAAU;gBACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;gBAC5B,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;gBAC/C,yBAAyB;YAC3B,CAAC,CAAC,CAAC;QACL,CAAC,EAAE,UAAC,KAAU;YACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;YAC5B,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAC/C,0EAA0E;QAC5E,CAAC,CAAC,CAAC;IACL,CAAC;IA5CU,UAAU;QALtB,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,2GAAiC;;SAElC,CAAC;+EAIkB,+DAAM;YACR,0EAAW;OAJhB,UAAU,CA8CtB;IAAD,iBAAC;CAAA;AA9CsB","file":"pages-payments-paypal-paypal-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PaypalPage } from './paypal.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PaypalPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PaypalPage]\n})\nexport class PaypalPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Paypal for App\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-card class=\\\"welcome-card\\\">\\n    <ion-img src=\\\"/assets/images/paypal.jpg\\\"></ion-img>\\n    <ion-card-header>\\n      <ion-card-subtitle>Get Started</ion-card-subtitle>\\n      <ion-card-title>PayPal Sample</ion-card-title>\\n      <ion-row>\\n        <ion-col>\\n          Total Payment\\n        </ion-col>\\n        <ion-col>\\n          {{currencyIcon}}{{paymentAmount}}\\n        </ion-col>\\n      </ion-row>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-button expand=\\\"full\\\" color=\\\"success\\\" (click)=\\\"payWithPaypal()\\\">Pay with PayPal App</ion-button>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-list lines=\\\"none\\\">\\n    <ion-list-header>\\n      <ion-label>Resources</ion-label>\\n    </ion-list-header>\\n    <ion-item href=\\\"https://ionicframework.com/docs/native/paypal\\\">\\n      <ion-icon slot=\\\"start\\\" color=\\\"medium\\\" name=\\\"book\\\"></ion-icon>\\n      <ion-label>Paypal Plugin Documentation</ion-label>\\n    </ion-item>\\n    <ion-item href=\\\"https://github.com/paypal/PayPal-Cordova-Plugin\\\">\\n      <ion-icon slot=\\\"start\\\" color=\\\"medium\\\" name=\\\"build\\\"></ion-icon>\\n      <ion-label>Paypal Plugin Repository</ion-label>\\n    </ion-item>\\n\\n\\n  </ion-list>\\n</ion-content>\"","module.exports = \".welcome-card ion-img {\\n  max-height: 35vh;\\n  overflow: hidden; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy90ZWNobGFiL3Byb2plY3QvdW5pamF5YS9pb25pYy9rb25zdWxhci1tb2JpbGUvQXBwX2NvZGUvc3JjL2FwcC9wYWdlcy9wYXltZW50cy9wYXlwYWwvcGF5cGFsLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BheW1lbnRzL3BheXBhbC9wYXlwYWwucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLndlbGNvbWUtY2FyZCBpb24taW1nIHtcbiAgbWF4LWhlaWdodDogMzV2aDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { PayPal, PayPalPayment, PayPalConfiguration } from '@ionic-native/paypal/ngx';\nimport { UtilService } from 'src/app/providers/util.service';\n\n@Component({\n  selector: 'app-paypal',\n  templateUrl: './paypal.page.html',\n  styleUrls: ['./paypal.page.scss'],\n})\nexport class PaypalPage implements OnInit {\n\n  constructor(\n    private payPal: PayPal,\n    private util: UtilService\n  ) {\n\n  }\n  paymentAmount: string = '3.33';\n  currency: string = 'USD';\n  currencyIcon: string = '$';\n\n\n  ngOnInit() {\n  }\n  payWithPaypal() {\n    this.payPal.init({\n      PayPalEnvironmentProduction: 'YOUR_PRODUCTION_CLIENT_ID',\n      PayPalEnvironmentSandbox: 'AQ9rF4VKkHkfnS1IzUDTliE201-NxOTzdVuVbBhEY1rPp4gQbbWuo7X5Dve8fdDMHp6tPr5JMnT8J9iI'\n    }).then(() => {\n      // Environments: PayPalEnvironmentNoNetwork, PayPalEnvironmentSandbox, PayPalEnvironmentProduction\n      this.payPal.prepareToRender('PayPalEnvironmentSandbox', new PayPalConfiguration({\n        // Only needed if you get an \"Internal Service Error\" after PayPal login!\n        //payPalShippingAddressOption: 2 // PayPalShippingAddressOptionPayPal\n      })).then(() => {\n        let payment = new PayPalPayment(this.paymentAmount, this.currency, 'Description', 'sale');\n        this.payPal.renderSinglePaymentUI(payment).then((res) => {\n          console.log(res);\n          // Successfully paid\n        }, (error: any) => {\n          console.log('error', error);\n          this.util.showToast(error, 'danger', 'bottom');\n          // Error or render dialog closed without being successful\n        });\n      }, (error: any) => {\n        console.log('error', error);\n        this.util.showToast(error, 'danger', 'bottom');\n        // Error in configuration\n      });\n    }, (error: any) => {\n      console.log('error', error);\n      this.util.showToast(error, 'danger', 'bottom');\n      // Error in initialization, maybe PayPal isn't supported or something else\n    });\n  }\n\n}\n"],"sourceRoot":""}