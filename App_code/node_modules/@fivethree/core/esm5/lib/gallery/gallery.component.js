/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { FivGalleryToolbar } from './gallery-toolbar/gallery-toolbar.component';
import { ImageService } from './image.service';
import { IonSlides, DomController, Platform } from '@ionic/angular';
import { FivOverlay } from './../overlay/overlay.component';
import { Component, ViewChild, ElementRef, Renderer2, ContentChildren, QueryList, forwardRef, HostListener, Inject, ChangeDetectorRef, Input, Output, EventEmitter } from '@angular/core';
import { style, animate, AnimationBuilder, trigger, transition } from '@angular/animations';
import { Key } from './keycodes.enum';
import { DOCUMENT } from '@angular/common';
import { FivGalleryImage } from './gallery-image/gallery-image.component';
import { from, Subject } from 'rxjs';
import { mergeMap, takeUntil } from 'rxjs/operators';
var FivGallery = /** @class */ (function () {
    function FivGallery(domCtrl, renderer, animation, change, platform, document, imageService) {
        this.domCtrl = domCtrl;
        this.renderer = renderer;
        this.animation = animation;
        this.change = change;
        this.platform = platform;
        this.document = document;
        this.imageService = imageService;
        // properties for the slides
        this.activeIndex = 0;
        this.options = {
            zoom: true,
            initialSlide: 0
        };
        this.controlsVisible = true;
        this.pagerVisible = true;
        this.ambient = true;
        this.openTiming = '300ms';
        this.closeTiming = '340ms';
        this.willOpen = new EventEmitter();
        this.willClose = new EventEmitter();
        this.didOpen = new EventEmitter();
        this.didClose = new EventEmitter();
        this.backdropChange = new EventEmitter();
        this.$onDestroy = new Subject();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    FivGallery.prototype.keyEvent = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.overlay &&
            this.overlay.open &&
            this.initialImage &&
            this.initialImage.viewerState === 'hidden') {
            this.handleKeyboardEvents(event);
        }
    };
    /**
     * @return {?}
     */
    FivGallery.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @return {?}
     */
    FivGallery.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        this.updateImages();
        this.updateToolbars();
        this.subscribeToImageEvents();
    };
    /**
     * @return {?}
     */
    FivGallery.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.$onDestroy.next();
    };
    /**
     * @return {?}
     */
    FivGallery.prototype.subscribeToImageEvents = /**
     * @return {?}
     */
    function () {
        var _this = this;
        from(this.images.map((/**
         * @param {?} image
         * @return {?}
         */
        function (image) { return image.didOpen; })))
            .pipe(mergeMap((/**
         * @param {?} value
         * @return {?}
         */
        function (value) { return value; })), takeUntil(this.$onDestroy))
            .subscribe((/**
         * @param {?} image
         * @return {?}
         */
        function (image) { return _this.open(image); }));
        from(this.images.map((/**
         * @param {?} image
         * @return {?}
         */
        function (image) { return image.willOpen; })))
            .pipe(mergeMap((/**
         * @param {?} value
         * @return {?}
         */
        function (value) { return value; })), takeUntil(this.$onDestroy))
            .subscribe((/**
         * @param {?} image
         * @return {?}
         */
        function (image) { return _this.willOpen.emit(image); }));
        from(this.images.map((/**
         * @param {?} image
         * @return {?}
         */
        function (image) { return image.didClose; })))
            .pipe(mergeMap((/**
         * @param {?} value
         * @return {?}
         */
        function (value) { return value; })), takeUntil(this.$onDestroy))
            .subscribe((/**
         * @param {?} image
         * @return {?}
         */
        function (image) { return _this.didClose.emit(image); }));
    };
    /**
     * @return {?}
     */
    FivGallery.prototype.updateImages = /**
     * @return {?}
     */
    function () {
        this.images.forEach((/**
         * @param {?} img
         * @param {?} i
         * @return {?}
         */
        function (img, i) {
            img.index = i;
        }));
    };
    /**
     * @return {?}
     */
    FivGallery.prototype.updateToolbars = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.toolbars.forEach((/**
         * @param {?} toolbar
         * @return {?}
         */
        function (toolbar) {
            if (toolbar.position === 'top') {
                _this.topToolbar = toolbar.content;
            }
            else {
                _this.bottomToolbar = toolbar.content;
            }
        }));
    };
    /**
     * @param {?} event
     * @return {?}
     */
    FivGallery.prototype.handleKeyboardEvents = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (event.keyCode === Key.RightArrow) {
            this.next();
            return;
        }
        if (event.keyCode === Key.LeftArrow) {
            this.prev();
            return;
        }
        if (event.keyCode === Key.DownArrow || event.keyCode === Key.Escape) {
            this.close();
            return;
        }
    };
    /**
     * @return {?}
     */
    FivGallery.prototype.next = /**
     * @return {?}
     */
    function () {
        if (this.overlay &&
            this.overlay.open &&
            this.initialImage &&
            this.initialImage.viewerState === 'hidden') {
            this.slides.slideNext();
        }
    };
    /**
     * @return {?}
     */
    FivGallery.prototype.prev = /**
     * @return {?}
     */
    function () {
        if (this.overlay &&
            this.overlay.open &&
            this.initialImage &&
            this.initialImage.viewerState === 'hidden') {
            this.slides.slidePrev();
        }
    };
    /**
     * @param {?} initial
     * @return {?}
     */
    FivGallery.prototype.open = /**
     * @param {?} initial
     * @return {?}
     */
    function (initial) {
        this.activeIndex = initial.index;
        this.options.initialSlide = this.activeIndex;
        this.overlay.show(50000);
        this.initialImage = initial;
        this.initialImage.openTiming = this.openTiming;
        this.initialImage.closeTiming = this.closeTiming;
        this.initialImage.backdropColor = this.ambient
            ? this.imageService.getAverageRGB(this.images.toArray()[this.activeIndex].image.nativeElement)
            : '#000';
        this.showControls();
    };
    /**
     * @return {?}
     */
    FivGallery.prototype.close = /**
     * @return {?}
     */
    function () {
        this.closeFromPullDown(0);
    };
    /**
     * @return {?}
     */
    FivGallery.prototype.dismiss = /**
     * @return {?}
     */
    function () {
        this.closeFromPullDown(0, false);
    };
    /**
     * @param {?} progress
     * @param {?=} emit
     * @return {?}
     */
    FivGallery.prototype.closeFromPullDown = /**
     * @param {?} progress
     * @param {?=} emit
     * @return {?}
     */
    function (progress, emit) {
        if (emit === void 0) { emit = true; }
        if (emit) {
            this.willClose.emit(this.initialImage);
        }
        this.transformSlides(0);
        /** @type {?} */
        var sameAsInitial = this.images.toArray()[this.activeIndex].index === this.initialImage.index;
        /** @type {?} */
        var position = this.getImagePosition(this.images.toArray()[this.activeIndex].image, progress);
        if (sameAsInitial) {
            this.initialImage.close(position);
        }
        else {
            /** @type {?} */
            var src = this.initialImage.src;
            this.initialImage.src = this.images.toArray()[this.activeIndex].src;
            this.initialImage.slideOut(position, src);
        }
        if (this.inFullscreen) {
            this.closeFullscreen();
        }
        this.slidesLoaded = false;
        this.overlay.hide();
    };
    /**
     * @param {?} progress
     * @return {?}
     */
    FivGallery.prototype.resetPan = /**
     * @param {?} progress
     * @return {?}
     */
    function (progress) {
        this.resetSlides(progress);
    };
    /**
     * @private
     * @param {?} element
     * @param {?=} offset
     * @return {?}
     */
    FivGallery.prototype.getImagePosition = /**
     * @private
     * @param {?} element
     * @param {?=} offset
     * @return {?}
     */
    function (element, offset) {
        if (offset === void 0) { offset = 0; }
        /** @type {?} */
        var bounds = element.nativeElement.getBoundingClientRect();
        return {
            top: bounds.top,
            left: bounds.left,
            height: element.nativeElement.clientHeight,
            width: element.nativeElement.clientWidth,
            translate: this.platform.height() / 2 + offset * 120
        };
    };
    /**
     * @param {?} progress
     * @return {?}
     */
    FivGallery.prototype.transformSlides = /**
     * @param {?} progress
     * @return {?}
     */
    function (progress) {
        var _this = this;
        if (this.controlsVisible) {
            this.hideControls();
        }
        this.domCtrl.write((/**
         * @return {?}
         */
        function () {
            _this.renderer.setStyle(_this.viewer.nativeElement, 'transform', "translateY(" + progress * 120 + "px)");
        }));
    };
    /**
     * @param {?} progress
     * @return {?}
     */
    FivGallery.prototype.resetSlides = /**
     * @param {?} progress
     * @return {?}
     */
    function (progress) {
        var _this = this;
        /** @type {?} */
        var reset = this.animation.build([
            style({ transform: "translateY(" + progress * 120 + "px)" }),
            animate('150ms', style({ transform: "translateY(0px)" }))
        ]);
        /** @type {?} */
        var animation = reset.create(this.viewer.nativeElement);
        animation.play();
        animation.onDone((/**
         * @return {?}
         */
        function () {
            animation.destroy();
            _this.transformSlides(0);
            _this.showControls();
        }));
    };
    /**
     * @return {?}
     */
    FivGallery.prototype.slideDidChange = /**
     * @return {?}
     */
    function () {
        this.activeIndex = this.swiper.nativeElement.swiper.activeIndex;
    };
    /**
     * @return {?}
     */
    FivGallery.prototype.ionSlideNextStart = /**
     * @return {?}
     */
    function () {
        if (this.slidesLoaded) {
            this.updateBackdrop(this.activeIndex + 1);
        }
    };
    /**
     * @return {?}
     */
    FivGallery.prototype.ionSlidePrevStart = /**
     * @return {?}
     */
    function () {
        if (this.slidesLoaded) {
            this.updateBackdrop(this.activeIndex - 1);
        }
    };
    /**
     * @param {?} index
     * @return {?}
     */
    FivGallery.prototype.updateBackdrop = /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        this.initialImage.backdropColor = this.ambient
            ? this.imageService.getAverageRGB(this.images.toArray()[index].image.nativeElement)
            : '#000';
        this.backdropChange.emit(this.initialImage);
    };
    /**
     * @return {?}
     */
    FivGallery.prototype.onSlidesLoad = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.slidesLoaded = true;
        this.didOpen.emit(this.initialImage);
        this.activeIndex = this.swiper.nativeElement.swiper.activeIndex;
        this.initialImage.viewerState = 'hidden';
        this.swiper.nativeElement.swiper.on('click', (/**
         * @return {?}
         */
        function () {
            _this.handleSingleTap();
        }));
    };
    /**
     * @return {?}
     */
    FivGallery.prototype.fullscreen = /**
     * @return {?}
     */
    function () {
        if (this.inFullscreen) {
            this.closeFullscreen();
        }
        else {
            this.openFullscreen();
        }
    };
    /**
     * @return {?}
     */
    FivGallery.prototype.openFullscreen = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var elem = document.documentElement;
        if (elem.requestFullscreen) {
            elem.requestFullscreen();
        }
        else if (elem['mozRequestFullScreen']) {
            /* Firefox */
            elem['mozRequestFullScreen']();
        }
        else if (elem['webkitRequestFullscreen']) {
            /* Chrome, Safari and Opera */
            elem['webkitRequestFullscreen']();
        }
        else if (elem['msRequestFullscreen']) {
            /* IE/Edge */
            elem['msRequestFullscreen']();
        }
        this.inFullscreen = true;
    };
    /**
     * @return {?}
     */
    FivGallery.prototype.closeFullscreen = /**
     * @return {?}
     */
    function () {
        this.inFullscreen = false;
        if (this.document.exitFullscreen) {
            this.document.exitFullscreen();
        }
        else if (this.document.mozCancelFullScreen) {
            /* Firefox */
            this.document.mozCancelFullScreen();
        }
        else if (this.document.webkitExitFullscreen) {
            /* Chrome, Safari and Opera */
            this.document.webkitExitFullscreen();
        }
        else if (this.document.msExitFullscreen) {
            /* IE/Edge */
            this.document.msExitFullscreen();
        }
    };
    /**
     * @return {?}
     */
    FivGallery.prototype.zoom = /**
     * @return {?}
     */
    function () {
        if (this.zoomedIn) {
            this.zoomOut();
        }
        else {
            this.zoomIn();
        }
    };
    /**
     * @return {?}
     */
    FivGallery.prototype.zoomIn = /**
     * @return {?}
     */
    function () {
        this.swiper.nativeElement.swiper.zoom.in();
        this.zoomedIn = true;
    };
    /**
     * @return {?}
     */
    FivGallery.prototype.zoomOut = /**
     * @return {?}
     */
    function () {
        this.swiper.nativeElement.swiper.zoom.out();
        this.zoomedIn = false;
    };
    /**
     * @return {?}
     */
    FivGallery.prototype.handleSingleTap = /**
     * @return {?}
     */
    function () {
        this.controlsVisible = !this.controlsVisible;
        this.change.detectChanges();
    };
    /**
     * @return {?}
     */
    FivGallery.prototype.hideControls = /**
     * @return {?}
     */
    function () {
        this.controlsVisible = false;
        this.change.detectChanges();
    };
    /**
     * @return {?}
     */
    FivGallery.prototype.showControls = /**
     * @return {?}
     */
    function () {
        this.controlsVisible = true;
        this.change.detectChanges();
    };
    FivGallery.decorators = [
        { type: Component, args: [{
                    selector: 'fiv-gallery',
                    template: "<ng-content></ng-content>\n<fiv-overlay #overlay>\n\n  <div [@slideDown] *ngIf=\"controlsVisible && topToolbar\" class=\"gallery-toolbar header\" color=\"transparent\">\n    <ng-container [ngTemplateOutlet]=\"topToolbar\">\n    </ng-container>\n  </div>\n\n  <ng-container *fivIf=\"['desktop']\">\n    <ion-fab [@scale] *ngIf=\"controlsVisible && images?.length > 0 && pagerVisible\" vertical=\"center\" horizontal=\"start\"\n      slot=\"fixed\">\n      <ion-fab-button color=\"light\" (click)=\"prev()\" [disabled]=\"activeIndex === 0\">\n        <ion-icon name=\"arrow-back\"></ion-icon>\n      </ion-fab-button>\n    </ion-fab>\n  </ng-container>\n\n  <div #viewer class=\"viewer\" fivPull [maxPullHeight]=\"160\" [minPullHeight]=\"120\" (fivPull)=\"transformSlides($event)\"\n    (fivRefresh)=\"closeFromPullDown($event)\" (fivCancel)=\"resetPan($event)\" [enableScroll]=\"true\">\n    <ion-slides #slider *ngIf=\"overlay.open\" [ngClass]=\"[initialImage?.viewerState]\"\n      (ionSlideDidChange)=\"slideDidChange()\" (ionSlideNextStart)=\"ionSlideNextStart()\"\n      (ionSlidePrevStart)=\"ionSlidePrevStart()\" (ionSlidesDidLoad)=\"onSlidesLoad()\" [options]=\"options\">\n      <ion-slide *ngFor=\"let image of images; let i = index\">\n        <div class=\"swiper-zoom-container\">\n          <img [ngClass]=\"{'instant': activeIndex !== i}\" [src]=\"image.src\">\n        </div>\n      </ion-slide>\n    </ion-slides>\n  </div>\n\n  <ng-container *fivIf=\"['desktop']\">\n    <ion-fab [@scale] *ngIf=\"controlsVisible && pagerVisible\" vertical=\"center\" horizontal=\"end\" slot=\"fixed\">\n      <ion-fab-button color=\"light\" (click)=\"next()\" [disabled]=\"activeIndex === images.length - 1\">\n        <ion-icon name=\"arrow-forward\"></ion-icon>\n      </ion-fab-button>\n    </ion-fab>\n  </ng-container>\n\n  <div [@slideUp] *ngIf=\"controlsVisible && bottomToolbar\" class=\"gallery-toolbar footer\" color=\"transparent\">\n    <ng-container [ngTemplateOutlet]=\"bottomToolbar\">\n    </ng-container>\n  </div>\n\n\n</fiv-overlay>",
                    animations: [
                        trigger('scale', [
                            transition('void => *', [
                                style({ opacity: 0, transform: 'scale(0)' }),
                                animate('125ms', style({ opacity: 1, transform: 'scale(1)' }))
                            ]),
                            transition('* => void', [
                                style({ opacity: 1, transform: 'scale(1)' }),
                                animate('125ms', style({ opacity: 0, transform: 'scale(0)' }))
                            ])
                        ]),
                        trigger('slideUp', [
                            transition('void => *', [
                                style({ opacity: 0, transform: 'translateY(100%)' }),
                                animate('75ms', style({ opacity: 1, transform: 'translateY(0%)' }))
                            ]),
                            transition('* => void', [
                                style({ opacity: 1, transform: 'translateY(0%)' }),
                                animate('75ms', style({ opacity: 0, transform: 'translateY(100%)' }))
                            ])
                        ]),
                        trigger('slideDown', [
                            transition('* => void', [
                                style({ opacity: 0, transform: 'translateY(0%)' }),
                                animate('75ms', style({ opacity: 1, transform: 'translateY(-100%)' }))
                            ]),
                            transition('void => *', [
                                style({ opacity: 1, transform: 'translateY(-100%)' }),
                                animate('75ms', style({ opacity: 0, transform: 'translateY(0%)' }))
                            ])
                        ])
                    ],
                    styles: [".viewer{width:100vw;height:100vh}.viewer ion-slides{height:100%}.viewer img{height:auto;max-height:100%;width:auto;max-width:100%}.viewer img.instant{transition-duration:0s!important}.backdrop{background:rgba(0,0,0,.97);width:100vw;height:100vh;position:absolute}.gallery-toolbar{width:100%;--fiv-gallery-toolbar-color:#fff;position:absolute;color:var(--fiv-gallery-toolbar-color)}.gallery-toolbar.header{top:env(safe-area-inset-top)}.gallery-toolbar.footer{bottom:env(safe-area-inset-bottom)}ion-slides.in,ion-slides.out{visibility:hidden}"]
                }] }
    ];
    /** @nocollapse */
    FivGallery.ctorParameters = function () { return [
        { type: DomController },
        { type: Renderer2 },
        { type: AnimationBuilder },
        { type: ChangeDetectorRef },
        { type: Platform },
        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },
        { type: ImageService }
    ]; };
    FivGallery.propDecorators = {
        overlay: [{ type: ViewChild, args: ['overlay',] }],
        viewer: [{ type: ViewChild, args: ['viewer',] }],
        swiper: [{ type: ViewChild, args: ['slider', { read: ElementRef },] }],
        slides: [{ type: ViewChild, args: ['slider',] }],
        images: [{ type: ContentChildren, args: [forwardRef((/**
                     * @return {?}
                     */
                    function () { return FivGalleryImage; })), { descendants: true },] }],
        toolbars: [{ type: ContentChildren, args: [FivGalleryToolbar,] }],
        pagerVisible: [{ type: Input }],
        ambient: [{ type: Input }],
        openTiming: [{ type: Input }],
        closeTiming: [{ type: Input }],
        willOpen: [{ type: Output }],
        willClose: [{ type: Output }],
        didOpen: [{ type: Output }],
        didClose: [{ type: Output }],
        backdropChange: [{ type: Output }],
        keyEvent: [{ type: HostListener, args: ['window:keyup', ['$event'],] }]
    };
    return FivGallery;
}());
export { FivGallery };
if (false) {
    /** @type {?} */
    FivGallery.prototype.overlay;
    /** @type {?} */
    FivGallery.prototype.viewer;
    /** @type {?} */
    FivGallery.prototype.swiper;
    /** @type {?} */
    FivGallery.prototype.slides;
    /** @type {?} */
    FivGallery.prototype.images;
    /** @type {?} */
    FivGallery.prototype.toolbars;
    /** @type {?} */
    FivGallery.prototype.topToolbar;
    /** @type {?} */
    FivGallery.prototype.bottomToolbar;
    /** @type {?} */
    FivGallery.prototype.activeIndex;
    /** @type {?} */
    FivGallery.prototype.options;
    /** @type {?} */
    FivGallery.prototype.initialImage;
    /** @type {?} */
    FivGallery.prototype.inFullscreen;
    /** @type {?} */
    FivGallery.prototype.zoomedIn;
    /** @type {?} */
    FivGallery.prototype.controlsVisible;
    /**
     * @type {?}
     * @private
     */
    FivGallery.prototype.slidesLoaded;
    /** @type {?} */
    FivGallery.prototype.pagerVisible;
    /** @type {?} */
    FivGallery.prototype.ambient;
    /** @type {?} */
    FivGallery.prototype.openTiming;
    /** @type {?} */
    FivGallery.prototype.closeTiming;
    /** @type {?} */
    FivGallery.prototype.willOpen;
    /** @type {?} */
    FivGallery.prototype.willClose;
    /** @type {?} */
    FivGallery.prototype.didOpen;
    /** @type {?} */
    FivGallery.prototype.didClose;
    /** @type {?} */
    FivGallery.prototype.backdropChange;
    /** @type {?} */
    FivGallery.prototype.$onDestroy;
    /**
     * @type {?}
     * @private
     */
    FivGallery.prototype.domCtrl;
    /**
     * @type {?}
     * @private
     */
    FivGallery.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    FivGallery.prototype.animation;
    /**
     * @type {?}
     * @private
     */
    FivGallery.prototype.change;
    /**
     * @type {?}
     * @private
     */
    FivGallery.prototype.platform;
    /**
     * @type {?}
     * @private
     */
    FivGallery.prototype.document;
    /**
     * @type {?}
     * @private
     */
    FivGallery.prototype.imageService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FsbGVyeS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZml2ZXRocmVlL2NvcmUvIiwic291cmNlcyI6WyJsaWIvZ2FsbGVyeS9nYWxsZXJ5LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sNkNBQTZDLENBQUM7QUFDaEYsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxTQUFTLEVBQUUsYUFBYSxFQUFFLFFBQVEsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUM1RCxPQUFPLEVBQ0wsU0FBUyxFQUVULFNBQVMsRUFDVCxVQUFVLEVBQ1YsU0FBUyxFQUNULGVBQWUsRUFDZixTQUFTLEVBRVQsVUFBVSxFQUNWLFlBQVksRUFDWixNQUFNLEVBQ04saUJBQWlCLEVBRWpCLEtBQUssRUFDTCxNQUFNLEVBQ04sWUFBWSxFQUViLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFDTCxLQUFLLEVBQ0wsT0FBTyxFQUNQLGdCQUFnQixFQUNoQixPQUFPLEVBQ1AsVUFBVSxFQUNYLE1BQU0scUJBQXFCLENBQUM7QUFDN0IsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3RDLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUzQyxPQUFPLEVBQ0wsZUFBZSxFQUVoQixNQUFNLHlDQUF5QyxDQUFDO0FBQ2pELE9BQU8sRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ3JDLE9BQU8sRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFckQ7SUFzRkUsb0JBQ1UsT0FBc0IsRUFDdEIsUUFBbUIsRUFDbkIsU0FBMkIsRUFDM0IsTUFBeUIsRUFDekIsUUFB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QkFDTixNQUFNOzBCQUNOLE1BQU07MkJBQ04sTUFBTTtpQ0FDTixNQUFNOzJCQUlOLFlBQVksU0FBQyxjQUFjLEVBQUUsQ0FBQyxRQUFRLENBQUM7O0lBa1QxQyxpQkFBQztDQUFBLEFBNVhELElBNFhDO1NBdlZZLFVBQVU7OztJQUVyQiw2QkFBMEM7O0lBQzFDLDRCQUF3Qzs7SUFDeEMsNEJBQThEOztJQUM5RCw0QkFBdUM7O0lBRXZDLDRCQUNtQzs7SUFDbkMsOEJBQTJFOztJQUUzRSxnQ0FBNkI7O0lBQzdCLG1DQUFnQzs7SUFHaEMsaUNBQWdCOztJQUNoQiw2QkFHRTs7SUFDRixrQ0FBOEI7O0lBQzlCLGtDQUFzQjs7SUFDdEIsOEJBQWtCOztJQUNsQixxQ0FBdUI7Ozs7O0lBQ3ZCLGtDQUFxQjs7SUFDckIsa0NBQTZCOztJQUM3Qiw2QkFBd0I7O0lBQ3hCLGdDQUE4Qjs7SUFDOUIsaUNBQStCOztJQUMvQiw4QkFBeUQ7O0lBQ3pELCtCQUEwRDs7SUFDMUQsNkJBQXdEOztJQUN4RCw4QkFBeUQ7O0lBQ3pELG9DQUErRDs7SUFFL0QsZ0NBQTJCOzs7OztJQWV6Qiw2QkFBOEI7Ozs7O0lBQzlCLDhCQUEyQjs7Ozs7SUFDM0IsK0JBQW1DOzs7OztJQUNuQyw0QkFBaUM7Ozs7O0lBQ2pDLDhCQUEwQjs7Ozs7SUFDMUIsOEJBQXVDOzs7OztJQUN2QyxrQ0FBa0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGaXZHYWxsZXJ5VG9vbGJhciB9IGZyb20gJy4vZ2FsbGVyeS10b29sYmFyL2dhbGxlcnktdG9vbGJhci5jb21wb25lbnQnO1xuaW1wb3J0IHsgSW1hZ2VTZXJ2aWNlIH0gZnJvbSAnLi9pbWFnZS5zZXJ2aWNlJztcbmltcG9ydCB7IElvblNsaWRlcywgRG9tQ29udHJvbGxlciwgUGxhdGZvcm0gfSBmcm9tICdAaW9uaWMvYW5ndWxhcic7XG5pbXBvcnQgeyBGaXZPdmVybGF5IH0gZnJvbSAnLi8uLi9vdmVybGF5L292ZXJsYXkuY29tcG9uZW50JztcbmltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgT25Jbml0LFxuICBWaWV3Q2hpbGQsXG4gIEVsZW1lbnRSZWYsXG4gIFJlbmRlcmVyMixcbiAgQ29udGVudENoaWxkcmVuLFxuICBRdWVyeUxpc3QsXG4gIEFmdGVyQ29udGVudEluaXQsXG4gIGZvcndhcmRSZWYsXG4gIEhvc3RMaXN0ZW5lcixcbiAgSW5qZWN0LFxuICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgVGVtcGxhdGVSZWYsXG4gIElucHV0LFxuICBPdXRwdXQsXG4gIEV2ZW50RW1pdHRlcixcbiAgT25EZXN0cm95XG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgc3R5bGUsXG4gIGFuaW1hdGUsXG4gIEFuaW1hdGlvbkJ1aWxkZXIsXG4gIHRyaWdnZXIsXG4gIHRyYW5zaXRpb25cbn0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XG5pbXBvcnQgeyBLZXkgfSBmcm9tICcuL2tleWNvZGVzLmVudW0nO1xuaW1wb3J0IHsgRE9DVU1FTlQgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmF2aWdhdGVhYmxlIH0gZnJvbSAnLi4vaW50ZXJmYWNlcyc7XG5pbXBvcnQge1xuICBGaXZHYWxsZXJ5SW1hZ2UsXG4gIFBvc2l0aW9uXG59IGZyb20gJy4vZ2FsbGVyeS1pbWFnZS9nYWxsZXJ5LWltYWdlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBmcm9tLCBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBtZXJnZU1hcCwgdGFrZVVudGlsIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdmaXYtZ2FsbGVyeScsXG4gIHRlbXBsYXRlVXJsOiAnLi9nYWxsZXJ5LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vZ2FsbGVyeS5jb21wb25lbnQuc2NzcyddLFxuICBhbmltYXRpb25zOiBbXG4gICAgdHJpZ2dlcignc2NhbGUnLCBbXG4gICAgICB0cmFuc2l0aW9uKCd2b2lkID0+IConLCBbXG4gICAgICAgIHN0eWxlKHsgb3BhY2l0eTogMCwgdHJhbnNmb3JtOiAnc2NhbGUoMCknIH0pLFxuICAgICAgICBhbmltYXRlKCcxMjVtcycsIHN0eWxlKHsgb3BhY2l0eTogMSwgdHJhbnNmb3JtOiAnc2NhbGUoMSknIH0pKVxuICAgICAgXSksXG4gICAgICB0cmFuc2l0aW9uKCcqID0+IHZvaWQnLCBbXG4gICAgICAgIHN0eWxlKHsgb3BhY2l0eTogMSwgdHJhbnNmb3JtOiAnc2NhbGUoMSknIH0pLFxuICAgICAgICBhbmltYXRlKCcxMjVtcycsIHN0eWxlKHsgb3BhY2l0eTogMCwgdHJhbnNmb3JtOiAnc2NhbGUoMCknIH0pKVxuICAgICAgXSlcbiAgICBdKSxcbiAgICB0cmlnZ2VyKCdzbGlkZVVwJywgW1xuICAgICAgdHJhbnNpdGlvbigndm9pZCA9PiAqJywgW1xuICAgICAgICBzdHlsZSh7IG9wYWNpdHk6IDAsIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoMTAwJSknIH0pLFxuICAgICAgICBhbmltYXRlKCc3NW1zJywgc3R5bGUoeyBvcGFjaXR5OiAxLCB0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKDAlKScgfSkpXG4gICAgICBdKSxcbiAgICAgIHRyYW5zaXRpb24oJyogPT4gdm9pZCcsIFtcbiAgICAgICAgc3R5bGUoeyBvcGFjaXR5OiAxLCB0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKDAlKScgfSksXG4gICAgICAgIGFuaW1hdGUoJzc1bXMnLCBzdHlsZSh7IG9wYWNpdHk6IDAsIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoMTAwJSknIH0pKVxuICAgICAgXSlcbiAgICBdKSxcbiAgICB0cmlnZ2VyKCdzbGlkZURvd24nLCBbXG4gICAgICB0cmFuc2l0aW9uKCcqID0+IHZvaWQnLCBbXG4gICAgICAgIHN0eWxlKHsgb3BhY2l0eTogMCwgdHJhbnNmb3JtOiAndHJhbnNsYXRlWSgwJSknIH0pLFxuICAgICAgICBhbmltYXRlKCc3NW1zJywgc3R5bGUoeyBvcGFjaXR5OiAxLCB0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKC0xMDAlKScgfSkpXG4gICAgICBdKSxcbiAgICAgIHRyYW5zaXRpb24oJ3ZvaWQgPT4gKicsIFtcbiAgICAgICAgc3R5bGUoeyBvcGFjaXR5OiAxLCB0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKC0xMDAlKScgfSksXG4gICAgICAgIGFuaW1hdGUoJzc1bXMnLCBzdHlsZSh7IG9wYWNpdHk6IDAsIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoMCUpJyB9KSlcbiAgICAgIF0pXG4gICAgXSlcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBGaXZHYWxsZXJ5XG4gIGltcGxlbWVudHMgT25Jbml0LCBBZnRlckNvbnRlbnRJbml0LCBPbkRlc3Ryb3ksIE5hdmlnYXRlYWJsZSB7XG4gIEBWaWV3Q2hpbGQoJ292ZXJsYXknKSBvdmVybGF5OiBGaXZPdmVybGF5O1xuICBAVmlld0NoaWxkKCd2aWV3ZXInKSB2aWV3ZXI6IEVsZW1lbnRSZWY7XG4gIEBWaWV3Q2hpbGQoJ3NsaWRlcicsIHsgcmVhZDogRWxlbWVudFJlZiB9KSBzd2lwZXI6IEVsZW1lbnRSZWY7XG4gIEBWaWV3Q2hpbGQoJ3NsaWRlcicpIHNsaWRlczogSW9uU2xpZGVzO1xuXG4gIEBDb250ZW50Q2hpbGRyZW4oZm9yd2FyZFJlZigoKSA9PiBGaXZHYWxsZXJ5SW1hZ2UpLCB7IGRlc2NlbmRhbnRzOiB0cnVlIH0pXG4gIGltYWdlczogUXVlcnlMaXN0PEZpdkdhbGxlcnlJbWFnZT47XG4gIEBDb250ZW50Q2hpbGRyZW4oRml2R2FsbGVyeVRvb2xiYXIpIHRvb2xiYXJzOiBRdWVyeUxpc3Q8Rml2R2FsbGVyeVRvb2xiYXI+O1xuXG4gIHRvcFRvb2xiYXI6IFRlbXBsYXRlUmVmPGFueT47XG4gIGJvdHRvbVRvb2xiYXI6IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgLy8gcHJvcGVydGllcyBmb3IgdGhlIHNsaWRlc1xuICBhY3RpdmVJbmRleCA9IDA7XG4gIG9wdGlvbnMgPSB7XG4gICAgem9vbTogdHJ1ZSxcbiAgICBpbml0aWFsU2xpZGU6IDBcbiAgfTtcbiAgaW5pdGlhbEltYWdlOiBGaXZHYWxsZXJ5SW1hZ2U7XG4gIGluRnVsbHNjcmVlbjogYm9vbGVhbjtcbiAgem9vbWVkSW46IGJvb2xlYW47XG4gIGNvbnRyb2xzVmlzaWJsZSA9IHRydWU7XG4gIHByaXZhdGUgc2xpZGVzTG9hZGVkO1xuICBASW5wdXQoKSBwYWdlclZpc2libGUgPSB0cnVlO1xuICBASW5wdXQoKSBhbWJpZW50ID0gdHJ1ZTtcbiAgQElucHV0KCkgb3BlblRpbWluZyA9ICczMDBtcyc7XG4gIEBJbnB1dCgpIGNsb3NlVGltaW5nID0gJzM0MG1zJztcbiAgQE91dHB1dCgpIHdpbGxPcGVuID0gbmV3IEV2ZW50RW1pdHRlcjxGaXZHYWxsZXJ5SW1hZ2U+KCk7XG4gIEBPdXRwdXQoKSB3aWxsQ2xvc2UgPSBuZXcgRXZlbnRFbWl0dGVyPEZpdkdhbGxlcnlJbWFnZT4oKTtcbiAgQE91dHB1dCgpIGRpZE9wZW4gPSBuZXcgRXZlbnRFbWl0dGVyPEZpdkdhbGxlcnlJbWFnZT4oKTtcbiAgQE91dHB1dCgpIGRpZENsb3NlID0gbmV3IEV2ZW50RW1pdHRlcjxGaXZHYWxsZXJ5SW1hZ2U+KCk7XG4gIEBPdXRwdXQoKSBiYWNrZHJvcENoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8Rml2R2FsbGVyeUltYWdlPigpO1xuXG4gICRvbkRlc3Ryb3kgPSBuZXcgU3ViamVjdCgpO1xuXG4gIEBIb3N0TGlzdGVuZXIoJ3dpbmRvdzprZXl1cCcsIFsnJGV2ZW50J10pXG4gIGtleUV2ZW50KGV2ZW50OiBLZXlib2FyZEV2ZW50KSB7XG4gICAgaWYgKFxuICAgICAgdGhpcy5vdmVybGF5ICYmXG4gICAgICB0aGlzLm92ZXJsYXkub3BlbiAmJlxuICAgICAgdGhpcy5pbml0aWFsSW1hZ2UgJiZcbiAgICAgIHRoaXMuaW5pdGlhbEltYWdlLnZpZXdlclN0YXRlID09PSAnaGlkZGVuJ1xuICAgICkge1xuICAgICAgdGhpcy5oYW5kbGVLZXlib2FyZEV2ZW50cyhldmVudCk7XG4gICAgfVxuICB9XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBkb21DdHJsOiBEb21Db250cm9sbGVyLFxuICAgIHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyMixcbiAgICBwcml2YXRlIGFuaW1hdGlvbjogQW5pbWF0aW9uQnVpbGRlcixcbiAgICBwcml2YXRlIGNoYW5nZTogQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gICAgcHJpdmF0ZSBwbGF0Zm9ybTogUGxhdGZvcm0sXG4gICAgQEluamVjdChET0NVTUVOVCkgcHJpdmF0ZSBkb2N1bWVudDogYW55LFxuICAgIHByaXZhdGUgaW1hZ2VTZXJ2aWNlOiBJbWFnZVNlcnZpY2VcbiAgKSB7fVxuXG4gIG5nT25Jbml0KCkge31cblxuICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZCB7XG4gICAgdGhpcy51cGRhdGVJbWFnZXMoKTtcbiAgICB0aGlzLnVwZGF0ZVRvb2xiYXJzKCk7XG4gICAgdGhpcy5zdWJzY3JpYmVUb0ltYWdlRXZlbnRzKCk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICB0aGlzLiRvbkRlc3Ryb3kubmV4dCgpO1xuICB9XG5cbiAgc3Vic2NyaWJlVG9JbWFnZUV2ZW50cygpIHtcbiAgICBmcm9tKHRoaXMuaW1hZ2VzLm1hcChpbWFnZSA9PiBpbWFnZS5kaWRPcGVuKSlcbiAgICAgIC5waXBlKFxuICAgICAgICBtZXJnZU1hcCgodmFsdWU6IEV2ZW50RW1pdHRlcjxGaXZHYWxsZXJ5SW1hZ2U+KSA9PiB2YWx1ZSksXG4gICAgICAgIHRha2VVbnRpbDxGaXZHYWxsZXJ5SW1hZ2U+KHRoaXMuJG9uRGVzdHJveSlcbiAgICAgIClcbiAgICAgIC5zdWJzY3JpYmUoaW1hZ2UgPT4gdGhpcy5vcGVuKGltYWdlKSk7XG4gICAgZnJvbSh0aGlzLmltYWdlcy5tYXAoaW1hZ2UgPT4gaW1hZ2Uud2lsbE9wZW4pKVxuICAgICAgLnBpcGUoXG4gICAgICAgIG1lcmdlTWFwKCh2YWx1ZTogRXZlbnRFbWl0dGVyPEZpdkdhbGxlcnlJbWFnZT4pID0+IHZhbHVlKSxcbiAgICAgICAgdGFrZVVudGlsPEZpdkdhbGxlcnlJbWFnZT4odGhpcy4kb25EZXN0cm95KVxuICAgICAgKVxuICAgICAgLnN1YnNjcmliZShpbWFnZSA9PiB0aGlzLndpbGxPcGVuLmVtaXQoaW1hZ2UpKTtcblxuICAgIGZyb20odGhpcy5pbWFnZXMubWFwKGltYWdlID0+IGltYWdlLmRpZENsb3NlKSlcbiAgICAgIC5waXBlKFxuICAgICAgICBtZXJnZU1hcCgodmFsdWU6IEV2ZW50RW1pdHRlcjxGaXZHYWxsZXJ5SW1hZ2U+KSA9PiB2YWx1ZSksXG4gICAgICAgIHRha2VVbnRpbDxGaXZHYWxsZXJ5SW1hZ2U+KHRoaXMuJG9uRGVzdHJveSlcbiAgICAgIClcbiAgICAgIC5zdWJzY3JpYmUoaW1hZ2UgPT4gdGhpcy5kaWRDbG9zZS5lbWl0KGltYWdlKSk7XG4gIH1cblxuICB1cGRhdGVJbWFnZXMoKSB7XG4gICAgdGhpcy5pbWFnZXMuZm9yRWFjaCgoaW1nLCBpKSA9PiB7XG4gICAgICBpbWcuaW5kZXggPSBpO1xuICAgIH0pO1xuICB9XG4gIHVwZGF0ZVRvb2xiYXJzKCkge1xuICAgIHRoaXMudG9vbGJhcnMuZm9yRWFjaCh0b29sYmFyID0+IHtcbiAgICAgIGlmICh0b29sYmFyLnBvc2l0aW9uID09PSAndG9wJykge1xuICAgICAgICB0aGlzLnRvcFRvb2xiYXIgPSB0b29sYmFyLmNvbnRlbnQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmJvdHRvbVRvb2xiYXIgPSB0b29sYmFyLmNvbnRlbnQ7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBoYW5kbGVLZXlib2FyZEV2ZW50cyhldmVudDogS2V5Ym9hcmRFdmVudCkge1xuICAgIGlmIChldmVudC5rZXlDb2RlID09PSBLZXkuUmlnaHRBcnJvdykge1xuICAgICAgdGhpcy5uZXh0KCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChldmVudC5rZXlDb2RlID09PSBLZXkuTGVmdEFycm93KSB7XG4gICAgICB0aGlzLnByZXYoKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGV2ZW50LmtleUNvZGUgPT09IEtleS5Eb3duQXJyb3cgfHwgZXZlbnQua2V5Q29kZSA9PT0gS2V5LkVzY2FwZSkge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgfVxuXG4gIG5leHQoKSB7XG4gICAgaWYgKFxuICAgICAgdGhpcy5vdmVybGF5ICYmXG4gICAgICB0aGlzLm92ZXJsYXkub3BlbiAmJlxuICAgICAgdGhpcy5pbml0aWFsSW1hZ2UgJiZcbiAgICAgIHRoaXMuaW5pdGlhbEltYWdlLnZpZXdlclN0YXRlID09PSAnaGlkZGVuJ1xuICAgICkge1xuICAgICAgdGhpcy5zbGlkZXMuc2xpZGVOZXh0KCk7XG4gICAgfVxuICB9XG4gIHByZXYoKSB7XG4gICAgaWYgKFxuICAgICAgdGhpcy5vdmVybGF5ICYmXG4gICAgICB0aGlzLm92ZXJsYXkub3BlbiAmJlxuICAgICAgdGhpcy5pbml0aWFsSW1hZ2UgJiZcbiAgICAgIHRoaXMuaW5pdGlhbEltYWdlLnZpZXdlclN0YXRlID09PSAnaGlkZGVuJ1xuICAgICkge1xuICAgICAgdGhpcy5zbGlkZXMuc2xpZGVQcmV2KCk7XG4gICAgfVxuICB9XG5cbiAgb3Blbihpbml0aWFsOiBGaXZHYWxsZXJ5SW1hZ2UpIHtcbiAgICB0aGlzLmFjdGl2ZUluZGV4ID0gaW5pdGlhbC5pbmRleDtcbiAgICB0aGlzLm9wdGlvbnMuaW5pdGlhbFNsaWRlID0gdGhpcy5hY3RpdmVJbmRleDtcbiAgICB0aGlzLm92ZXJsYXkuc2hvdyg1MDAwMCk7XG4gICAgdGhpcy5pbml0aWFsSW1hZ2UgPSBpbml0aWFsO1xuICAgIHRoaXMuaW5pdGlhbEltYWdlLm9wZW5UaW1pbmcgPSB0aGlzLm9wZW5UaW1pbmc7XG4gICAgdGhpcy5pbml0aWFsSW1hZ2UuY2xvc2VUaW1pbmcgPSB0aGlzLmNsb3NlVGltaW5nO1xuICAgIHRoaXMuaW5pdGlhbEltYWdlLmJhY2tkcm9wQ29sb3IgPSB0aGlzLmFtYmllbnRcbiAgICAgID8gdGhpcy5pbWFnZVNlcnZpY2UuZ2V0QXZlcmFnZVJHQihcbiAgICAgICAgICB0aGlzLmltYWdlcy50b0FycmF5KClbdGhpcy5hY3RpdmVJbmRleF0uaW1hZ2UubmF0aXZlRWxlbWVudFxuICAgICAgICApXG4gICAgICA6ICcjMDAwJztcbiAgICB0aGlzLnNob3dDb250cm9scygpO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5jbG9zZUZyb21QdWxsRG93bigwKTtcbiAgfVxuICBkaXNtaXNzKCkge1xuICAgIHRoaXMuY2xvc2VGcm9tUHVsbERvd24oMCwgZmFsc2UpO1xuICB9XG5cbiAgY2xvc2VGcm9tUHVsbERvd24ocHJvZ3Jlc3M6IG51bWJlciwgZW1pdCA9IHRydWUpIHtcbiAgICBpZiAoZW1pdCkge1xuICAgICAgdGhpcy53aWxsQ2xvc2UuZW1pdCh0aGlzLmluaXRpYWxJbWFnZSk7XG4gICAgfVxuICAgIHRoaXMudHJhbnNmb3JtU2xpZGVzKDApO1xuXG4gICAgY29uc3Qgc2FtZUFzSW5pdGlhbCA9XG4gICAgICB0aGlzLmltYWdlcy50b0FycmF5KClbdGhpcy5hY3RpdmVJbmRleF0uaW5kZXggPT09IHRoaXMuaW5pdGlhbEltYWdlLmluZGV4O1xuICAgIGNvbnN0IHBvc2l0aW9uID0gdGhpcy5nZXRJbWFnZVBvc2l0aW9uKFxuICAgICAgdGhpcy5pbWFnZXMudG9BcnJheSgpW3RoaXMuYWN0aXZlSW5kZXhdLmltYWdlLFxuICAgICAgcHJvZ3Jlc3NcbiAgICApO1xuICAgIGlmIChzYW1lQXNJbml0aWFsKSB7XG4gICAgICB0aGlzLmluaXRpYWxJbWFnZS5jbG9zZShwb3NpdGlvbik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IHNyYyA9IHRoaXMuaW5pdGlhbEltYWdlLnNyYztcbiAgICAgIHRoaXMuaW5pdGlhbEltYWdlLnNyYyA9IHRoaXMuaW1hZ2VzLnRvQXJyYXkoKVt0aGlzLmFjdGl2ZUluZGV4XS5zcmM7XG4gICAgICB0aGlzLmluaXRpYWxJbWFnZS5zbGlkZU91dChwb3NpdGlvbiwgc3JjKTtcbiAgICB9XG4gICAgaWYgKHRoaXMuaW5GdWxsc2NyZWVuKSB7XG4gICAgICB0aGlzLmNsb3NlRnVsbHNjcmVlbigpO1xuICAgIH1cbiAgICB0aGlzLnNsaWRlc0xvYWRlZCA9IGZhbHNlO1xuICAgIHRoaXMub3ZlcmxheS5oaWRlKCk7XG4gIH1cblxuICByZXNldFBhbihwcm9ncmVzczogbnVtYmVyKSB7XG4gICAgdGhpcy5yZXNldFNsaWRlcyhwcm9ncmVzcyk7XG4gIH1cblxuICBwcml2YXRlIGdldEltYWdlUG9zaXRpb24oZWxlbWVudDogRWxlbWVudFJlZiwgb2Zmc2V0OiBudW1iZXIgPSAwKTogUG9zaXRpb24ge1xuICAgIGNvbnN0IGJvdW5kcyA9IGVsZW1lbnQubmF0aXZlRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICByZXR1cm4ge1xuICAgICAgdG9wOiBib3VuZHMudG9wLFxuICAgICAgbGVmdDogYm91bmRzLmxlZnQsXG4gICAgICBoZWlnaHQ6IGVsZW1lbnQubmF0aXZlRWxlbWVudC5jbGllbnRIZWlnaHQsXG4gICAgICB3aWR0aDogZWxlbWVudC5uYXRpdmVFbGVtZW50LmNsaWVudFdpZHRoLFxuICAgICAgdHJhbnNsYXRlOiB0aGlzLnBsYXRmb3JtLmhlaWdodCgpIC8gMiArIG9mZnNldCAqIDEyMFxuICAgIH07XG4gIH1cblxuICB0cmFuc2Zvcm1TbGlkZXMocHJvZ3Jlc3M6IG51bWJlcikge1xuICAgIGlmICh0aGlzLmNvbnRyb2xzVmlzaWJsZSkge1xuICAgICAgdGhpcy5oaWRlQ29udHJvbHMoKTtcbiAgICB9XG4gICAgdGhpcy5kb21DdHJsLndyaXRlKCgpID0+IHtcbiAgICAgIHRoaXMucmVuZGVyZXIuc2V0U3R5bGUoXG4gICAgICAgIHRoaXMudmlld2VyLm5hdGl2ZUVsZW1lbnQsXG4gICAgICAgICd0cmFuc2Zvcm0nLFxuICAgICAgICBgdHJhbnNsYXRlWSgke3Byb2dyZXNzICogMTIwfXB4KWBcbiAgICAgICk7XG4gICAgfSk7XG4gIH1cblxuICByZXNldFNsaWRlcyhwcm9ncmVzczogbnVtYmVyKSB7XG4gICAgY29uc3QgcmVzZXQgPSB0aGlzLmFuaW1hdGlvbi5idWlsZChbXG4gICAgICBzdHlsZSh7IHRyYW5zZm9ybTogYHRyYW5zbGF0ZVkoJHtwcm9ncmVzcyAqIDEyMH1weClgIH0pLFxuICAgICAgYW5pbWF0ZSgnMTUwbXMnLCBzdHlsZSh7IHRyYW5zZm9ybTogYHRyYW5zbGF0ZVkoMHB4KWAgfSkpXG4gICAgXSk7XG5cbiAgICBjb25zdCBhbmltYXRpb24gPSByZXNldC5jcmVhdGUodGhpcy52aWV3ZXIubmF0aXZlRWxlbWVudCk7XG4gICAgYW5pbWF0aW9uLnBsYXkoKTtcbiAgICBhbmltYXRpb24ub25Eb25lKCgpID0+IHtcbiAgICAgIGFuaW1hdGlvbi5kZXN0cm95KCk7XG4gICAgICB0aGlzLnRyYW5zZm9ybVNsaWRlcygwKTtcbiAgICAgIHRoaXMuc2hvd0NvbnRyb2xzKCk7XG4gICAgfSk7XG4gIH1cblxuICBzbGlkZURpZENoYW5nZSgpIHtcbiAgICB0aGlzLmFjdGl2ZUluZGV4ID0gdGhpcy5zd2lwZXIubmF0aXZlRWxlbWVudC5zd2lwZXIuYWN0aXZlSW5kZXg7XG4gIH1cblxuICBpb25TbGlkZU5leHRTdGFydCgpIHtcbiAgICBpZiAodGhpcy5zbGlkZXNMb2FkZWQpIHtcbiAgICAgIHRoaXMudXBkYXRlQmFja2Ryb3AodGhpcy5hY3RpdmVJbmRleCArIDEpO1xuICAgIH1cbiAgfVxuICBpb25TbGlkZVByZXZTdGFydCgpIHtcbiAgICBpZiAodGhpcy5zbGlkZXNMb2FkZWQpIHtcbiAgICAgIHRoaXMudXBkYXRlQmFja2Ryb3AodGhpcy5hY3RpdmVJbmRleCAtIDEpO1xuICAgIH1cbiAgfVxuXG4gIHVwZGF0ZUJhY2tkcm9wKGluZGV4OiBudW1iZXIpIHtcbiAgICB0aGlzLmluaXRpYWxJbWFnZS5iYWNrZHJvcENvbG9yID0gdGhpcy5hbWJpZW50XG4gICAgICA/IHRoaXMuaW1hZ2VTZXJ2aWNlLmdldEF2ZXJhZ2VSR0IoXG4gICAgICAgICAgdGhpcy5pbWFnZXMudG9BcnJheSgpW2luZGV4XS5pbWFnZS5uYXRpdmVFbGVtZW50XG4gICAgICAgIClcbiAgICAgIDogJyMwMDAnO1xuICAgIHRoaXMuYmFja2Ryb3BDaGFuZ2UuZW1pdCh0aGlzLmluaXRpYWxJbWFnZSk7XG4gIH1cblxuICBvblNsaWRlc0xvYWQoKSB7XG4gICAgdGhpcy5zbGlkZXNMb2FkZWQgPSB0cnVlO1xuICAgIHRoaXMuZGlkT3Blbi5lbWl0KHRoaXMuaW5pdGlhbEltYWdlKTtcbiAgICB0aGlzLmFjdGl2ZUluZGV4ID0gdGhpcy5zd2lwZXIubmF0aXZlRWxlbWVudC5zd2lwZXIuYWN0aXZlSW5kZXg7XG4gICAgdGhpcy5pbml0aWFsSW1hZ2Uudmlld2VyU3RhdGUgPSAnaGlkZGVuJztcbiAgICB0aGlzLnN3aXBlci5uYXRpdmVFbGVtZW50LnN3aXBlci5vbignY2xpY2snLCAoKSA9PiB7XG4gICAgICB0aGlzLmhhbmRsZVNpbmdsZVRhcCgpO1xuICAgIH0pO1xuICB9XG5cbiAgZnVsbHNjcmVlbigpIHtcbiAgICBpZiAodGhpcy5pbkZ1bGxzY3JlZW4pIHtcbiAgICAgIHRoaXMuY2xvc2VGdWxsc2NyZWVuKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMub3BlbkZ1bGxzY3JlZW4oKTtcbiAgICB9XG4gIH1cblxuICBvcGVuRnVsbHNjcmVlbigpIHtcbiAgICBjb25zdCBlbGVtID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuICAgIGlmIChlbGVtLnJlcXVlc3RGdWxsc2NyZWVuKSB7XG4gICAgICBlbGVtLnJlcXVlc3RGdWxsc2NyZWVuKCk7XG4gICAgfSBlbHNlIGlmIChlbGVtWydtb3pSZXF1ZXN0RnVsbFNjcmVlbiddKSB7XG4gICAgICAvKiBGaXJlZm94ICovXG4gICAgICBlbGVtWydtb3pSZXF1ZXN0RnVsbFNjcmVlbiddKCk7XG4gICAgfSBlbHNlIGlmIChlbGVtWyd3ZWJraXRSZXF1ZXN0RnVsbHNjcmVlbiddKSB7XG4gICAgICAvKiBDaHJvbWUsIFNhZmFyaSBhbmQgT3BlcmEgKi9cbiAgICAgIGVsZW1bJ3dlYmtpdFJlcXVlc3RGdWxsc2NyZWVuJ10oKTtcbiAgICB9IGVsc2UgaWYgKGVsZW1bJ21zUmVxdWVzdEZ1bGxzY3JlZW4nXSkge1xuICAgICAgLyogSUUvRWRnZSAqL1xuICAgICAgZWxlbVsnbXNSZXF1ZXN0RnVsbHNjcmVlbiddKCk7XG4gICAgfVxuICAgIHRoaXMuaW5GdWxsc2NyZWVuID0gdHJ1ZTtcbiAgfVxuXG4gIGNsb3NlRnVsbHNjcmVlbigpIHtcbiAgICB0aGlzLmluRnVsbHNjcmVlbiA9IGZhbHNlO1xuXG4gICAgaWYgKHRoaXMuZG9jdW1lbnQuZXhpdEZ1bGxzY3JlZW4pIHtcbiAgICAgIHRoaXMuZG9jdW1lbnQuZXhpdEZ1bGxzY3JlZW4oKTtcbiAgICB9IGVsc2UgaWYgKHRoaXMuZG9jdW1lbnQubW96Q2FuY2VsRnVsbFNjcmVlbikge1xuICAgICAgLyogRmlyZWZveCAqL1xuICAgICAgdGhpcy5kb2N1bWVudC5tb3pDYW5jZWxGdWxsU2NyZWVuKCk7XG4gICAgfSBlbHNlIGlmICh0aGlzLmRvY3VtZW50LndlYmtpdEV4aXRGdWxsc2NyZWVuKSB7XG4gICAgICAvKiBDaHJvbWUsIFNhZmFyaSBhbmQgT3BlcmEgKi9cbiAgICAgIHRoaXMuZG9jdW1lbnQud2Via2l0RXhpdEZ1bGxzY3JlZW4oKTtcbiAgICB9IGVsc2UgaWYgKHRoaXMuZG9jdW1lbnQubXNFeGl0RnVsbHNjcmVlbikge1xuICAgICAgLyogSUUvRWRnZSAqL1xuICAgICAgdGhpcy5kb2N1bWVudC5tc0V4aXRGdWxsc2NyZWVuKCk7XG4gICAgfVxuICB9XG5cbiAgem9vbSgpIHtcbiAgICBpZiAodGhpcy56b29tZWRJbikge1xuICAgICAgdGhpcy56b29tT3V0KCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuem9vbUluKCk7XG4gICAgfVxuICB9XG5cbiAgem9vbUluKCkge1xuICAgIHRoaXMuc3dpcGVyLm5hdGl2ZUVsZW1lbnQuc3dpcGVyLnpvb20uaW4oKTtcbiAgICB0aGlzLnpvb21lZEluID0gdHJ1ZTtcbiAgfVxuXG4gIHpvb21PdXQoKSB7XG4gICAgdGhpcy5zd2lwZXIubmF0aXZlRWxlbWVudC5zd2lwZXIuem9vbS5vdXQoKTtcbiAgICB0aGlzLnpvb21lZEluID0gZmFsc2U7XG4gIH1cblxuICBoYW5kbGVTaW5nbGVUYXAoKSB7XG4gICAgdGhpcy5jb250cm9sc1Zpc2libGUgPSAhdGhpcy5jb250cm9sc1Zpc2libGU7XG4gICAgdGhpcy5jaGFuZ2UuZGV0ZWN0Q2hhbmdlcygpO1xuICB9XG5cbiAgaGlkZUNvbnRyb2xzKCkge1xuICAgIHRoaXMuY29udHJvbHNWaXNpYmxlID0gZmFsc2U7XG4gICAgdGhpcy5jaGFuZ2UuZGV0ZWN0Q2hhbmdlcygpO1xuICB9XG5cbiAgc2hvd0NvbnRyb2xzKCkge1xuICAgIHRoaXMuY29udHJvbHNWaXNpYmxlID0gdHJ1ZTtcbiAgICB0aGlzLmNoYW5nZS5kZXRlY3RDaGFuZ2VzKCk7XG4gIH1cbn1cbiJdfQ==