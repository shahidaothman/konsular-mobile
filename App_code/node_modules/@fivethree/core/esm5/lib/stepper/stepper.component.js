/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { FivStep } from './step/step.component';
import { EventEmitter, Component, ViewChildren, ContentChildren, QueryList, Input, ViewChild, Output } from '@angular/core';
import { FivStepContent } from './step-content/step-content.component';
import { FivStepperHorizontal } from './stepper-horizontal/stepper-horizontal.component';
var FivStepper = /** @class */ (function () {
    function FivStepper() {
        this.mode = 'vertical';
        this.fivClick = new EventEmitter();
        this.fivClose = new EventEmitter();
        this.currentIndex = 0;
    }
    /**
     * @return {?}
     */
    FivStepper.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @param {?} index
     * @return {?}
     */
    FivStepper.prototype.open = /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        if (this.mode === 'horizontal') {
            this.currentIndex = index;
            this.horizontal.open(index);
        }
        else {
            if (this.steps.toArray()[index]) {
                if (this.steps.toArray()[index].isOpen) {
                    this.close(index);
                }
                else {
                    this.currentIndex = index;
                    this.steps.toArray()[index].open();
                }
            }
            else {
            }
        }
    };
    /**
     * @return {?}
     */
    FivStepper.prototype.openFirst = /**
     * @return {?}
     */
    function () {
        this.open(0);
    };
    /**
     * @return {?}
     */
    FivStepper.prototype.openLast = /**
     * @return {?}
     */
    function () {
        this.open(this.steps.toArray().length - 1);
    };
    /**
     * @param {?} index
     * @param {?=} param
     * @return {?}
     */
    FivStepper.prototype.close = /**
     * @param {?} index
     * @param {?=} param
     * @return {?}
     */
    function (index, param) {
        this.param = param;
        if (this.mode === 'horizontal') {
            this.currentIndex = 0;
            this.horizontal.close();
        }
        else {
            this.currentIndex = -1;
            this.steps.toArray()[index].close();
        }
    };
    /**
     * @return {?}
     */
    FivStepper.prototype.closeFirst = /**
     * @return {?}
     */
    function () {
        this.close(0);
    };
    /**
     * @return {?}
     */
    FivStepper.prototype.closeLast = /**
     * @return {?}
     */
    function () {
        this.close(this.steps.toArray().length - 1);
    };
    /**
     * @param {?} index
     * @return {?}
     */
    FivStepper.prototype.select = /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        if (index >= 0 && index < this.contents.length) {
            if (this.mode === 'vertical') {
                this.closeAll();
            }
            this.open(index);
        }
    };
    /**
     * @return {?}
     */
    FivStepper.prototype.closeAll = /**
     * @return {?}
     */
    function () {
        if (this.mode === 'horizontal') {
            this.currentIndex = 0;
            this.horizontal.close();
        }
        else {
            this.steps.forEach((/**
             * @param {?} step
             * @return {?}
             */
            function (step) {
                step.close();
            }));
        }
    };
    /**
     * @return {?}
     */
    FivStepper.prototype.next = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var next = this.currentIndex < this.steps.length ? this.currentIndex + 1 : -1;
        this.select(next);
    };
    /**
     * @return {?}
     */
    FivStepper.prototype.previous = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var next = this.currentIndex > 0 ? this.currentIndex + -1 : -1;
        this.select(next);
    };
    /**
     * @param {?} index
     * @return {?}
     */
    FivStepper.prototype.completeStep = /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        if (this.mode === 'horizontal') {
            // not yet impletented
        }
        else {
            this.steps.toArray()[index].complete();
        }
    };
    /**
     * @param {?} index
     * @return {?}
     */
    FivStepper.prototype.completeAndCloseStep = /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        if (this.mode === 'horizontal') {
            // not yet impletented
        }
        else {
            this.steps.toArray()[index].completeAndClose();
        }
    };
    /**
     * @param {?} index
     * @return {?}
     */
    FivStepper.prototype.reset = /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        if (this.mode === 'horizontal') {
            // not yet impletented
        }
        else {
            this.steps.toArray()[index].reset();
        }
    };
    FivStepper.decorators = [
        { type: Component, args: [{
                    selector: 'fiv-stepper',
                    template: "<ion-list *ngIf=\"mode === 'vertical'\">\n  <fiv-step-content (fivDidClose)=\"fivClose.emit({index: i, param: param}); param = null;\" (fivClick)=\"fivClick.emit(i)\" *ngFor=\"let content of contents; let i = index; let l = last;\" [icon]=\"content.icon\" [index]=\"i + 1\"\n    [isLast]=\"l\" [title]=\"content.title\" [subtitle]=\"content.subtitle\" [isOpen]=\"content.open\">\n    <ng-container [ngTemplateOutlet]=\"content.content\"></ng-container>\n  </fiv-step-content>\n</ion-list>\n<div *ngIf=\"mode === 'horizontal'\">\n  <fiv-stepper-horizontal (fivSelect)=\"select($event)\" [contents]=\"contents\"></fiv-stepper-horizontal>\n</div>",
                    styles: [":host{display:block;width:100%}"]
                }] }
    ];
    /** @nocollapse */
    FivStepper.ctorParameters = function () { return []; };
    FivStepper.propDecorators = {
        contents: [{ type: ContentChildren, args: [FivStep,] }],
        steps: [{ type: ViewChildren, args: [FivStepContent,] }],
        horizontal: [{ type: ViewChild, args: [FivStepperHorizontal,] }],
        mode: [{ type: Input }],
        fivClick: [{ type: Output }],
        fivClose: [{ type: Output }]
    };
    return FivStepper;
}());
export { FivStepper };
if (false) {
    /** @type {?} */
    FivStepper.prototype.contents;
    /** @type {?} */
    FivStepper.prototype.steps;
    /** @type {?} */
    FivStepper.prototype.horizontal;
    /** @type {?} */
    FivStepper.prototype.mode;
    /** @type {?} */
    FivStepper.prototype.fivClick;
    /** @type {?} */
    FivStepper.prototype.fivClose;
    /** @type {?} */
    FivStepper.prototype.currentIndex;
    /** @type {?} */
    FivStepper.prototype.param;
}
//# sourceMappingURL=data:application/json;base64,