/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { FivIcon } from '../icon/icon.component';
import { Directive, Host, ElementRef, Input, Optional, TemplateRef, Output, EventEmitter } from '@angular/core';
import { FivOverlayService } from '../overlay/overlay.service';
import { FivFeatureDiscovery } from './feature-discovery.component';
import { first, filter } from 'rxjs/operators';
import { Platform } from '@ionic/angular';
var FivFeature = /** @class */ (function () {
    function FivFeature(host, icon, overlay, platform) {
        this.host = host;
        this.icon = icon;
        this.overlay = overlay;
        this.platform = platform;
        this.maxDiameter = 1080;
        this.diameter = Math.min(this.platform.width() * 2, this.maxDiameter);
        this.contentOffset = 20;
        this.featurePadding = 20;
        this.clickEnabled = true;
        this.fivFeatureClick = new EventEmitter();
        this.fivOpen = new EventEmitter();
        this.fivWillOpen = new EventEmitter();
        this.fivClose = new EventEmitter();
        this.fivWillClose = new EventEmitter();
        this.isOpen = false;
    }
    /**
     * @private
     * @param {?} nativeElement
     * @return {?}
     */
    FivFeature.prototype.getBounds = /**
     * @private
     * @param {?} nativeElement
     * @return {?}
     */
    function (nativeElement) {
        /** @type {?} */
        var bounds = nativeElement.getBoundingClientRect();
        return {
            top: bounds.top,
            left: bounds.left,
            height: nativeElement.clientHeight,
            width: nativeElement.clientWidth
        };
    };
    /**
     * @return {?}
     */
    FivFeature.prototype.show = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var bounds = this.icon
            ? this.getBounds(this.host.nativeElement.parentElement)
            : this.getBounds(this.host.nativeElement);
        this.overlayRef = this.overlay.createOverlay(FivFeatureDiscovery, this.fivFeature);
        /** @type {?} */
        var featureOverlay = this.overlayRef.instance;
        featureOverlay.height = this.diameter;
        featureOverlay.width = this.diameter;
        featureOverlay.featurePadding = this.featurePadding;
        featureOverlay.contentOffset = this.contentOffset;
        featureOverlay.setIcon(this.icon);
        featureOverlay.setBounds(bounds);
        featureOverlay.show();
        this.fivWillOpen.emit();
        featureOverlay.fivAnimation
            .pipe(filter((/**
         * @param {?} event
         * @return {?}
         */
        function (event) { return event.toState === 'visible'; })), first())
            .subscribe((/**
         * @return {?}
         */
        function () {
            _this.didOpen();
        }));
        featureOverlay.fivClick.pipe(first()).subscribe((/**
         * @return {?}
         */
        function () {
            _this.featureClick();
        }));
        featureOverlay.fivBackdropClick.pipe(first()).subscribe((/**
         * @return {?}
         */
        function () {
            _this.hide();
        }));
    };
    /**
     * @return {?}
     */
    FivFeature.prototype.hide = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.fivWillClose.emit();
        if (this.overlayRef) {
            this.overlayRef.instance.hide();
            this.overlayRef.instance.fivClose.pipe(first()).subscribe((/**
             * @return {?}
             */
            function () {
                _this.fivClose.emit();
                _this.isOpen = false;
                _this.overlayRef.destroy();
                _this.overlayRef = null;
            }));
        }
    };
    /**
     * @return {?}
     */
    FivFeature.prototype.didOpen = /**
     * @return {?}
     */
    function () {
        this.fivOpen.emit();
        this.isOpen = true;
    };
    /**
     * @return {?}
     */
    FivFeature.prototype.featureClick = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.overlayRef) {
            this.fivFeatureClick.emit();
            this.fivWillClose.emit();
            this.overlayRef.instance.featureClick();
            this.overlayRef.instance.fivClose.pipe(first()).subscribe((/**
             * @return {?}
             */
            function () {
                _this.fivClose.emit();
                _this.overlayRef.destroy();
                _this.overlayRef = null;
                if (_this.clickEnabled) {
                    _this.host.nativeElement.click();
                }
            }));
        }
    };
    FivFeature.decorators = [
        { type: Directive, args: [{
                    selector: '[fivFeature]',
                    exportAs: 'fivFeature'
                },] }
    ];
    /** @nocollapse */
    FivFeature.ctorParameters = function () { return [
        { type: ElementRef, decorators: [{ type: Host }] },
        { type: FivIcon, decorators: [{ type: Host }, { type: Optional }] },
        { type: FivOverlayService },
        { type: Platform }
    ]; };
    FivFeature.propDecorators = {
        maxDiameter: [{ type: Input }],
        diameter: [{ type: Input }],
        contentOffset: [{ type: Input }],
        featurePadding: [{ type: Input }],
        clickEnabled: [{ type: Input }],
        fivFeature: [{ type: Input }],
        fivFeatureClick: [{ type: Output }],
        fivOpen: [{ type: Output }],
        fivWillOpen: [{ type: Output }],
        fivClose: [{ type: Output }],
        fivWillClose: [{ type: Output }]
    };
    return FivFeature;
}());
export { FivFeature };
if (false) {
    /** @type {?} */
    FivFeature.prototype.maxDiameter;
    /** @type {?} */
    FivFeature.prototype.diameter;
    /** @type {?} */
    FivFeature.prototype.contentOffset;
    /** @type {?} */
    FivFeature.prototype.featurePadding;
    /** @type {?} */
    FivFeature.prototype.clickEnabled;
    /** @type {?} */
    FivFeature.prototype.fivFeature;
    /** @type {?} */
    FivFeature.prototype.overlayRef;
    /** @type {?} */
    FivFeature.prototype.fivFeatureClick;
    /** @type {?} */
    FivFeature.prototype.fivOpen;
    /** @type {?} */
    FivFeature.prototype.fivWillOpen;
    /** @type {?} */
    FivFeature.prototype.fivClose;
    /** @type {?} */
    FivFeature.prototype.fivWillClose;
    /** @type {?} */
    FivFeature.prototype.isOpen;
    /**
     * @type {?}
     * @private
     */
    FivFeature.prototype.host;
    /**
     * @type {?}
     * @private
     */
    FivFeature.prototype.icon;
    /**
     * @type {?}
     * @private
     */
    FivFeature.prototype.overlay;
    /**
     * @type {?}
     * @private
     */
    FivFeature.prototype.platform;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmVhdHVyZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZml2ZXRocmVlL2NvcmUvIiwic291cmNlcyI6WyJsaWIvZmVhdHVyZS1kaXNjb3ZlcnkvZmVhdHVyZS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUVqRCxPQUFPLEVBQ0wsU0FBUyxFQUNULElBQUksRUFDSixVQUFVLEVBQ1YsS0FBSyxFQUNMLFFBQVEsRUFFUixXQUFXLEVBQ1gsTUFBTSxFQUNOLFlBQVksRUFDYixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUMvRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNwRSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUUxQztJQXFCRSxvQkFDa0IsSUFBZ0IsRUFDSixJQUFhLEVBQ2pDLE9BQTBCLEVBQzFCLFFBQWtCO1FBSFYsU0FBSSxHQUFKLElBQUksQ0FBWTtRQUNKLFNBQUksR0FBSixJQUFJLENBQVM7UUFDakMsWUFBTyxHQUFQLE9BQU8sQ0FBbUI7UUFDMUIsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQXBCbkIsZ0JBQVcsR0FBRyxJQUFJLENBQUM7UUFDbkIsYUFBUSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ2pFLGtCQUFhLEdBQUcsRUFBRSxDQUFDO1FBQ25CLG1CQUFjLEdBQUcsRUFBRSxDQUFDO1FBQ3BCLGlCQUFZLEdBQUcsSUFBSSxDQUFDO1FBSW5CLG9CQUFlLEdBQUcsSUFB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RSxZQUFZO2lCQUN2Qjs7OztnQkFoQkMsVUFBVSx1QkFtQ1AsSUFBSTtnQkF4Q0EsT0FBTyx1QkF5Q1gsSUFBSSxZQUFJLFFBQVE7Z0JBNUJaLGlCQUFpQjtnQkFHakIsUUFBUTs7OzhCQU9kLEtBQUs7MkJBQ0wsS0FBSztnQ0FDTCxLQUFLO2lDQUNMLEtBQUs7K0JBQ0wsS0FBSzs2QkFDTCxLQUFLO2tDQUdMLE1BQU07MEJBQ04sTUFBTTs4QkFDTixNQUFNOzJCQUNOLE1BQU07K0JBQ04sTUFBTTs7SUF3RlQsaUJBQUM7Q0FBQSxBQXpHRCxJQXlHQztTQXJHWSxVQUFVOzs7SUFDckIsaUNBQTRCOztJQUM1Qiw4QkFBMEU7O0lBQzFFLG1DQUE0Qjs7SUFDNUIsb0NBQTZCOztJQUM3QixrQ0FBNkI7O0lBQzdCLGdDQUFzQzs7SUFDdEMsZ0NBQThDOztJQUU5QyxxQ0FBb0Q7O0lBQ3BELDZCQUE0Qzs7SUFDNUMsaUNBQWdEOztJQUNoRCw4QkFBNkM7O0lBQzdDLGtDQUFpRDs7SUFFakQsNEJBQWU7Ozs7O0lBR2IsMEJBQWdDOzs7OztJQUNoQywwQkFBeUM7Ozs7O0lBQ3pDLDZCQUFrQzs7Ozs7SUFDbEMsOEJBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRml2SWNvbiB9IGZyb20gJy4uL2ljb24vaWNvbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgRmVhdHVyZVBvc2l0aW9uIH0gZnJvbSAnLi4vaW50ZXJmYWNlcyc7XG5pbXBvcnQge1xuICBEaXJlY3RpdmUsXG4gIEhvc3QsXG4gIEVsZW1lbnRSZWYsXG4gIElucHV0LFxuICBPcHRpb25hbCxcbiAgQ29tcG9uZW50UmVmLFxuICBUZW1wbGF0ZVJlZixcbiAgT3V0cHV0LFxuICBFdmVudEVtaXR0ZXJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGaXZPdmVybGF5U2VydmljZSB9IGZyb20gJy4uL292ZXJsYXkvb3ZlcmxheS5zZXJ2aWNlJztcbmltcG9ydCB7IEZpdkZlYXR1cmVEaXNjb3ZlcnkgfSBmcm9tICcuL2ZlYXR1cmUtZGlzY292ZXJ5LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBmaXJzdCwgZmlsdGVyIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgUGxhdGZvcm0gfSBmcm9tICdAaW9uaWMvYW5ndWxhcic7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tmaXZGZWF0dXJlXScsXG4gIGV4cG9ydEFzOiAnZml2RmVhdHVyZSdcbn0pXG5leHBvcnQgY2xhc3MgRml2RmVhdHVyZSB7XG4gIEBJbnB1dCgpIG1heERpYW1ldGVyID0gMTA4MDtcbiAgQElucHV0KCkgZGlhbWV0ZXIgPSBNYXRoLm1pbih0aGlzLnBsYXRmb3JtLndpZHRoKCkgKiAyLCB0aGlzLm1heERpYW1ldGVyKTtcbiAgQElucHV0KCkgY29udGVudE9mZnNldCA9IDIwO1xuICBASW5wdXQoKSBmZWF0dXJlUGFkZGluZyA9IDIwO1xuICBASW5wdXQoKSBjbGlja0VuYWJsZWQgPSB0cnVlO1xuICBASW5wdXQoKSBmaXZGZWF0dXJlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICBvdmVybGF5UmVmOiBDb21wb25lbnRSZWY8Rml2RmVhdHVyZURpc2NvdmVyeT47XG5cbiAgQE91dHB1dCgpIGZpdkZlYXR1cmVDbGljayA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICBAT3V0cHV0KCkgZml2T3BlbiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICBAT3V0cHV0KCkgZml2V2lsbE9wZW4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgQE91dHB1dCgpIGZpdkNsb3NlID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gIEBPdXRwdXQoKSBmaXZXaWxsQ2xvc2UgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBpc09wZW4gPSBmYWxzZTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBASG9zdCgpIHByaXZhdGUgaG9zdDogRWxlbWVudFJlZixcbiAgICBASG9zdCgpIEBPcHRpb25hbCgpIHByaXZhdGUgaWNvbjogRml2SWNvbixcbiAgICBwcml2YXRlIG92ZXJsYXk6IEZpdk92ZXJsYXlTZXJ2aWNlLFxuICAgIHByaXZhdGUgcGxhdGZvcm06IFBsYXRmb3JtXG4gICkge31cblxuICBwcml2YXRlIGdldEJvdW5kcyhuYXRpdmVFbGVtZW50OiBhbnkpOiBGZWF0dXJlUG9zaXRpb24ge1xuICAgIGNvbnN0IGJvdW5kcyA9IG5hdGl2ZUVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIHRvcDogYm91bmRzLnRvcCxcbiAgICAgIGxlZnQ6IGJvdW5kcy5sZWZ0LFxuICAgICAgaGVpZ2h0OiBuYXRpdmVFbGVtZW50LmNsaWVudEhlaWdodCxcbiAgICAgIHdpZHRoOiBuYXRpdmVFbGVtZW50LmNsaWVudFdpZHRoXG4gICAgfTtcbiAgfVxuXG4gIHNob3coKSB7XG4gICAgY29uc3QgYm91bmRzID0gdGhpcy5pY29uXG4gICAgICA/IHRoaXMuZ2V0Qm91bmRzKHRoaXMuaG9zdC5uYXRpdmVFbGVtZW50LnBhcmVudEVsZW1lbnQpXG4gICAgICA6IHRoaXMuZ2V0Qm91bmRzKHRoaXMuaG9zdC5uYXRpdmVFbGVtZW50KTtcblxuICAgIHRoaXMub3ZlcmxheVJlZiA9IHRoaXMub3ZlcmxheS5jcmVhdGVPdmVybGF5KFxuICAgICAgRml2RmVhdHVyZURpc2NvdmVyeSxcbiAgICAgIHRoaXMuZml2RmVhdHVyZVxuICAgICk7XG4gICAgY29uc3QgZmVhdHVyZU92ZXJsYXkgPSB0aGlzLm92ZXJsYXlSZWYuaW5zdGFuY2U7XG4gICAgZmVhdHVyZU92ZXJsYXkuaGVpZ2h0ID0gdGhpcy5kaWFtZXRlcjtcbiAgICBmZWF0dXJlT3ZlcmxheS53aWR0aCA9IHRoaXMuZGlhbWV0ZXI7XG4gICAgZmVhdHVyZU92ZXJsYXkuZmVhdHVyZVBhZGRpbmcgPSB0aGlzLmZlYXR1cmVQYWRkaW5nO1xuICAgIGZlYXR1cmVPdmVybGF5LmNvbnRlbnRPZmZzZXQgPSB0aGlzLmNvbnRlbnRPZmZzZXQ7XG4gICAgZmVhdHVyZU92ZXJsYXkuc2V0SWNvbih0aGlzLmljb24pO1xuICAgIGZlYXR1cmVPdmVybGF5LnNldEJvdW5kcyhib3VuZHMpO1xuICAgIGZlYXR1cmVPdmVybGF5LnNob3coKTtcbiAgICB0aGlzLmZpdldpbGxPcGVuLmVtaXQoKTtcbiAgICBmZWF0dXJlT3ZlcmxheS5maXZBbmltYXRpb25cbiAgICAgIC5waXBlKFxuICAgICAgICBmaWx0ZXIoZXZlbnQgPT4gZXZlbnQudG9TdGF0ZSA9PT0gJ3Zpc2libGUnKSxcbiAgICAgICAgZmlyc3QoKVxuICAgICAgKVxuICAgICAgLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgIHRoaXMuZGlkT3BlbigpO1xuICAgICAgfSk7XG4gICAgZmVhdHVyZU92ZXJsYXkuZml2Q2xpY2sucGlwZShmaXJzdCgpKS5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgdGhpcy5mZWF0dXJlQ2xpY2soKTtcbiAgICB9KTtcbiAgICBmZWF0dXJlT3ZlcmxheS5maXZCYWNrZHJvcENsaWNrLnBpcGUoZmlyc3QoKSkuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgIHRoaXMuaGlkZSgpO1xuICAgIH0pO1xuICB9XG5cbiAgaGlkZSgpIHtcbiAgICB0aGlzLmZpdldpbGxDbG9zZS5lbWl0KCk7XG4gICAgaWYgKHRoaXMub3ZlcmxheVJlZikge1xuICAgICAgdGhpcy5vdmVybGF5UmVmLmluc3RhbmNlLmhpZGUoKTtcbiAgICAgIHRoaXMub3ZlcmxheVJlZi5pbnN0YW5jZS5maXZDbG9zZS5waXBlKGZpcnN0KCkpLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgIHRoaXMuZml2Q2xvc2UuZW1pdCgpO1xuICAgICAgICB0aGlzLmlzT3BlbiA9IGZhbHNlO1xuICAgICAgICB0aGlzLm92ZXJsYXlSZWYuZGVzdHJveSgpO1xuICAgICAgICB0aGlzLm92ZXJsYXlSZWYgPSBudWxsO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgZGlkT3BlbigpIHtcbiAgICB0aGlzLmZpdk9wZW4uZW1pdCgpO1xuICAgIHRoaXMuaXNPcGVuID0gdHJ1ZTtcbiAgfVxuXG4gIGZlYXR1cmVDbGljaygpIHtcbiAgICBpZiAodGhpcy5vdmVybGF5UmVmKSB7XG4gICAgICB0aGlzLmZpdkZlYXR1cmVDbGljay5lbWl0KCk7XG4gICAgICB0aGlzLmZpdldpbGxDbG9zZS5lbWl0KCk7XG4gICAgICB0aGlzLm92ZXJsYXlSZWYuaW5zdGFuY2UuZmVhdHVyZUNsaWNrKCk7XG4gICAgICB0aGlzLm92ZXJsYXlSZWYuaW5zdGFuY2UuZml2Q2xvc2UucGlwZShmaXJzdCgpKS5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICB0aGlzLmZpdkNsb3NlLmVtaXQoKTtcbiAgICAgICAgdGhpcy5vdmVybGF5UmVmLmRlc3Ryb3koKTtcbiAgICAgICAgdGhpcy5vdmVybGF5UmVmID0gbnVsbDtcbiAgICAgICAgaWYgKHRoaXMuY2xpY2tFbmFibGVkKSB7XG4gICAgICAgICAgdGhpcy5ob3N0Lm5hdGl2ZUVsZW1lbnQuY2xpY2soKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG59XG4iXX0=