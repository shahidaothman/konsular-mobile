/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { HostListener, ElementRef, Renderer2, HostBinding, EventEmitter, Component, Input, Output } from '@angular/core';
import { debounceTime } from 'rxjs/operators';
var FivRipple = /** @class */ (function () {
    function FivRipple(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        this.rippleAnimationEvent = new EventEmitter();
        this.round = false;
        this.hover = false;
        this.fivClick = new EventEmitter();
        this.rippleAnimationEvent.pipe(debounceTime(750)).subscribe((/**
         * @return {?}
         */
        function () {
            renderer.removeClass(el.nativeElement.querySelector('.ripple'), 'show');
            renderer.removeClass(el.nativeElement.querySelector('.rippleWrapper'), 'show');
        }));
    }
    /**
     * @param {?} event
     * @return {?}
     */
    FivRipple.prototype.clickEvent = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.ripple(event);
        this.fivClick.emit(event);
    };
    Object.defineProperty(FivRipple.prototype, "isRound", {
        get: /**
         * @return {?}
         */
        function () {
            return !!this.round;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FivRipple.prototype, "canHover", {
        get: /**
         * @return {?}
         */
        function () {
            return !!this.hover;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?=} event
     * @return {?}
     */
    FivRipple.prototype.ripple = /**
     * @param {?=} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var ripple = this.el.nativeElement.querySelector('.ripple');
        if (!ripple) {
            this.rippleFactory();
        }
        if (!event) {
            /** @type {?} */
            var target = this.el.nativeElement;
            /** @type {?} */
            var rect = target.getBoundingClientRect();
            /** @type {?} */
            var centerY = rect.top + rect.height / 2;
            /** @type {?} */
            var centerX = rect.left + rect.width / 2;
            event = { pageX: centerX, pageY: centerY };
        }
        this.rippleAnimation({ pageX: event.pageX, pageY: event.pageY });
        return;
    };
    /**
     * @return {?}
     */
    FivRipple.prototype.rippleFactory = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var target = this.el.nativeElement;
        /** @type {?} */
        var rect = target.getBoundingClientRect();
        /** @type {?} */
        var radius = Math.max(rect.width, rect.height) + 'px';
        /** @type {?} */
        var rippleWrapper = this.renderer.createElement('div');
        this.renderer.addClass(rippleWrapper, 'rippleWrapper');
        /** @type {?} */
        var ripple = this.renderer.createElement('span');
        this.renderer.addClass(ripple, 'ripple');
        this.renderer.setStyle(ripple, 'height', radius);
        this.renderer.setStyle(ripple, 'width', radius);
        this.renderer.appendChild(rippleWrapper, ripple);
        this.renderer.appendChild(target, rippleWrapper);
    };
    /**
     * @param {?} __0
     * @return {?}
     */
    FivRipple.prototype.rippleAnimation = /**
     * @param {?} __0
     * @return {?}
     */
    function (_a) {
        var pageX = _a.pageX, pageY = _a.pageY;
        /** @type {?} */
        var target = this.el.nativeElement;
        /** @type {?} */
        var rect = target.getBoundingClientRect();
        /** @type {?} */
        var ripple = target.querySelector('.ripple');
        /** @type {?} */
        var rippleWrapper = target.querySelector('.rippleWrapper');
        this.renderer.removeClass(rippleWrapper, 'show');
        this.renderer.removeClass(ripple, 'show');
        /** @type {?} */
        var left = pageX -
            rect.left -
            ripple.offsetWidth / 2 -
            document.body.scrollLeft +
            'px';
        /** @type {?} */
        var top = pageY -
            rect.top -
            ripple.offsetHeight / 2 -
            document.body.scrollTop +
            'px';
        this.renderer.setStyle(ripple, 'top', top);
        this.renderer.setStyle(ripple, 'left', left);
        this.renderer.addClass(rippleWrapper, 'show');
        this.renderer.addClass(ripple, 'show');
        this.rippleAnimationEvent.emit();
    };
    FivRipple.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: 'fiv-ripple, [fivRipple]',
                    template: "<ng-content></ng-content>",
                    styles: [":host{display:block;position:relative}:host:hover{cursor:pointer}:host.hover:hover{background-color:rgba(0,0,0,.1)}:host.round{border-radius:100%}.rippleWrapper{position:absolute;top:0;bottom:0;left:0;width:100%;overflow:hidden;border-radius:inherit}.rippleWrapper::before{content:'';display:block;height:100%;width:100%;-webkit-transform:scale(0);transform:scale(0)}.rippleWrapper.show::before{transition:opacity 1.5s;-webkit-transform:scale(2);transform:scale(2);opacity:0}.ripple{position:absolute;background:rgba(0,0,0,.1);border-radius:100%;-webkit-transform:scale(0);transform:scale(0)}.ripple.show{-webkit-animation:.75s ease-out ripple;animation:.75s ease-out ripple}@-webkit-keyframes ripple{to{-webkit-transform:scale(2);transform:scale(2);opacity:0}}@keyframes ripple{to{-webkit-transform:scale(2);transform:scale(2);opacity:0}}"]
                }] }
    ];
    /** @nocollapse */
    FivRipple.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    FivRipple.propDecorators = {
        round: [{ type: Input }],
        hover: [{ type: Input }],
        fivClick: [{ type: Output }],
        clickEvent: [{ type: HostListener, args: ['click', ['$event'],] }],
        isRound: [{ type: HostBinding, args: ['class.round',] }],
        canHover: [{ type: HostBinding, args: ['class.hover',] }]
    };
    return FivRipple;
}());
export { FivRipple };
if (false) {
    /**
     * @type {?}
     * @private
     */
    FivRipple.prototype.rippleAnimationEvent;
    /** @type {?} */
    FivRipple.prototype.round;
    /** @type {?} */
    FivRipple.prototype.hover;
    /** @type {?} */
    FivRipple.prototype.fivClick;
    /**
     * @type {?}
     * @private
     */
    FivRipple.prototype.el;
    /** @type {?} */
    FivRipple.prototype.renderer;
}
//# sourceMappingURL=data:application/json;base64,