/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, HostBinding, forwardRef, Output, EventEmitter, ViewChild } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { trigger, transition, style, animate } from '@angular/animations';
import { IonInput } from '@ionic/angular';
import { timer } from 'rxjs';
/** @type {?} */
export var CUSTOM_EDITIABLE_LABEL_CONTROL_VALUE_ACCESSOR = {
    provide: NG_VALUE_ACCESSOR,
    useExisting: forwardRef((/**
     * @return {?}
     */
    function () { return FivEditableLabel; })),
    multi: true
};
var FivEditableLabel = /** @class */ (function () {
    function FivEditableLabel() {
        this.type = 'label';
        this.disabled = false;
        this.blur = new EventEmitter();
    }
    Object.defineProperty(FivEditableLabel.prototype, "editing", {
        get: /**
         * @return {?}
         */
        function () {
            return this._editing;
        },
        set: /**
         * @param {?} edit
         * @return {?}
         */
        function (edit) {
            this._editing = edit;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FivEditableLabel.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        timer(0).subscribe((/**
         * @return {?}
         */
        function () { return (_this.internalValue = _this.value); }));
    };
    Object.defineProperty(FivEditableLabel.prototype, "internalValue", {
        get: /**
         * @return {?}
         */
        function () {
            return this._value;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value !== this._value) {
                this._value = value;
                if (this.onChangeCallback) {
                    this.onChangeCallback(this._value);
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FivEditableLabel.prototype.edit = /**
     * @return {?}
     */
    function () {
        this.editing = true;
    };
    /**
     * @return {?}
     */
    FivEditableLabel.prototype.stopEdit = /**
     * @return {?}
     */
    function () {
        this.editing = false;
    };
    /**
     * @return {?}
     */
    FivEditableLabel.prototype.onEscapeClick = /**
     * @return {?}
     */
    function () {
        this.internalValue = this.value;
        this.stopEdit();
    };
    /**
     * @return {?}
     */
    FivEditableLabel.prototype.onEnterClick = /**
     * @return {?}
     */
    function () {
        this.value = this.internalValue;
        this.stopEdit();
    };
    /**
     * @param {?} value
     * @return {?}
     */
    FivEditableLabel.prototype.writeValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (value !== undefined && value !== this._value) {
            this._value = value;
        }
    };
    /**
     * @return {?}
     */
    FivEditableLabel.prototype.onBlur = /**
     * @return {?}
     */
    function () {
        this.blur.emit();
        this.stopEdit();
        if (this.onTouchedCallback) {
            this.onTouchedCallback();
        }
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    FivEditableLabel.prototype.registerOnChange = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onChangeCallback = fn;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    FivEditableLabel.prototype.registerOnTouched = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onTouchedCallback = fn;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    FivEditableLabel.prototype.titleAnimDone = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (event.toState === 'void') {
            this.input.setFocus();
        }
    };
    FivEditableLabel.decorators = [
        { type: Component, args: [{
                    selector: 'fiv-editable-label',
                    template: "<!-- TODO if value is empty label or title can not be clicked, show placeholder?! -->\n<ion-title *ngIf=\"type === 'title' && !editing\" (click)=\"edit()\" (@titleAnim.done)=\"titleAnimDone($event)\" [@titleAnim]>\n    {{value}}</ion-title>\n<ion-label *ngIf=\"type === 'label' && !editing\" class=\"label\" (click)=\"edit()\" (@titleAnim.done)=\"titleAnimDone($event)\" [@titleAnim]>\n    {{value}}</ion-label>\n<ion-input *ngIf=\"editing\" [(ngModel)]=\"internalValue\" (blur)=\"onBlur()\" (keyup.enter)=\"onEnterClick()\"\n    (keyup.escape)=\"onEscapeClick()\" #input [@titleAnim] [ngClass]=\"{'title-input': type === 'title'}\">\n</ion-input>",
                    animations: [
                        trigger('titleAnim', [
                            transition('void => *', [
                                style({ opacity: '0', transform: 'translateY(-20%)' }),
                                animate('175ms ease-out', style({ opacity: '1', transform: 'translateY(0)' }))
                            ])
                        ])
                    ],
                    providers: [CUSTOM_EDITIABLE_LABEL_CONTROL_VALUE_ACCESSOR],
                    styles: [":host{width:100%}.label{max-width:100%}:host *{pointer-events:auto}:host(.editable-label-disabled){pointer-events:none}.title-input{font-size:20px;font-weight:500;color:var(--color)}"]
                }] }
    ];
    /** @nocollapse */
    FivEditableLabel.ctorParameters = function () { return []; };
    FivEditableLabel.propDecorators = {
        editing: [{ type: Input }],
        value: [{ type: Input }],
        type: [{ type: Input }],
        disabled: [{ type: HostBinding, args: ['class.editable-label-disabled',] }, { type: Input }],
        blur: [{ type: Output }],
        input: [{ type: ViewChild, args: ['input',] }]
    };
    return FivEditableLabel;
}());
export { FivEditableLabel };
if (false) {
    /** @type {?} */
    FivEditableLabel.prototype.value;
    /** @type {?} */
    FivEditableLabel.prototype.type;
    /** @type {?} */
    FivEditableLabel.prototype.disabled;
    /** @type {?} */
    FivEditableLabel.prototype.blur;
    /** @type {?} */
    FivEditableLabel.prototype.input;
    /**
     * @type {?}
     * @private
     */
    FivEditableLabel.prototype._editing;
    /**
     * @type {?}
     * @private
     */
    FivEditableLabel.prototype._value;
    /**
     * @type {?}
     * @private
     */
    FivEditableLabel.prototype.onTouchedCallback;
    /**
     * @type {?}
     * @private
     */
    FivEditableLabel.prototype.onChangeCallback;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRpdGFibGUtbGFiZWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZpdmV0aHJlZS9jb3JlLyIsInNvdXJjZXMiOlsibGliL2VkaXRhYmxlLWxhYmVsL2VkaXRhYmxlLWxhYmVsLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxLQUFLLEVBQ0wsV0FBVyxFQUNYLFVBQVUsRUFFVixNQUFNLEVBQ04sWUFBWSxFQUNaLFNBQVMsRUFDVixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQXdCLGlCQUFpQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDekUsT0FBTyxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUMxQyxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sTUFBTSxDQUFDOztBQUU3QixNQUFNLEtBQU8sNkNBQTZDLEdBQVE7SUFDaEUsT0FBTyxFQUFFLGlCQUFpQjtJQUMxQixXQUFXLEVBQUUsVUFBVTs7O0lBQUMsY0FBTSxPQUFBLGdCQUFnQixFQUFoQixDQUFnQixFQUFDO0lBQy9DLEtBQUssRUFBRSxJQUFJO0NBQ1o7QUFFRDtJQTBDRTtRQWRTLFNBQUksR0FBc0IsT0FBTyxDQUFDO1FBRzNDLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFFUCxTQUFJLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQVNyQixDQUFDO0lBdkJoQixzQkFDSSxxQ0FBTzs7OztRQURYO1lBRUUsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQ3ZCLENBQUM7Ozs7O1FBQ0QsVUFBWSxJQUFhO1lBQ3ZCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1FBQ3ZCLENBQUM7OztPQUhBOzs7O0lBc0JELDZDQUFrQjs7O0lBQWxCO1FBQUEsaUJB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QkFBK0IsY0FDM0MsS0FBSzt1QkFHTCxNQUFNO3dCQUVOLFNBQVMsU0FBQyxPQUFPOztJQXNFcEIsdUJBQUM7Q0FBQSxBQXpHRCxJQXlHQztTQXhGWSxnQkFBZ0I7OztJQVUzQixpQ0FBdUI7O0lBQ3ZCLGdDQUEyQzs7SUFDM0Msb0NBRWlCOztJQUVqQixnQ0FBb0M7O0lBRXBDLGlDQUFvQzs7Ozs7SUFFcEMsb0NBQTBCOzs7OztJQUMxQixrQ0FBdUI7Ozs7O0lBQ3ZCLDZDQUFvQzs7Ozs7SUFDcEMsNENBQXlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBJbnB1dCxcbiAgSG9zdEJpbmRpbmcsXG4gIGZvcndhcmRSZWYsXG4gIEFmdGVyQ29udGVudEluaXQsXG4gIE91dHB1dCxcbiAgRXZlbnRFbWl0dGVyLFxuICBWaWV3Q2hpbGRcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb250cm9sVmFsdWVBY2Nlc3NvciwgTkdfVkFMVUVfQUNDRVNTT1IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyB0cmlnZ2VyLCB0cmFuc2l0aW9uLCBzdHlsZSwgYW5pbWF0ZSB9IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xuaW1wb3J0IHsgSW9uSW5wdXQgfSBmcm9tICdAaW9uaWMvYW5ndWxhcic7XG5pbXBvcnQgeyB0aW1lciB9IGZyb20gJ3J4anMnO1xuXG5leHBvcnQgY29uc3QgQ1VTVE9NX0VESVRJQUJMRV9MQUJFTF9DT05UUk9MX1ZBTFVFX0FDQ0VTU09SOiBhbnkgPSB7XG4gIHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxuICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBGaXZFZGl0YWJsZUxhYmVsKSxcbiAgbXVsdGk6IHRydWVcbn07XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Zpdi1lZGl0YWJsZS1sYWJlbCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9lZGl0YWJsZS1sYWJlbC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2VkaXRhYmxlLWxhYmVsLmNvbXBvbmVudC5zY3NzJ10sXG4gIGFuaW1hdGlvbnM6IFtcbiAgICB0cmlnZ2VyKCd0aXRsZUFuaW0nLCBbXG4gICAgICB0cmFuc2l0aW9uKCd2b2lkID0+IConLCBbXG4gICAgICAgIHN0eWxlKHsgb3BhY2l0eTogJzAnLCB0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKC0yMCUpJyB9KSxcbiAgICAgICAgYW5pbWF0ZShcbiAgICAgICAgICAnMTc1bXMgZWFzZS1vdXQnLFxuICAgICAgICAgIHN0eWxlKHsgb3BhY2l0eTogJzEnLCB0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKDApJyB9KVxuICAgICAgICApXG4gICAgICBdKVxuICAgIF0pXG4gIF0sXG4gIHByb3ZpZGVyczogW0NVU1RPTV9FRElUSUFCTEVfTEFCRUxfQ09OVFJPTF9WQUxVRV9BQ0NFU1NPUl1cbn0pXG5leHBvcnQgY2xhc3MgRml2RWRpdGFibGVMYWJlbFxuICBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQsIENvbnRyb2xWYWx1ZUFjY2Vzc29yIHtcbiAgQElucHV0KClcbiAgZ2V0IGVkaXRpbmcoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2VkaXRpbmc7XG4gIH1cbiAgc2V0IGVkaXRpbmcoZWRpdDogYm9vbGVhbikge1xuICAgIHRoaXMuX2VkaXRpbmcgPSBlZGl0O1xuICB9XG5cbiAgQElucHV0KCkgdmFsdWU6IHN0cmluZztcbiAgQElucHV0KCkgdHlwZTogJ3RpdGxlJyB8ICdsYWJlbCcgPSAnbGFiZWwnO1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmVkaXRhYmxlLWxhYmVsLWRpc2FibGVkJylcbiAgQElucHV0KClcbiAgZGlzYWJsZWQgPSBmYWxzZTtcblxuICBAT3V0cHV0KCkgYmx1ciA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBAVmlld0NoaWxkKCdpbnB1dCcpIGlucHV0OiBJb25JbnB1dDtcblxuICBwcml2YXRlIF9lZGl0aW5nOiBib29sZWFuO1xuICBwcml2YXRlIF92YWx1ZTogc3RyaW5nO1xuICBwcml2YXRlIG9uVG91Y2hlZENhbGxiYWNrOiAoKSA9PiB7fTtcbiAgcHJpdmF0ZSBvbkNoYW5nZUNhbGxiYWNrOiAoXzogYW55KSA9PiB7fTtcblxuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgbmdBZnRlckNvbnRlbnRJbml0KCkge1xuICAgIHRpbWVyKDApLnN1YnNjcmliZSgoKSA9PiAodGhpcy5pbnRlcm5hbFZhbHVlID0gdGhpcy52YWx1ZSkpO1xuICB9XG5cbiAgc2V0IGludGVybmFsVmFsdWUodmFsdWU6IHN0cmluZykge1xuICAgIGlmICh2YWx1ZSAhPT0gdGhpcy5fdmFsdWUpIHtcbiAgICAgIHRoaXMuX3ZhbHVlID0gdmFsdWU7XG4gICAgICBpZiAodGhpcy5vbkNoYW5nZUNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMub25DaGFuZ2VDYWxsYmFjayh0aGlzLl92YWx1ZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGdldCBpbnRlcm5hbFZhbHVlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX3ZhbHVlO1xuICB9XG5cbiAgZWRpdCgpIHtcbiAgICB0aGlzLmVkaXRpbmcgPSB0cnVlO1xuICB9XG5cbiAgc3RvcEVkaXQoKSB7XG4gICAgdGhpcy5lZGl0aW5nID0gZmFsc2U7XG4gIH1cblxuICBvbkVzY2FwZUNsaWNrKCkge1xuICAgIHRoaXMuaW50ZXJuYWxWYWx1ZSA9IHRoaXMudmFsdWU7XG4gICAgdGhpcy5zdG9wRWRpdCgpO1xuICB9XG5cbiAgb25FbnRlckNsaWNrKCkge1xuICAgIHRoaXMudmFsdWUgPSB0aGlzLmludGVybmFsVmFsdWU7XG4gICAgdGhpcy5zdG9wRWRpdCgpO1xuICB9XG5cbiAgd3JpdGVWYWx1ZSh2YWx1ZTogYW55KSB7XG4gICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQgJiYgdmFsdWUgIT09IHRoaXMuX3ZhbHVlKSB7XG4gICAgICB0aGlzLl92YWx1ZSA9IHZhbHVlO1xuICAgIH1cbiAgfVxuXG4gIG9uQmx1cigpIHtcbiAgICB0aGlzLmJsdXIuZW1pdCgpO1xuICAgIHRoaXMuc3RvcEVkaXQoKTtcbiAgICBpZiAodGhpcy5vblRvdWNoZWRDYWxsYmFjaykge1xuICAgICAgdGhpcy5vblRvdWNoZWRDYWxsYmFjaygpO1xuICAgIH1cbiAgfVxuXG4gIHJlZ2lzdGVyT25DaGFuZ2UoZm46IGFueSkge1xuICAgIHRoaXMub25DaGFuZ2VDYWxsYmFjayA9IGZuO1xuICB9XG5cbiAgcmVnaXN0ZXJPblRvdWNoZWQoZm46IGFueSkge1xuICAgIHRoaXMub25Ub3VjaGVkQ2FsbGJhY2sgPSBmbjtcbiAgfVxuXG4gIHRpdGxlQW5pbURvbmUoZXZlbnQpIHtcbiAgICBpZiAoZXZlbnQudG9TdGF0ZSA9PT0gJ3ZvaWQnKSB7XG4gICAgICB0aGlzLmlucHV0LnNldEZvY3VzKCk7XG4gICAgfVxuICB9XG59XG4iXX0=