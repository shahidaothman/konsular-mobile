/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild, TemplateRef, Input } from '@angular/core';
import { FivOverlayContent } from './overlay-content/overlay-content.component';
import { FivOverlayService } from './overlay.service';
var FivOverlay = /** @class */ (function () {
    function FivOverlay(overlay) {
        this.overlay = overlay;
        this._open = false;
    }
    /**
     * @param {?=} priority
     * @return {?}
     */
    FivOverlay.prototype.show = /**
     * @param {?=} priority
     * @return {?}
     */
    function (priority) {
        if (!this.componentRef) {
            this.componentRef = this.overlay.createOverlay(FivOverlayContent, this.ngContent);
            this._open = true;
            this.componentRef.instance.priority = priority;
            return this.componentRef.instance;
        }
    };
    /**
     * @return {?}
     */
    FivOverlay.prototype.hide = /**
     * @return {?}
     */
    function () {
        if (this.componentRef) {
            this.componentRef.destroy();
            this.componentRef = null;
            this._open = false;
        }
    };
    Object.defineProperty(FivOverlay.prototype, "open", {
        get: /**
         * @return {?}
         */
        function () {
            return this._open;
        },
        enumerable: true,
        configurable: true
    });
    FivOverlay.decorators = [
        { type: Component, args: [{
                    selector: 'fiv-overlay',
                    template: "<ng-template #content>\n  <ng-content></ng-content>\n</ng-template>",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    FivOverlay.ctorParameters = function () { return [
        { type: FivOverlayService }
    ]; };
    FivOverlay.propDecorators = {
        ngContent: [{ type: ViewChild, args: ['content',] }],
        priority: [{ type: Input }]
    };
    return FivOverlay;
}());
export { FivOverlay };
if (false) {
    /**
     * @type {?}
     * @private
     */
    FivOverlay.prototype.componentRef;
    /** @type {?} */
    FivOverlay.prototype.ngContent;
    /** @type {?} */
    FivOverlay.prototype.priority;
    /**
     * @type {?}
     * @private
     */
    FivOverlay.prototype._open;
    /**
     * @type {?}
     * @private
     */
    FivOverlay.prototype.overlay;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3ZlcmxheS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZml2ZXRocmVlL2NvcmUvIiwic291cmNlcyI6WyJsaWIvb3ZlcmxheS9vdmVybGF5LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxTQUFTLEVBRVQsV0FBVyxFQUNYLEtBQUssRUFDTixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUNoRixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUV0RDtJQVlFLG9CQUFvQixPQUEwQjtRQUExQixZQUFPLEdBQVAsT0FBTyxDQUFtQjtRQUZ0QyxVQUFLLEdBQUcsS0FBSyxDQUFDO0lBRTJCLENBQUM7Ozs7O0lBRWxELHlCQUFJOzs7O0lBQUosVUFBSyxRQUFpQjtRQUNwQixJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRTtZQUN0QixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUM1QyxpQkFBaUIsRUFDakIsSUFBSSxDQUFDLFNBQVMsQ0FDZixDQUFDO1lBQ0YsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7WUFDbEIsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztZQUMvQyxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDO1NBQ25DO0lBQ0gsQ0FBQzs7OztJQUVELHlCQUFJOzs7SUFBSjtRQUNFLElBQUksSUFBSSxDQUFDLFlBQVksRUFBRTtZQUNyQixJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQzVCLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO1lBQ3pCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1NBQ3BCO0lBQ0gsQ0FBQztJQUVELHNCQUFJLDRCQUFJOzs7O1FBQVI7WUFDRSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDcEIsQ0FBQzs7O09BQUE7O2dCQXBDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGFBQWE7b0JBQ3ZCLCtFQUF1Qzs7aUJBRXhDOzs7O2dCQU5RLGlCQUFpQjs7OzRCQVV2QixTQUFTLFNBQUMsU0FBUzsyQkFDbkIsS0FBSzs7SUE0QlIsaUJBQUM7Q0FBQSxBQXJDRCxJQXFDQztTQWhDWSxVQUFVOzs7Ozs7SUFDckIsa0NBQXNEOztJQUV0RCwrQkFBa0Q7O0lBQ2xELDhCQUFrQjs7Ozs7SUFDbEIsMkJBQXNCOzs7OztJQUVWLDZCQUFrQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgVmlld0NoaWxkLFxuICBDb21wb25lbnRSZWYsXG4gIFRlbXBsYXRlUmVmLFxuICBJbnB1dFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZpdk92ZXJsYXlDb250ZW50IH0gZnJvbSAnLi9vdmVybGF5LWNvbnRlbnQvb3ZlcmxheS1jb250ZW50LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBGaXZPdmVybGF5U2VydmljZSB9IGZyb20gJy4vb3ZlcmxheS5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZml2LW92ZXJsYXknLFxuICB0ZW1wbGF0ZVVybDogJy4vb3ZlcmxheS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL292ZXJsYXkuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBGaXZPdmVybGF5IHtcbiAgcHJpdmF0ZSBjb21wb25lbnRSZWY6IENvbXBvbmVudFJlZjxGaXZPdmVybGF5Q29udGVudD47XG5cbiAgQFZpZXdDaGlsZCgnY29udGVudCcpIG5nQ29udGVudDogVGVtcGxhdGVSZWY8YW55PjtcbiAgQElucHV0KCkgcHJpb3JpdHk7XG4gIHByaXZhdGUgX29wZW4gPSBmYWxzZTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG92ZXJsYXk6IEZpdk92ZXJsYXlTZXJ2aWNlKSB7fVxuXG4gIHNob3cocHJpb3JpdHk/OiBudW1iZXIpIHtcbiAgICBpZiAoIXRoaXMuY29tcG9uZW50UmVmKSB7XG4gICAgICB0aGlzLmNvbXBvbmVudFJlZiA9IHRoaXMub3ZlcmxheS5jcmVhdGVPdmVybGF5KFxuICAgICAgICBGaXZPdmVybGF5Q29udGVudCxcbiAgICAgICAgdGhpcy5uZ0NvbnRlbnRcbiAgICAgICk7XG4gICAgICB0aGlzLl9vcGVuID0gdHJ1ZTtcbiAgICAgIHRoaXMuY29tcG9uZW50UmVmLmluc3RhbmNlLnByaW9yaXR5ID0gcHJpb3JpdHk7XG4gICAgICByZXR1cm4gdGhpcy5jb21wb25lbnRSZWYuaW5zdGFuY2U7XG4gICAgfVxuICB9XG5cbiAgaGlkZSgpIHtcbiAgICBpZiAodGhpcy5jb21wb25lbnRSZWYpIHtcbiAgICAgIHRoaXMuY29tcG9uZW50UmVmLmRlc3Ryb3koKTtcbiAgICAgIHRoaXMuY29tcG9uZW50UmVmID0gbnVsbDtcbiAgICAgIHRoaXMuX29wZW4gPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBnZXQgb3BlbigpIHtcbiAgICByZXR1cm4gdGhpcy5fb3BlbjtcbiAgfVxufVxuIl19