import { FivFeatureDiscovery } from './../feature-discovery/feature-discovery.component';
import { FivLoadingProgressBar } from './../loading-progress-bar/loading-progress-bar.component';
import { FivIcon } from './../icon/icon.component';
import { OnInit, EventEmitter, Renderer2, OnDestroy, AfterContentInit, TemplateRef } from '@angular/core';
import { FivLoadingSpinner } from '../loading-spinner/loading-spinner.component';
import { IonContent, IonLabel } from '@ionic/angular';
import { Subject } from 'rxjs';
export declare class FivFab implements OnInit, OnDestroy, AfterContentInit {
    private renderer;
    private content;
    vertical?: 'top' | 'middle' | 'bottom' | 'none';
    horizontal?: 'center' | 'start' | 'end' | 'none';
    mode?: 'normal' | 'edge';
    slot: string;
    icon: string;
    spinColor: string;
    color: string;
    disabled: boolean;
    visible: boolean;
    pulse: boolean;
    scroll: boolean;
    _scroll: boolean;
    feature: TemplateRef<any>;
    fivComplete: EventEmitter<FivFab>;
    fivRefresh: EventEmitter<FivFab>;
    fivHidden: EventEmitter<FivFab>;
    fivShow: EventEmitter<FivFab>;
    fivTransition: EventEmitter<FivFab>;
    spinner: FivLoadingSpinner;
    featureDiscovery: FivFeatureDiscovery;
    bar: FivLoadingProgressBar;
    iconComp: FivIcon;
    labelComp: IonLabel;
    loading: boolean;
    extended: boolean;
    iconState: string;
    currentDeltaY: number;
    $onDestroy: Subject<{}>;
    params: {
        fromTransform: string;
        toTransform: string;
    };
    readonly fromTransform: "scale(0)" | "scale(0) translateX(-50%)";
    readonly toTransform: "scale(1)" | "translateX(-50%) scale(1)";
    constructor(renderer: Renderer2, content: IonContent);
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngAfterContentInit(): void;
    load(): void;
    unload(): void;
    complete(): void;
    fillAnimationDone(): void;
    rotate(progress: number): void;
    fabAnimDone(event: any): void;
}
export interface FabTransitionEvent {
    from: FabState;
    to: FabState;
}
export declare enum FabState {
    HIDDEN = 0,
    NORMAL = 1,
    EXTENDED = 2
}
