/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ElementRef, ViewChild, Output, EventEmitter } from '@angular/core';
import { trigger, transition, style, animate, state, keyframes } from '@angular/animations';
import { FivOverlay } from '../../overlay/overlay.component';
export class FivGalleryImage {
    constructor() {
        this.viewerState = 'in';
        this.backdropColor = 'rgb(0,0,0)';
        this.openTiming = '300ms';
        this.closeTiming = '340ms';
        this.willOpen = new EventEmitter();
        this.didOpen = new EventEmitter();
        this.didClose = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @return {?}
     */
    open() {
        this.willOpen.emit(this);
        /** @type {?} */
        const p = this.getThumbnailPosition(this.image);
        this.animationParams = {
            translate: p.translate,
            timing: this.openTiming,
            height: p.height,
            width: p.width,
            top: p.top,
            left: p.left
        };
        this.overlay.show(49999);
    }
    /**
     * @param {?} position
     * @return {?}
     */
    close(position) {
        /** @type {?} */
        const p = this.getThumbnailPosition(this.image);
        this.animationParams = {
            translate: position.translate,
            timing: this.closeTiming,
            height: p.height,
            width: p.width,
            top: p.top,
            left: p.left
        };
        this.viewerState = 'out';
    }
    /**
     * @param {?} position
     * @param {?} src
     * @return {?}
     */
    slideOut(position, src) {
        this.originalSrc = src;
        /** @type {?} */
        const p = this.getThumbnailPosition(this.image);
        this.animationParams = {
            translate: position.translate,
            timing: this.closeTiming,
            height: p.height,
            width: p.width,
            top: p.top,
            left: p.left
        };
        this.viewerState = 'slideout';
    }
    /**
     * @param {?} event
     * @return {?}
     */
    handleViewerAnimation(event) {
        if (event.fromState === 'void' && event.toState === 'in') {
            this.didOpen.emit(this);
        }
        if ((event.fromState === 'in' || event.fromState === 'hidden') &&
            (event.toState === 'out' || event.toState === 'slideout')) {
            this.overlay.hide();
            this.didClose.emit(this);
            this.viewerState = 'in';
        }
        if (event.toState === 'slideout') {
            this.src = this.originalSrc;
        }
    }
    /**
     * @private
     * @param {?} element
     * @return {?}
     */
    getThumbnailPosition(element) {
        /** @type {?} */
        const bounds = element.nativeElement.getBoundingClientRect();
        return {
            top: bounds.top,
            left: bounds.left,
            height: element.nativeElement.clientHeight,
            width: element.nativeElement.clientWidth
        };
    }
}
FivGalleryImage.decorators = [
    { type: Component, args: [{
                selector: 'fiv-gallery-image',
                template: "<ng-container *ngIf=\"!overlay.open && !src\">\n  <ng-content></ng-content>\n</ng-container>\n\n<img #thumbnail [ngClass]=\"{'hidden': (overlay.open || !src)}\" class=\"thumbnail\" [src]=\"src\" (click)=\"open()\">\n<fiv-overlay #overlay>\n\n  <div [style.backgroundColor]=\"backdropColor\"\n    *ngIf=\"overlay.open && viewerState !== 'out' && viewerState !== 'slideout'\" [@fade]=\"viewerState\" class=\"backdrop\">\n  </div>\n\n  <img *ngIf=\"overlay.open\" class=\"viewer-image\" (@image.done)=\"handleViewerAnimation($event)\"\n    [@image]=\"{ value: viewerState, params : animationParams}\" [src]=\"src\">\n\n</fiv-overlay>",
                animations: [
                    trigger('image', [
                        transition('* => in', [
                            style({
                                position: 'absolute',
                                top: '{{top}}px',
                                left: '{{left}}px',
                                transform: 'translate(0%,0%)',
                                height: '{{height}}px',
                                width: '{{width}}px',
                                opacity: 1,
                                borderRadius: '*'
                            }),
                            animate('{{timing}}', style({
                                position: 'absolute',
                                top: '50%',
                                left: '50%',
                                transform: 'translate(-50%,-50%)',
                                height: '*',
                                width: '*',
                                opacity: 1,
                                borderRadius: '0'
                            }))
                        ], {
                            params: {
                                top: '0',
                                left: '0',
                                height: '*',
                                width: '*',
                                timing: '300ms'
                            }
                        }),
                        transition('* => out', [
                            style({
                                position: 'absolute',
                                top: '{{translate}}px',
                                left: '50%',
                                transform: 'translate(-50%,-50%)',
                                height: '*',
                                width: '*',
                                opacity: 1,
                                borderRadius: '0'
                            }),
                            animate('{{timing}}', style({
                                position: 'absolute',
                                top: '{{top}}px',
                                left: '{{left}}px',
                                transform: 'translate(0%,0%)',
                                height: '{{height}}px',
                                width: '{{width}}px',
                                opacity: 1,
                                borderRadius: '*'
                            }))
                        ], {
                            params: {
                                top: '0',
                                left: '0',
                                height: '*',
                                width: '*',
                                translate: '0',
                                timing: '340ms'
                            }
                        }),
                        state('hidden', style({ opacity: 0 })),
                        transition('* => slideout', [
                            style({
                                position: 'absolute',
                                top: '{{translate}}px',
                                left: '50%',
                                transform: 'translate(-50%,-50%)',
                                opacity: 1,
                                borderRadius: '0'
                            }),
                            animate('{{timing}}', style({
                                transform: 'translate(-50%,100%)',
                                opacity: 0.2,
                                borderRadius: '0'
                            }))
                        ], {
                            params: {
                                top: '0',
                                left: '0',
                                height: '*',
                                width: '*',
                                translate: '0',
                                timing: '340ms'
                            }
                        })
                    ]),
                    trigger('fade', [
                        transition('void => *', [
                            style({ opacity: 0 }),
                            animate('180ms', keyframes([
                                style({ opacity: 0, offset: 0 }),
                                style({ opacity: 0.3, offset: 0.75 }),
                                style({ opacity: 0.97, offset: 1 })
                            ]))
                        ]),
                        transition(':leave', [
                            style({ opacity: 0.97 }),
                            animate('180ms', keyframes([
                                style({ opacity: 0.97, offset: 0 }),
                                style({ opacity: 0.6, offset: 0.8 }),
                                style({ opacity: 0, offset: 1 })
                            ]))
                        ])
                    ])
                ],
                styles: [":host{display:block;--max-height:100%;--border-radius:0px;min-height:var(--max-height);--background:var(--ion-color-light);background:var(--background)}.backdrop{width:100vw;height:100vh;opacity:.97;position:absolute;transition:background-color .3s}.thumbnail{-o-object-position:center;object-position:center;-o-object-fit:cover;object-fit:cover;display:block;height:var(--height,auto);max-height:var(--max-height);width:var(--width,100%);border-radius:var(--border-radius)}.hidden{opacity:0}.viewer-image{-o-object-position:center;object-position:center;-o-object-fit:cover;object-fit:cover;position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);height:auto;max-height:100%;width:auto;max-width:100%;border-radius:var(--border-radius)}"]
            }] }
];
/** @nocollapse */
FivGalleryImage.ctorParameters = () => [];
FivGalleryImage.propDecorators = {
    src: [{ type: Input }],
    image: [{ type: ViewChild, args: ['thumbnail',] }],
    overlay: [{ type: ViewChild, args: ['overlay',] }],
    willOpen: [{ type: Output }],
    didOpen: [{ type: Output }],
    didClose: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    FivGalleryImage.prototype.src;
    /** @type {?} */
    FivGalleryImage.prototype.originalSrc;
    /** @type {?} */
    FivGalleryImage.prototype.index;
    /** @type {?} */
    FivGalleryImage.prototype.image;
    /** @type {?} */
    FivGalleryImage.prototype.overlay;
    /** @type {?} */
    FivGalleryImage.prototype.viewerState;
    /** @type {?} */
    FivGalleryImage.prototype.animationParams;
    /** @type {?} */
    FivGalleryImage.prototype.backdropColor;
    /** @type {?} */
    FivGalleryImage.prototype.openTiming;
    /** @type {?} */
    FivGalleryImage.prototype.closeTiming;
    /** @type {?} */
    FivGalleryImage.prototype.willOpen;
    /** @type {?} */
    FivGalleryImage.prototype.didOpen;
    /** @type {?} */
    FivGalleryImage.prototype.didClose;
}
export class Position {
}
if (false) {
    /** @type {?} */
    Position.prototype.top;
    /** @type {?} */
    Position.prototype.left;
    /** @type {?} */
    Position.prototype.height;
    /** @type {?} */
    Position.prototype.width;
    /** @type {?} */
    Position.prototype.translate;
}
/**
 * @record
 */
export function AnimationParams() { }
if (false) {
    /** @type {?} */
    AnimationParams.prototype.timing;
}
//# sourceMappingURL=data:application/json;base64,