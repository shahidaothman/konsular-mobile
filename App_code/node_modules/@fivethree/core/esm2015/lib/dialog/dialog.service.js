/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { FivOverlayService } from '../overlay/overlay.service';
import { FivDialog } from '../dialog/dialog.component';
import * as i0 from "@angular/core";
import * as i1 from "../overlay/overlay.service";
/**
 * @record
 */
export function DialogOptions() { }
if (false) {
    /** @type {?} */
    DialogOptions.prototype.verticalAlign;
    /** @type {?} */
    DialogOptions.prototype.horizontalAlign;
    /** @type {?} */
    DialogOptions.prototype.shape;
    /** @type {?} */
    DialogOptions.prototype.backdrop;
    /** @type {?} */
    DialogOptions.prototype.duration;
}
export class FivDialogService {
    /**
     * @param {?} overlay
     */
    constructor(overlay) {
        this.overlay = overlay;
    }
    /**
     * @param {?} content
     * @param {?=} options
     * @return {?}
     */
    openDialog(content, options) {
        /** @type {?} */
        const c = this.overlay.createOverlay(FivDialog, content);
        c.instance.verticalAlign = options ? options.verticalAlign : 'top';
        c.instance.verticalAlign = options ? options.verticalAlign : 'center';
        c.instance.backdrop = options ? options.backdrop : true;
        c.instance.duration = options ? options.duration : 0;
        c.instance.shape = options ? options.shape : 'card';
        c.instance.open();
        return c;
    }
}
FivDialogService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
FivDialogService.ctorParameters = () => [
    { type: FivOverlayService }
];
/** @nocollapse */ FivDialogService.ngInjectableDef = i0.defineInjectable({ factory: function FivDialogService_Factory() { return new FivDialogService(i0.inject(i1.FivOverlayService)); }, token: FivDialogService, providedIn: "root" });
if (false) {
    /**
     * @type {?}
     * @private
     */
    FivDialogService.prototype.overlay;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhbG9nLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZml2ZXRocmVlL2NvcmUvIiwic291cmNlcyI6WyJsaWIvZGlhbG9nL2RpYWxvZy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxpQkFBaUIsRUFBYSxNQUFNLDRCQUE0QixDQUFDO0FBQzFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQzs7Ozs7O0FBRXZELG1DQU1DOzs7SUFMQyxzQ0FBMkM7O0lBQzNDLHdDQUE2Qzs7SUFDN0MsOEJBQXVCOztJQUN2QixpQ0FBa0I7O0lBQ2xCLGlDQUFpQjs7QUFNbkIsTUFBTSxPQUFPLGdCQUFnQjs7OztJQUMzQixZQUFvQixPQUEwQjtRQUExQixZQUFPLEdBQVAsT0FBTyxDQUFtQjtJQUFHLENBQUM7Ozs7OztJQUVsRCxVQUFVLENBQUMsT0FBdUIsRUFBRSxPQUF1Qjs7Y0FDbkQsQ0FBQyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFZLFNBQVMsRUFBRSxPQUFPLENBQUM7UUFDbkUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxhQUFhLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFDbkUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxhQUFhLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUM7UUFDdEUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDeEQsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDckQsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUM7UUFDcEQsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUVsQixPQUFPLENBQUMsQ0FBQztJQUNYLENBQUM7OztZQWhCRixVQUFVLFNBQUM7Z0JBQ1YsVUFBVSxFQUFFLE1BQU07YUFDbkI7Ozs7WUFiUSxpQkFBaUI7Ozs7Ozs7O0lBZVosbUNBQWtDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRml2T3ZlcmxheVNlcnZpY2UsIE5nQ29udGVudCB9IGZyb20gJy4uL292ZXJsYXkvb3ZlcmxheS5zZXJ2aWNlJztcbmltcG9ydCB7IEZpdkRpYWxvZyB9IGZyb20gJy4uL2RpYWxvZy9kaWFsb2cuY29tcG9uZW50JztcblxuZXhwb3J0IGludGVyZmFjZSBEaWFsb2dPcHRpb25zIHtcbiAgdmVydGljYWxBbGlnbjogJ2JvdHRvbScgfCAnY2VudGVyJyB8ICd0b3AnO1xuICBob3Jpem9udGFsQWxpZ246ICdsZWZ0JyB8ICdjZW50ZXInIHwgJ3JpZ2h0JztcbiAgc2hhcGU6ICdjYXJkJyB8ICdmaWxsJztcbiAgYmFja2Ryb3A6IGJvb2xlYW47XG4gIGR1cmF0aW9uOiBudW1iZXI7XG59XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIEZpdkRpYWxvZ1NlcnZpY2Uge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG92ZXJsYXk6IEZpdk92ZXJsYXlTZXJ2aWNlKSB7fVxuXG4gIG9wZW5EaWFsb2coY29udGVudDogTmdDb250ZW50PGFueT4sIG9wdGlvbnM/OiBEaWFsb2dPcHRpb25zKSB7XG4gICAgY29uc3QgYyA9IHRoaXMub3ZlcmxheS5jcmVhdGVPdmVybGF5PEZpdkRpYWxvZz4oRml2RGlhbG9nLCBjb250ZW50KTtcbiAgICBjLmluc3RhbmNlLnZlcnRpY2FsQWxpZ24gPSBvcHRpb25zID8gb3B0aW9ucy52ZXJ0aWNhbEFsaWduIDogJ3RvcCc7XG4gICAgYy5pbnN0YW5jZS52ZXJ0aWNhbEFsaWduID0gb3B0aW9ucyA/IG9wdGlvbnMudmVydGljYWxBbGlnbiA6ICdjZW50ZXInO1xuICAgIGMuaW5zdGFuY2UuYmFja2Ryb3AgPSBvcHRpb25zID8gb3B0aW9ucy5iYWNrZHJvcCA6IHRydWU7XG4gICAgYy5pbnN0YW5jZS5kdXJhdGlvbiA9IG9wdGlvbnMgPyBvcHRpb25zLmR1cmF0aW9uIDogMDtcbiAgICBjLmluc3RhbmNlLnNoYXBlID0gb3B0aW9ucyA/IG9wdGlvbnMuc2hhcGUgOiAnY2FyZCc7XG4gICAgYy5pbnN0YW5jZS5vcGVuKCk7XG5cbiAgICByZXR1cm4gYztcbiAgfVxufVxuIl19