/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { FivStep } from './step/step.component';
import { EventEmitter, Component, ViewChildren, ContentChildren, QueryList, Input, ViewChild, Output } from '@angular/core';
import { FivStepContent } from './step-content/step-content.component';
import { FivStepperHorizontal } from './stepper-horizontal/stepper-horizontal.component';
export class FivStepper {
    constructor() {
        this.mode = 'vertical';
        this.fivClick = new EventEmitter();
        this.fivClose = new EventEmitter();
        this.currentIndex = 0;
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @param {?} index
     * @return {?}
     */
    open(index) {
        if (this.mode === 'horizontal') {
            this.currentIndex = index;
            this.horizontal.open(index);
        }
        else {
            if (this.steps.toArray()[index]) {
                if (this.steps.toArray()[index].isOpen) {
                    this.close(index);
                }
                else {
                    this.currentIndex = index;
                    this.steps.toArray()[index].open();
                }
            }
            else {
            }
        }
    }
    /**
     * @return {?}
     */
    openFirst() {
        this.open(0);
    }
    /**
     * @return {?}
     */
    openLast() {
        this.open(this.steps.toArray().length - 1);
    }
    /**
     * @param {?} index
     * @param {?=} param
     * @return {?}
     */
    close(index, param) {
        this.param = param;
        if (this.mode === 'horizontal') {
            this.currentIndex = 0;
            this.horizontal.close();
        }
        else {
            this.currentIndex = -1;
            this.steps.toArray()[index].close();
        }
    }
    /**
     * @return {?}
     */
    closeFirst() {
        this.close(0);
    }
    /**
     * @return {?}
     */
    closeLast() {
        this.close(this.steps.toArray().length - 1);
    }
    /**
     * @param {?} index
     * @return {?}
     */
    select(index) {
        if (index >= 0 && index < this.contents.length) {
            if (this.mode === 'vertical') {
                this.closeAll();
            }
            this.open(index);
        }
    }
    /**
     * @return {?}
     */
    closeAll() {
        if (this.mode === 'horizontal') {
            this.currentIndex = 0;
            this.horizontal.close();
        }
        else {
            this.steps.forEach((/**
             * @param {?} step
             * @return {?}
             */
            step => {
                step.close();
            }));
        }
    }
    /**
     * @return {?}
     */
    next() {
        /** @type {?} */
        const next = this.currentIndex < this.steps.length ? this.currentIndex + 1 : -1;
        this.select(next);
    }
    /**
     * @return {?}
     */
    previous() {
        /** @type {?} */
        const next = this.currentIndex > 0 ? this.currentIndex + -1 : -1;
        this.select(next);
    }
    /**
     * @param {?} index
     * @return {?}
     */
    completeStep(index) {
        if (this.mode === 'horizontal') {
            // not yet impletented
        }
        else {
            this.steps.toArray()[index].complete();
        }
    }
    /**
     * @param {?} index
     * @return {?}
     */
    completeAndCloseStep(index) {
        if (this.mode === 'horizontal') {
            // not yet impletented
        }
        else {
            this.steps.toArray()[index].completeAndClose();
        }
    }
    /**
     * @param {?} index
     * @return {?}
     */
    reset(index) {
        if (this.mode === 'horizontal') {
            // not yet impletented
        }
        else {
            this.steps.toArray()[index].reset();
        }
    }
}
FivStepper.decorators = [
    { type: Component, args: [{
                selector: 'fiv-stepper',
                template: "<ion-list *ngIf=\"mode === 'vertical'\">\n  <fiv-step-content (fivDidClose)=\"fivClose.emit({index: i, param: param}); param = null;\" (fivClick)=\"fivClick.emit(i)\" *ngFor=\"let content of contents; let i = index; let l = last;\" [icon]=\"content.icon\" [index]=\"i + 1\"\n    [isLast]=\"l\" [title]=\"content.title\" [subtitle]=\"content.subtitle\" [isOpen]=\"content.open\">\n    <ng-container [ngTemplateOutlet]=\"content.content\"></ng-container>\n  </fiv-step-content>\n</ion-list>\n<div *ngIf=\"mode === 'horizontal'\">\n  <fiv-stepper-horizontal (fivSelect)=\"select($event)\" [contents]=\"contents\"></fiv-stepper-horizontal>\n</div>",
                styles: [":host{display:block;width:100%}"]
            }] }
];
/** @nocollapse */
FivStepper.ctorParameters = () => [];
FivStepper.propDecorators = {
    contents: [{ type: ContentChildren, args: [FivStep,] }],
    steps: [{ type: ViewChildren, args: [FivStepContent,] }],
    horizontal: [{ type: ViewChild, args: [FivStepperHorizontal,] }],
    mode: [{ type: Input }],
    fivClick: [{ type: Output }],
    fivClose: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    FivStepper.prototype.contents;
    /** @type {?} */
    FivStepper.prototype.steps;
    /** @type {?} */
    FivStepper.prototype.horizontal;
    /** @type {?} */
    FivStepper.prototype.mode;
    /** @type {?} */
    FivStepper.prototype.fivClick;
    /** @type {?} */
    FivStepper.prototype.fivClose;
    /** @type {?} */
    FivStepper.prototype.currentIndex;
    /** @type {?} */
    FivStepper.prototype.param;
}
//# sourceMappingURL=data:application/json;base64,