/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { IonContent } from '@ionic/angular';
import { DomSanitizer } from '@angular/platform-browser';
import { Component, Input, HostBinding, EventEmitter, Output, ViewChild } from '@angular/core';
import { DrawerState } from '../drawer-state';
export class FivBottomSheetContent {
    /**
     * @param {?} sanitizer
     */
    constructor(sanitizer) {
        this.sanitizer = sanitizer;
        this.rounded = true;
        this.handle = true;
        this.float = true;
        this.fivClick = new EventEmitter();
        this.states = DrawerState;
        this.shouldBounce = true;
        this.panning = false;
    }
    /**
     * @return {?}
     */
    get isRounded() {
        switch (this.currentState) {
            case DrawerState.Top:
                return false;
            case DrawerState.Docked:
                return this.rounded;
            case DrawerState.Bottom:
                return this.rounded && !this.float;
        }
        return true;
    }
    /**
     * @return {?}
     */
    get styles() {
        if (!(this.float && this.currentState === DrawerState.Bottom)) {
            return this.sanitizer
                .bypassSecurityTrustStyle(`box-shadow: 0 4px 16px rgba(0, 0, 0, .12);
                                                      border-top: 1px solid var(--ion-color-light);`);
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.content.scrollEvents = true;
    }
    /**
     * @param {?} state
     * @return {?}
     */
    updateState(state) {
        this.currentState = state;
    }
    /**
     * @return {?}
     */
    click() {
        this.fivClick.emit();
    }
}
FivBottomSheetContent.decorators = [
    { type: Component, args: [{
                selector: 'fiv-bottom-sheet-content',
                template: "<div class=\"bsc-wrapper\">\n  <span (click)=\"click()\" *ngIf=\"currentState !== states.Top && handle\"\n    [fivCenter]=\"{vertical: false, horizontal: true}\" class=\"handle\"></span>\n  <div [ngClass]=\"{'margin': handle}\" class=\"content\">\n    <ion-content [scrollY]=\"currentState === 2 && shouldBounce && !panning\">\n      <ng-content>\n\n      </ng-content>\n    </ion-content>\n\n  </div>\n</div>",
                styles: [":host{display:block;width:100%;height:100%}.bsc-wrapper{width:100%;height:100%}:host.rounded{border-top-left-radius:12px;border-top-right-radius:12px}.handle{display:block;background:var(--ion-color-light);border-radius:12px;top:8px;width:32px;height:8px;position:absolute}.content{height:100%}"]
            }] }
];
/** @nocollapse */
FivBottomSheetContent.ctorParameters = () => [
    { type: DomSanitizer }
];
FivBottomSheetContent.propDecorators = {
    rounded: [{ type: Input }],
    handle: [{ type: Input }],
    float: [{ type: Input }],
    fivClick: [{ type: Output }],
    content: [{ type: ViewChild, args: [IonContent,] }],
    isRounded: [{ type: HostBinding, args: ['class.rounded',] }],
    styles: [{ type: HostBinding, args: ['style',] }]
};
if (false) {
    /** @type {?} */
    FivBottomSheetContent.prototype.rounded;
    /** @type {?} */
    FivBottomSheetContent.prototype.handle;
    /** @type {?} */
    FivBottomSheetContent.prototype.float;
    /** @type {?} */
    FivBottomSheetContent.prototype.fivClick;
    /** @type {?} */
    FivBottomSheetContent.prototype.content;
    /** @type {?} */
    FivBottomSheetContent.prototype.currentState;
    /** @type {?} */
    FivBottomSheetContent.prototype.states;
    /** @type {?} */
    FivBottomSheetContent.prototype.shouldBounce;
    /** @type {?} */
    FivBottomSheetContent.prototype.panning;
    /**
     * @type {?}
     * @private
     */
    FivBottomSheetContent.prototype.sanitizer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm90dG9tLXNoZWV0LWNvbnRlbnQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZpdmV0aHJlZS9jb3JlLyIsInNvdXJjZXMiOlsibGliL2JvdHRvbS1zaGVldC9ib3R0b20tc2hlZXQtY29udGVudC9ib3R0b20tc2hlZXQtY29udGVudC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM1QyxPQUFPLEVBQUUsWUFBWSxFQUFhLE1BQU0sMkJBQTJCLENBQUM7QUFDcEUsT0FBTyxFQUNMLFNBQVMsRUFFVCxLQUFLLEVBQ0wsV0FBVyxFQUNYLFlBQVksRUFDWixNQUFNLEVBQ04sU0FBUyxFQUVWLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQU85QyxNQUFNLE9BQU8scUJBQXFCOzs7O0lBa0NoQyxZQUFvQixTQUF1QjtRQUF2QixjQUFTLEdBQVQsU0FBUyxDQUFjO1FBakNsQyxZQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ2YsV0FBTSxHQUFHLElBQUksQ0FBQztRQUNkLFVBQUssR0FBRyxJQUFJLENBQUM7UUFFWixhQUFRLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUFLM0QsV0FBTSxHQUFHLFdBQVcsQ0FBQztRQUNyQixpQkFBWSxHQUFHLElBQUksQ0FBQztRQUNwQixZQUFPLEdBQVksS0FBSyxDQUFDO0lBc0JxQixDQUFDOzs7O0lBcEIvQyxJQUFrQyxTQUFTO1FBQ3pDLFFBQVEsSUFBSSxDQUFDLFlBQVksRUFBRTtZQUN6QixLQUFLLFdBQVcsQ0FBQyxHQUFHO2dCQUNsQixPQUFPLEtBQUssQ0FBQztZQUNmLEtBQUssV0FBVyxDQUFDLE1BQU07Z0JBQ3JCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUN0QixLQUFLLFdBQVcsQ0FBQyxNQUFNO2dCQUNyQixPQUFPLElBQUksQ0FBQyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO1NBQ3RDO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDOzs7O0lBRUQsSUFBMEIsTUFBTTtRQUM5QixJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxZQUFZLEtBQUssV0FBVyxDQUFDLE1BQU0sQ0FBQyxFQUFFO1lBQzdELE9BQU8sSUFBSSxDQUFDLFNBQVM7aUJBQ2xCLHdCQUF3QixDQUFDO29HQUNrRSxDQUFDLENBQUM7U0FDakc7SUFDSCxDQUFDOzs7O0lBSUQsUUFBUSxLQUFJLENBQUM7Ozs7SUFFYixlQUFlO1FBQ2IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO0lBQ25DLENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLEtBQWtCO1FBQzVCLElBQUksQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDO0lBQzVCLENBQUM7Ozs7SUFFRCxLQUFLO1FBQ0gsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN2QixDQUFDOzs7WUFyREYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSwwQkFBMEI7Z0JBQ3BDLHFhQUFvRDs7YUFFckQ7Ozs7WUFqQlEsWUFBWTs7O3NCQW1CbEIsS0FBSztxQkFDTCxLQUFLO29CQUNMLEtBQUs7dUJBRUwsTUFBTTtzQkFFTixTQUFTLFNBQUMsVUFBVTt3QkFPcEIsV0FBVyxTQUFDLGVBQWU7cUJBWTNCLFdBQVcsU0FBQyxPQUFPOzs7O0lBekJwQix3Q0FBd0I7O0lBQ3hCLHVDQUF1Qjs7SUFDdkIsc0NBQXNCOztJQUV0Qix5Q0FBMkQ7O0lBRTNELHdDQUEyQzs7SUFFM0MsNkNBQTBCOztJQUMxQix1Q0FBcUI7O0lBQ3JCLDZDQUFvQjs7SUFDcEIsd0NBQXlCOzs7OztJQXNCYiwwQ0FBK0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJb25Db250ZW50IH0gZnJvbSAnQGlvbmljL2FuZ3VsYXInO1xuaW1wb3J0IHsgRG9tU2FuaXRpemVyLCBTYWZlU3R5bGUgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcbmltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgT25Jbml0LFxuICBJbnB1dCxcbiAgSG9zdEJpbmRpbmcsXG4gIEV2ZW50RW1pdHRlcixcbiAgT3V0cHV0LFxuICBWaWV3Q2hpbGQsXG4gIEFmdGVyVmlld0luaXRcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEcmF3ZXJTdGF0ZSB9IGZyb20gJy4uL2RyYXdlci1zdGF0ZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Zpdi1ib3R0b20tc2hlZXQtY29udGVudCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9ib3R0b20tc2hlZXQtY29udGVudC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2JvdHRvbS1zaGVldC1jb250ZW50LmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgRml2Qm90dG9tU2hlZXRDb250ZW50IGltcGxlbWVudHMgT25Jbml0LCBBZnRlclZpZXdJbml0IHtcbiAgQElucHV0KCkgcm91bmRlZCA9IHRydWU7XG4gIEBJbnB1dCgpIGhhbmRsZSA9IHRydWU7XG4gIEBJbnB1dCgpIGZsb2F0ID0gdHJ1ZTtcblxuICBAT3V0cHV0KCkgZml2Q2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIEBWaWV3Q2hpbGQoSW9uQ29udGVudCkgY29udGVudDogSW9uQ29udGVudDtcblxuICBjdXJyZW50U3RhdGU6IERyYXdlclN0YXRlO1xuICBzdGF0ZXMgPSBEcmF3ZXJTdGF0ZTtcbiAgc2hvdWxkQm91bmNlID0gdHJ1ZTtcbiAgcGFubmluZzogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIEBIb3N0QmluZGluZygnY2xhc3Mucm91bmRlZCcpIGdldCBpc1JvdW5kZWQoKTogYm9vbGVhbiB7XG4gICAgc3dpdGNoICh0aGlzLmN1cnJlbnRTdGF0ZSkge1xuICAgICAgY2FzZSBEcmF3ZXJTdGF0ZS5Ub3A6XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIGNhc2UgRHJhd2VyU3RhdGUuRG9ja2VkOlxuICAgICAgICByZXR1cm4gdGhpcy5yb3VuZGVkO1xuICAgICAgY2FzZSBEcmF3ZXJTdGF0ZS5Cb3R0b206XG4gICAgICAgIHJldHVybiB0aGlzLnJvdW5kZWQgJiYgIXRoaXMuZmxvYXQ7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgQEhvc3RCaW5kaW5nKCdzdHlsZScpIGdldCBzdHlsZXMoKTogU2FmZVN0eWxlIHtcbiAgICBpZiAoISh0aGlzLmZsb2F0ICYmIHRoaXMuY3VycmVudFN0YXRlID09PSBEcmF3ZXJTdGF0ZS5Cb3R0b20pKSB7XG4gICAgICByZXR1cm4gdGhpcy5zYW5pdGl6ZXJcbiAgICAgICAgLmJ5cGFzc1NlY3VyaXR5VHJ1c3RTdHlsZShgYm94LXNoYWRvdzogMCA0cHggMTZweCByZ2JhKDAsIDAsIDAsIC4xMik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgdmFyKC0taW9uLWNvbG9yLWxpZ2h0KTtgKTtcbiAgICB9XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHNhbml0aXplcjogRG9tU2FuaXRpemVyKSB7fVxuXG4gIG5nT25Jbml0KCkge31cblxuICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XG4gICAgdGhpcy5jb250ZW50LnNjcm9sbEV2ZW50cyA9IHRydWU7XG4gIH1cblxuICB1cGRhdGVTdGF0ZShzdGF0ZTogRHJhd2VyU3RhdGUpOiBhbnkge1xuICAgIHRoaXMuY3VycmVudFN0YXRlID0gc3RhdGU7XG4gIH1cblxuICBjbGljaygpIHtcbiAgICB0aGlzLmZpdkNsaWNrLmVtaXQoKTtcbiAgfVxufVxuIl19