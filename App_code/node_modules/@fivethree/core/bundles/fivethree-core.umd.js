(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@ionic/angular'), require('@angular/platform-browser'), require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@angular/common'), require('@angular/animations'), require('@angular/forms'), require('@angular/router')) :
    typeof define === 'function' && define.amd ? define('@fivethree/core', ['exports', '@ionic/angular', '@angular/platform-browser', '@angular/core', 'rxjs', 'rxjs/operators', '@angular/common', '@angular/animations', '@angular/forms', '@angular/router'], factory) :
    (global = global || self, factory((global.fivethree = global.fivethree || {}, global.fivethree.core = {}), global['ionic-angular'], global.ng.platformBrowser, global.ng.core, global.rxjs, global.rxjs.operators, global.ng.common, global.ng.animations, global.ng.forms, global.ng.router));
}(this, function (exports, angular, platformBrowser, core, rxjs, operators, common, animations, forms, router) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */

    function __awaiter(thisArg, _arguments, P, generator) {
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    }

    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @enum {number} */
    var DrawerState = {
        Bottom: 0,
        Docked: 1,
        Top: 2,
    };
    DrawerState[DrawerState.Bottom] = 'Bottom';
    DrawerState[DrawerState.Docked] = 'Docked';
    DrawerState[DrawerState.Top] = 'Top';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivBottomSheetContent = /** @class */ (function () {
        function FivBottomSheetContent(sanitizer) {
            this.sanitizer = sanitizer;
            this.rounded = true;
            this.handle = true;
            this.float = true;
            this.fivClick = new core.EventEmitter();
            this.states = DrawerState;
            this.shouldBounce = true;
            this.panning = false;
        }
        Object.defineProperty(FivBottomSheetContent.prototype, "isRounded", {
            get: /**
             * @return {?}
             */
            function () {
                switch (this.currentState) {
                    case DrawerState.Top:
                        return false;
                    case DrawerState.Docked:
                        return this.rounded;
                    case DrawerState.Bottom:
                        return this.rounded && !this.float;
                }
                return true;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivBottomSheetContent.prototype, "styles", {
            get: /**
             * @return {?}
             */
            function () {
                if (!(this.float && this.currentState === DrawerState.Bottom)) {
                    return this.sanitizer
                        .bypassSecurityTrustStyle("box-shadow: 0 4px 16px rgba(0, 0, 0, .12);\n                                                      border-top: 1px solid var(--ion-color-light);");
                }
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivBottomSheetContent.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivBottomSheetContent.prototype.ngAfterViewInit = /**
         * @return {?}
         */
        function () {
            this.content.scrollEvents = true;
        };
        /**
         * @param {?} state
         * @return {?}
         */
        FivBottomSheetContent.prototype.updateState = /**
         * @param {?} state
         * @return {?}
         */
        function (state) {
            this.currentState = state;
        };
        /**
         * @return {?}
         */
        FivBottomSheetContent.prototype.click = /**
         * @return {?}
         */
        function () {
            this.fivClick.emit();
        };
        FivBottomSheetContent.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-bottom-sheet-content',
                        template: "<div class=\"bsc-wrapper\">\n  <span (click)=\"click()\" *ngIf=\"currentState !== states.Top && handle\"\n    [fivCenter]=\"{vertical: false, horizontal: true}\" class=\"handle\"></span>\n  <div [ngClass]=\"{'margin': handle}\" class=\"content\">\n    <ion-content [scrollY]=\"currentState === 2 && shouldBounce && !panning\">\n      <ng-content>\n\n      </ng-content>\n    </ion-content>\n\n  </div>\n</div>",
                        styles: [":host{display:block;width:100%;height:100%}.bsc-wrapper{width:100%;height:100%}:host.rounded{border-top-left-radius:12px;border-top-right-radius:12px}.handle{display:block;background:var(--ion-color-light);border-radius:12px;top:8px;width:32px;height:8px;position:absolute}.content{height:100%}"]
                    }] }
        ];
        /** @nocollapse */
        FivBottomSheetContent.ctorParameters = function () { return [
            { type: platformBrowser.DomSanitizer }
        ]; };
        FivBottomSheetContent.propDecorators = {
            rounded: [{ type: core.Input }],
            handle: [{ type: core.Input }],
            float: [{ type: core.Input }],
            fivClick: [{ type: core.Output }],
            content: [{ type: core.ViewChild, args: [angular.IonContent,] }],
            isRounded: [{ type: core.HostBinding, args: ['class.rounded',] }],
            styles: [{ type: core.HostBinding, args: ['style',] }]
        };
        return FivBottomSheetContent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivBottomSheet = /** @class */ (function () {
        function FivBottomSheet(_element, _renderer, _domCtrl, _platform) {
            this._element = _element;
            this._renderer = _renderer;
            this._domCtrl = _domCtrl;
            this._platform = _platform;
            this.dockedHeight = 80;
            this.shouldBounce = true;
            this.distanceTop = 56;
            this.transition = '0.25s';
            this.state = DrawerState.Bottom;
            this.bounceThreshold = 40;
            this.panThreshold = 20;
            this.panEnabled = true;
            this.stateChange = new core.EventEmitter();
            this.fivOpen = new core.EventEmitter();
            this.fivDocked = new core.EventEmitter();
            this.fivClose = new core.EventEmitter();
            this.scrollTop = 0;
            this.$onDestroy = new rxjs.Subject();
        }
        /**
         * @return {?}
         */
        FivBottomSheet.prototype.ngOnDestroy = /**
         * @return {?}
         */
        function () {
            this.$onDestroy.next();
        };
        /**
         * @return {?}
         */
        FivBottomSheet.prototype.ngAfterViewInit = /**
         * @return {?}
         */
        function () {
            var _this = this;
            this._setDrawerState(this.state);
            this.content.shouldBounce = this.shouldBounce;
            /** @type {?} */
            var touchmove = rxjs.fromEvent(this._element.nativeElement, 'touchmove', {
                passive: true
            });
            /** @type {?} */
            var touchend = rxjs.merge(rxjs.fromEvent(this._element.nativeElement, 'touchend', {
                passive: true
            }), rxjs.fromEvent(this._element.nativeElement, 'touchcancel', {
                passive: true
            }));
            /** @type {?} */
            var getScrollContent = rxjs.from(this.content.content.getScrollElement());
            /** @type {?} */
            var scroll = this.content.content.ionScroll.pipe(operators.tap((/**
             * @param {?} el
             * @return {?}
             */
            function (el) { return (_this.scrollTop = el.detail.scrollTop); })), operators.takeUntil(this.$onDestroy));
            scroll.subscribe();
            this.content.content.ionScrollEnd
                .pipe(operators.filter((/**
             * @param {?} el
             * @return {?}
             */
            function (el) { return _this.scrollTop === 0 && _this.state === DrawerState.Top; })), operators.tap((/**
             * @return {?}
             */
            function () { return _this.content.content.scrollByPoint(0, 1, 0); })), operators.takeUntil(this.$onDestroy))
                .subscribe();
            /** @type {?} */
            var canStart = touchmove.pipe(operators.filter((/**
             * @return {?}
             */
            function () { return _this.scrollTop === 0; })));
            /** @type {?} */
            var start = canStart.pipe(operators.take(1), operators.tap((/**
             * @param {?} s
             * @return {?}
             */
            function (s) { return _this._handlePanStart(s); })));
            /** @type {?} */
            var pan = start.pipe(operators.filter((/**
             * @return {?}
             */
            function () { return _this.panEnabled; })), operators.flatMap((/**
             * @return {?}
             */
            function () { return touchmove; })), operators.map((/**
             * @param {?} tm
             * @return {?}
             */
            function (tm) { return _this.calculatePanEvent(tm); })));
            /** @type {?} */
            var handlePan = pan.pipe(operators.filter((/**
             * @param {?} p
             * @return {?}
             */
            function (p) { return Math.abs(p.distance) > _this.panThreshold; })), operators.map((/**
             * @param {?} tm
             * @return {?}
             */
            function (tm) { return _this._handlePan(tm); })), operators.takeUntil(touchend), operators.repeat(), operators.takeUntil(this.$onDestroy));
            /** @type {?} */
            var handleBackPan = pan
                .pipe(operators.filter((/**
             * @param {?} p
             * @return {?}
             */
            function (p) { return Math.abs(p.distance) <= _this.panThreshold && _this.content.panning; })), operators.map((/**
             * @param {?} tm
             * @return {?}
             */
            function (tm) { return _this._handlePan(tm); })), operators.takeUntil(touchend), operators.repeat(), operators.takeUntil(this.$onDestroy))
                .subscribe();
            handlePan
                .pipe(operators.first(), operators.tap((/**
             * @return {?}
             */
            function () { return (_this.content.panning = true); })), operators.repeatWhen((/**
             * @return {?}
             */
            function () { return touchend; })), operators.takeUntil(this.$onDestroy))
                .subscribe();
            handlePan
                .pipe(operators.flatMap((/**
             * @return {?}
             */
            function () { return touchend; })), operators.first(), operators.withLatestFrom(pan), operators.tap((/**
             * @return {?}
             */
            function () { return _this.content.content.scrollByPoint(0, 1, 0); })), operators.tap((/**
             * @return {?}
             */
            function () { return (_this.content.panning = false); })), operators.map((/**
             * @param {?} ev
             * @return {?}
             */
            function (ev) { return ev[1]; })), operators.repeat(), operators.takeUntil(this.$onDestroy))
                .subscribe((/**
             * @param {?} ev
             * @return {?}
             */
            function (ev) { return _this._handlePanEnd(ev); }));
        };
        /**
         * @param {?} changes
         * @return {?}
         */
        FivBottomSheet.prototype.ngOnChanges = /**
         * @param {?} changes
         * @return {?}
         */
        function (changes) {
            if (!changes.state) {
                return;
            }
            this._setDrawerState(changes.state.currentValue);
            this.updateContent(changes.state.currentValue);
        };
        /**
         * @param {?} state
         * @return {?}
         */
        FivBottomSheet.prototype.updateContent = /**
         * @param {?} state
         * @return {?}
         */
        function (state) {
            if (this.content) {
                this.content.updateState(state);
            }
        };
        /**
         * @private
         * @param {?} state
         * @return {?}
         */
        FivBottomSheet.prototype._setDrawerState = /**
         * @private
         * @param {?} state
         * @return {?}
         */
        function (state) {
            this._renderer.setStyle(this._element.nativeElement, 'transition', this.transition);
            switch (state) {
                case DrawerState.Bottom:
                    this.content.content.scrollToTop(0);
                    this._setTranslateY('100vh');
                    break;
                case DrawerState.Docked:
                    this.content.content.scrollToTop(0);
                    this._setTranslateY(this._platform.height() - this.dockedHeight + 'px');
                    break;
                default:
                    this._setTranslateY(this.distanceTop + 'px');
            }
        };
        /**
         * @private
         * @param {?} event
         * @return {?}
         */
        FivBottomSheet.prototype._handlePanStart = /**
         * @private
         * @param {?} event
         * @return {?}
         */
        function (event) {
            this._startPositionTop = this.getCurrentTop();
            this._startPositionOffset = event.touches[0].pageY;
        };
        /**
         * @return {?}
         */
        FivBottomSheet.prototype.getCurrentTop = /**
         * @return {?}
         */
        function () {
            return this._element.nativeElement.getBoundingClientRect().top;
        };
        /**
         * @private
         * @param {?} ev
         * @return {?}
         */
        FivBottomSheet.prototype._handlePanEnd = /**
         * @private
         * @param {?} ev
         * @return {?}
         */
        function (ev) {
            if (this.shouldBounce) {
                this._renderer.setStyle(this._element.nativeElement, 'transition', this.transition);
                switch (this.state) {
                    case DrawerState.Docked:
                        this._handleDockedPanEnd(ev);
                        break;
                    case DrawerState.Top:
                        this._handleTopPanEnd(ev);
                        break;
                    default:
                        this._handleBottomPanEnd(ev);
                }
            }
            this.stateChange.emit(this.state);
        };
        /**
         * @private
         * @param {?} ev
         * @return {?}
         */
        FivBottomSheet.prototype._handleTopPanEnd = /**
         * @private
         * @param {?} ev
         * @return {?}
         */
        function (ev) {
            if (ev.distance > this.bounceThreshold) {
                if (this.state !== DrawerState.Docked) {
                    this.state = DrawerState.Docked;
                    this.fivDocked.emit(this);
                }
            }
            else {
                this._setTranslateY(this.distanceTop + 'px');
            }
        };
        /**
         * @private
         * @param {?} ev
         * @return {?}
         */
        FivBottomSheet.prototype._handleDockedPanEnd = /**
         * @private
         * @param {?} ev
         * @return {?}
         */
        function (ev) {
            /** @type {?} */
            var absDeltaY = Math.abs(ev.distance);
            if (absDeltaY > this.bounceThreshold && ev.distance < 0) {
                if (this.state !== DrawerState.Top) {
                    this.state = DrawerState.Top;
                    this.fivOpen.emit();
                }
            }
            else if (absDeltaY > this.bounceThreshold && ev.distance > 0) {
                if (this.state !== DrawerState.Bottom) {
                    this.state = DrawerState.Bottom;
                    this.fivClose.emit();
                }
            }
            else {
                this._setTranslateY(this._platform.height() - this.dockedHeight + 'px');
            }
        };
        /**
         * @private
         * @param {?} ev
         * @return {?}
         */
        FivBottomSheet.prototype._handleBottomPanEnd = /**
         * @private
         * @param {?} ev
         * @return {?}
         */
        function (ev) {
            if (-ev.distance > this.bounceThreshold) {
                if (this.state !== DrawerState.Docked) {
                    this.state = DrawerState.Docked;
                    this.fivDocked.emit();
                }
            }
            else {
                this._setTranslateY('100vh');
            }
        };
        /**
         * @param {?} ev
         * @return {?}
         */
        FivBottomSheet.prototype.calculatePanEvent = /**
         * @param {?} ev
         * @return {?}
         */
        function (ev) {
            return {
                currentOffset: ev.touches[0].pageY,
                startOffset: this._startPositionOffset,
                startTop: this._startPositionTop,
                currentTop: this.getCurrentTop(),
                distance: ev.touches[0].pageY - this._startPositionOffset,
                touch: ev
            };
        };
        /**
         * @private
         * @param {?} event
         * @return {?}
         */
        FivBottomSheet.prototype._handlePan = /**
         * @private
         * @param {?} event
         * @return {?}
         */
        function (event) {
            this._renderer.setStyle(this._element.nativeElement, 'transition', 'none');
            if (event.currentTop >= 0 && event.currentTop <= this._platform.height()) {
                /** @type {?} */
                var newTop = this._startPositionTop + event.distance;
                if (newTop >= this.distanceTop) {
                    this._setTranslateY(newTop + 'px');
                }
                else if (newTop <= this.distanceTop && this.content.panning) {
                    this._setTranslateY(this.distanceTop + 'px');
                    this.content.content.scrollToPoint(0, 0 - newTop, 0);
                }
                return event;
            }
        };
        /**
         * @private
         * @param {?} value
         * @return {?}
         */
        FivBottomSheet.prototype._setTranslateY = /**
         * @private
         * @param {?} value
         * @return {?}
         */
        function (value) {
            var _this = this;
            this._domCtrl.write((/**
             * @return {?}
             */
            function () {
                _this._renderer.setStyle(_this._element.nativeElement, 'transform', 'translateY(' + value + ')');
            }));
        };
        /**
         * @return {?}
         */
        FivBottomSheet.prototype.open = /**
         * @return {?}
         */
        function () {
            this.state = DrawerState.Top;
            this._setDrawerState(this.state);
            this.updateContent(this.state);
        };
        /**
         * @return {?}
         */
        FivBottomSheet.prototype.close = /**
         * @return {?}
         */
        function () {
            this.state = DrawerState.Bottom;
            this._setDrawerState(this.state);
            this.updateContent(this.state);
        };
        /**
         * @return {?}
         */
        FivBottomSheet.prototype.dock = /**
         * @return {?}
         */
        function () {
            this.state = DrawerState.Docked;
            this._setDrawerState(this.state);
            this.updateContent(this.state);
        };
        FivBottomSheet.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-bottom-sheet',
                        template: "<div class=\"fiv-bottom-drawer-scrollable-content\" no-bounce>\n  <ng-content></ng-content>\n</div>",
                        styles: [":host{width:100%;height:100%;position:absolute;left:0;z-index:11!important;background-color:#fff;-webkit-transform:translateY(100vh);transform:translateY(100vh)}.fiv-bottom-drawer-scrollable-content{width:100%;height:100%}"]
                    }] }
        ];
        /** @nocollapse */
        FivBottomSheet.ctorParameters = function () { return [
            { type: core.ElementRef },
            { type: core.Renderer2 },
            { type: angular.DomController },
            { type: angular.Platform }
        ]; };
        FivBottomSheet.propDecorators = {
            dockedHeight: [{ type: core.Input }],
            shouldBounce: [{ type: core.Input }],
            distanceTop: [{ type: core.Input }],
            transition: [{ type: core.Input }],
            state: [{ type: core.Input }],
            bounceThreshold: [{ type: core.Input }],
            panThreshold: [{ type: core.Input }],
            panEnabled: [{ type: core.Input }],
            stateChange: [{ type: core.Output }],
            fivOpen: [{ type: core.Output }],
            fivDocked: [{ type: core.Output }],
            fivClose: [{ type: core.Output }],
            content: [{ type: core.ContentChild, args: [FivBottomSheetContent,] }]
        };
        return FivBottomSheet;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivCenter = /** @class */ (function () {
        function FivCenter(sanitizer) {
            this.sanitizer = sanitizer;
            this.vertical = true;
            this.horizontal = true;
        }
        Object.defineProperty(FivCenter.prototype, "myStyle", {
            get: /**
             * @return {?}
             */
            function () {
                // tslint:disable-next-line:max-line-length
                /** @type {?} */
                var style = "position: absolute; " + (this.vertical && this.horizontal
                    ? 'top: 50%; left: 50%; transform: translateY(-50%) translateX(-50%);'
                    : this.vertical
                        ? 'top: 50%; transform: translateY(-50%);'
                        : 'left: 50%; transform: translateX(-50%);');
                return this.sanitizer.bypassSecurityTrustStyle(style);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivCenter.prototype, "fivCenter", {
            set: /**
             * @param {?} center
             * @return {?}
             */
            function (center) {
                if (center) {
                    this.vertical = center.vertical;
                    this.horizontal = center.horizontal;
                }
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivCenter.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        FivCenter.decorators = [
            { type: core.Directive, args: [{
                        selector: '[fivCenter]'
                    },] }
        ];
        /** @nocollapse */
        FivCenter.ctorParameters = function () { return [
            { type: platformBrowser.DomSanitizer }
        ]; };
        FivCenter.propDecorators = {
            myStyle: [{ type: core.HostBinding, args: ['style',] }],
            fivCenter: [{ type: core.Input }]
        };
        return FivCenter;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivCenterModule = /** @class */ (function () {
        function FivCenterModule() {
        }
        FivCenterModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivCenter],
                        imports: [common.CommonModule],
                        exports: [FivCenter]
                    },] }
        ];
        return FivCenterModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivBottomSheetModule = /** @class */ (function () {
        function FivBottomSheetModule() {
        }
        FivBottomSheetModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivBottomSheet, FivBottomSheetContent],
                        imports: [common.CommonModule, FivCenterModule, angular.IonicModule],
                        exports: [FivBottomSheet, FivBottomSheetContent]
                    },] }
        ];
        return FivBottomSheetModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivButton = /** @class */ (function () {
        function FivButton() {
            this.click = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        FivButton.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        FivButton.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-button',
                        template: "<ion-button [color]=\"color\" [disabled]=\"disabled\">\n  <fiv-icon [name]=\"icon\"></fiv-icon>\n  {{text}}\n</ion-button>",
                        styles: [""]
                    }] }
        ];
        /** @nocollapse */
        FivButton.ctorParameters = function () { return []; };
        FivButton.propDecorators = {
            icon: [{ type: core.Input }],
            text: [{ type: core.Input }],
            color: [{ type: core.Input }],
            disabled: [{ type: core.Input }],
            click: [{ type: core.Output }]
        };
        return FivButton;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivIcon = /** @class */ (function () {
        function FivIcon() {
            this._indicatorValue = 0;
            this.state = 'normal';
            this.off = false;
            this.transitionDone = new core.EventEmitter();
            this.indicatorState = 'scale';
            this.indicatorValueState = 'scale';
        }
        Object.defineProperty(FivIcon.prototype, "name", {
            get: /**
             * @return {?}
             */
            function () {
                return this._name;
            },
            set: /**
             * @param {?} name
             * @return {?}
             */
            function (name) {
                if (this._name) {
                    this.transform(name);
                }
                else {
                    this._name = name;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivIcon.prototype, "indicatorValue", {
            get: /**
             * @return {?}
             */
            function () {
                return this._indicatorValue;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */
            function (value) {
                this.transformIndicator(value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivIcon.prototype, "dotVisible", {
            get: /**
             * @return {?}
             */
            function () {
                return this._dotVisible;
            },
            set: /**
             * @param {?} dotVisible
             * @return {?}
             */
            function (dotVisible) {
                this._dotVisible = dotVisible;
                if (dotVisible) {
                    this.indicatorState = 'normal';
                }
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivIcon.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @param {?} name
         * @return {?}
         */
        FivIcon.prototype.transform = /**
         * @param {?} name
         * @return {?}
         */
        function (name) {
            this.temp = name;
            this.state = 'rotate';
        };
        /**
         * @param {?} value
         * @return {?}
         */
        FivIcon.prototype.transformIndicator = /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (this.dotVisible) {
                this._indicatorValue = value;
                return;
            }
            if (value === 0) {
                this._indicatorValue = value;
                this.indicatorState = 'normal';
                this.indicatorValueState = 'scale';
            }
            else {
                this.indicatorState = 'scale';
                if (this.indicatorValueState === 'scale') {
                    this.indicatorValueState = 'normal';
                    this._indicatorValue = value;
                }
                else {
                    this.tempValue = value;
                    this.indicatorValueState = 'scale';
                }
            }
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivIcon.prototype.rotateAnimDone = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.fromState === 'normal' && event.toState === 'rotate') {
                this._name = this.temp;
                this.state = 'normal';
            }
            if (event.fromState === 'rotate' && event.toState === 'normal') {
                this.transitionDone.emit(this._name);
            }
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivIcon.prototype.incrementDone = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.fromState === 'normal' && event.toState === 'scale') {
                if (this.tempValue > 0) {
                    this.indicatorValueState = 'normal';
                    this._indicatorValue = this.tempValue;
                }
                else {
                    this._indicatorValue = this.tempValue;
                }
            }
        };
        FivIcon.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-icon',
                        template: "<ion-icon [slot]=\"slot\" [@rotateAnim]=\"state\" (@rotateAnim.done)=\"rotateAnimDone($event)\" [name]=\"_name\"\n    [color]=\"color\"></ion-icon>\n<span [@scaleAnim]=\"indicatorState\" *ngIf=\"dotVisible\" class=\"indicator\"></span>\n<span *ngIf=\"_indicatorValue > 0 || dotVisible\" class=\"indicator-background\"></span>\n<span class=\"off-background\" *ngIf=\"off\"></span>\n<span class=\"off\" *ngIf=\"off\"></span>\n<span *ngIf=\"smallIcon && indicatorValue == 0 && !dotVisible\"\n    class=\"indicator-icon\">\n    <ion-icon [color]=\"color\" slot=\"icon-only\" [name]=\"smallIcon\"></ion-icon>\n</span>\n<span *ngIf=\"indicatorValue > 0 && !dotVisible\" [@scaleAnim]=\"indicatorValueState\"\n    (@scaleAnim.done)=\"incrementDone($event)\" class=\"indicator-value\">\n    <span *ngIf=\"indicatorValue <= 9\">{{indicatorValue}}</span>\n    <span *ngIf=\"indicatorValue > 9\">9+</span>\n</span>",
                        changeDetection: core.ChangeDetectionStrategy.OnPush,
                        animations: [
                            animations.trigger('rotateAnim', [
                                animations.transition('normal => rotate', [animations.animate('125ms ease-out')]),
                                animations.transition('rotate => normal', [animations.animate('125ms ease-in')]),
                                animations.state('rotate', animations.style({ opacity: '0', transform: 'scale(0) rotateZ(45deg)' })),
                                animations.state('normal', animations.style({ opacity: '1', transform: 'scale(1) rotateZ(0deg)' }))
                            ]),
                            animations.trigger('scaleAnim', [
                                animations.transition('void => normal', [
                                    animations.style({ opacity: '0', transform: 'scale(0)' }),
                                    animations.animate('125ms ease-out', animations.style({ opacity: '1', transform: 'scale(1)' }))
                                ]),
                                animations.transition('normal => scale', [animations.animate('125ms ease-out')]),
                                animations.transition('scale => normal', [animations.animate('125ms ease-in')]),
                                animations.state('scale', animations.style({ opacity: '0', transform: 'scale(0)' })),
                                animations.state('normal', animations.style({ opacity: '1', transform: 'scale(1)' }))
                            ])
                        ],
                        styles: [":host{--fiv-padding-end:0;--fiv-padding-start:0;--fiv-dot-right:-6px;--fiv-dot-top:-2px;--fiv-color-icon:inherit;position:relative;display:inline-block}ion-icon{margin:0;font-size:1.8em;color:var(--fiv-color-icon);padding-right:var(--fiv-padding-end);padding-left:var(--fiv-padding-start)}.indicator{position:absolute;width:var(--fiv-dot-width,8px);height:var(--fiv-dot-height,8px);background-color:var(--fiv-dot-color,var(--fiv-color-indicator,--ion-color-primary));top:calc(var(--fiv-dot-top,0px) + 3px);border-radius:100%;right:calc(var(--fiv-dot-right,4px) + 3px);z-index:12}.indicator-value{position:absolute;min-width:var(--fiv-dot-width,14px);height:var(--fiv-dot-height,14px);background-color:var(--fiv-dot-color,var(--ion-color-primary));color:var(--fiv-dot-color-background,var(--ion-color-light));top:var(--fiv-dot-top,0);border-radius:14px;right:var(--fiv-dot-right,4px);z-index:13}.indicator-value *{position:absolute;-webkit-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);left:50%;top:50%;font-size:.6em}.indicator-icon{position:absolute;min-width:var(--fiv-dot-width,14px);height:var(--fiv-dot-height,14px);background-color:var(--fiv-dot-color-background,#fff);top:0;border-radius:14px;right:0;z-index:13}.indicator-icon *{position:absolute;-webkit-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);left:50%;top:50%;font-size:1em}.indicator-background{position:absolute;width:var(--fiv-dot-width,18px);height:var(--fiv-dot-height,18px);background-color:var(--fiv-dot-color-background,var(--ion-color-light));top:calc(var(--fiv-dot-top,0px) - 2px);border-radius:100%;right:calc(var(--fiv-dot-right,4px) - 2px);z-index:11}.off{width:120%;height:2px;background:var(--fiv-color-icon);position:absolute;left:0;-webkit-transform:rotateZ(45deg) translateY(10px) translateX(6px);transform:rotateZ(45deg) translateY(10px) translateX(6px)}.off-background{width:120%;height:2px;background:#000;position:absolute;background-color:var(--fiv-dot-color-background,var(--ion-color-light));left:2px;-webkit-transform:rotateZ(45deg) translateY(10px) translateX(6px);transform:rotateZ(45deg) translateY(10px) translateX(6px)}"]
                    }] }
        ];
        /** @nocollapse */
        FivIcon.ctorParameters = function () { return []; };
        FivIcon.propDecorators = {
            color: [{ type: core.Input }],
            slot: [{ type: core.Input }],
            smallIcon: [{ type: core.Input }],
            off: [{ type: core.Input }],
            transitionDone: [{ type: core.Output }],
            name: [{ type: core.Input }],
            indicatorValue: [{ type: core.Input }],
            dotVisible: [{ type: core.Input }]
        };
        return FivIcon;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivIconModule = /** @class */ (function () {
        function FivIconModule() {
        }
        FivIconModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivIcon],
                        imports: [common.CommonModule, angular.IonicModule],
                        exports: [FivIcon]
                    },] }
        ];
        return FivIconModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivButtonModule = /** @class */ (function () {
        function FivButtonModule() {
        }
        FivButtonModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivButton],
                        imports: [common.CommonModule, FivIconModule, angular.IonicModule],
                        exports: [FivButton]
                    },] }
        ];
        return FivButtonModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivGalleryToolbar = /** @class */ (function () {
        function FivGalleryToolbar() {
            this.position = 'top';
        }
        /**
         * @return {?}
         */
        FivGalleryToolbar.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        FivGalleryToolbar.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-gallery-toolbar',
                        template: "<ng-template #ref>\n  <ng-content></ng-content>\n</ng-template>",
                        styles: [""]
                    }] }
        ];
        /** @nocollapse */
        FivGalleryToolbar.ctorParameters = function () { return []; };
        FivGalleryToolbar.propDecorators = {
            content: [{ type: core.ViewChild, args: [core.TemplateRef,] }],
            position: [{ type: core.Input }]
        };
        return FivGalleryToolbar;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var ImageService = /** @class */ (function () {
        function ImageService() {
        }
        /**
         * @param {?} imgEl
         * @return {?}
         */
        ImageService.prototype.getAverageRGB = /**
         * @param {?} imgEl
         * @return {?}
         */
        function (imgEl) {
            /** @type {?} */
            var blockSize = 5;
            /** @type {?} */
            var // only visit every 5 pixels
            defaultRGB = { r: 0, g: 0, b: 0 };
            /** @type {?} */
            var // for non-supporting envs
            canvas = document.createElement('canvas');
            /** @type {?} */
            var context = canvas.getContext && canvas.getContext('2d');
            /** @type {?} */
            var rgb = { r: 0, g: 0, b: 0 };
            /** @type {?} */
            var data;
            /** @type {?} */
            var width;
            /** @type {?} */
            var height;
            /** @type {?} */
            var length;
            /** @type {?} */
            var i = -4;
            /** @type {?} */
            var count = 0;
            if (!context) {
                return "rgb(" + defaultRGB.r + "," + defaultRGB.g + "," + defaultRGB.b + ")";
            }
            height = canvas.height =
                imgEl.naturalHeight || imgEl.offsetHeight || imgEl.height;
            width = canvas.width =
                imgEl.naturalWidth || imgEl.offsetWidth || imgEl.width;
            context.drawImage(imgEl, 0, 0);
            try {
                data = context.getImageData(0, 0, width, height);
            }
            catch (e) {
                /* security error, img on diff domain */
                return "rgb(" + defaultRGB.r + "," + defaultRGB.g + "," + defaultRGB.b + ")";
            }
            length = data.data.length;
            while ((i += blockSize * 4) < length) {
                ++count;
                rgb.r += data.data[i];
                rgb.g += data.data[i + 1];
                rgb.b += data.data[i + 2];
            }
            // ~~ used to floor values
            rgb.r = Math.floor(rgb.r / count);
            rgb.g = Math.floor(rgb.g / count);
            rgb.b = Math.floor(rgb.b / count);
            return "rgb(" + rgb.r + "," + rgb.g + "," + rgb.b + ")";
        };
        ImageService.decorators = [
            { type: core.Injectable, args: [{
                        providedIn: 'root'
                    },] }
        ];
        /** @nocollapse */
        ImageService.ctorParameters = function () { return []; };
        /** @nocollapse */ ImageService.ngInjectableDef = core.defineInjectable({ factory: function ImageService_Factory() { return new ImageService(); }, token: ImageService, providedIn: "root" });
        return ImageService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivOverlayContent = /** @class */ (function () {
        function FivOverlayContent(sanitizer) {
            this.sanitizer = sanitizer;
        }
        Object.defineProperty(FivOverlayContent.prototype, "myStyle", {
            get: /**
             * @return {?}
             */
            function () {
                return this.priority
                    ? this.sanitizer.bypassSecurityTrustStyle("z-index: " + this.priority)
                    : null;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivOverlayContent.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        FivOverlayContent.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-overlay-content',
                        template: "<ng-content #content></ng-content>",
                        styles: [""]
                    }] }
        ];
        /** @nocollapse */
        FivOverlayContent.ctorParameters = function () { return [
            { type: platformBrowser.DomSanitizer }
        ]; };
        FivOverlayContent.propDecorators = {
            myStyle: [{ type: core.HostBinding, args: ['style',] }]
        };
        return FivOverlayContent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivOverlayService = /** @class */ (function () {
        function FivOverlayService(componentFactoryResolver, rendererFactory, appRef, injector) {
            this.componentFactoryResolver = componentFactoryResolver;
            this.appRef = appRef;
            this.injector = injector;
            this.renderer = rendererFactory.createRenderer(null, null);
        }
        /**
         * @template T
         * @param {?} component
         * @param {?=} content
         * @return {?}
         */
        FivOverlayService.prototype.createOverlay = /**
         * @template T
         * @param {?} component
         * @param {?=} content
         * @return {?}
         */
        function (component, content) {
            /** @type {?} */
            var resolvedContent = this.resolveNgContent(content);
            /** @type {?} */
            var componentRef = this.componentFactoryResolver
                .resolveComponentFactory(component)
                .create(this.injector, resolvedContent);
            this.appRef.attachView(componentRef.hostView);
            /** @type {?} */
            var domElem = (/** @type {?} */ (((/** @type {?} */ (componentRef.hostView)))
                .rootNodes[0]));
            document.body.appendChild(domElem);
            return componentRef;
        };
        /**
         * @private
         * @template T
         * @param {?} content
         * @return {?}
         */
        FivOverlayService.prototype.resolveNgContent = /**
         * @private
         * @template T
         * @param {?} content
         * @return {?}
         */
        function (content) {
            if (!content) {
                return;
            }
            if (typeof content === 'string') {
                /** @type {?} */
                var element = this.renderer.createText(content);
                return [[element]];
            }
            if (content instanceof core.TemplateRef) {
                /** @type {?} */
                var viewRef = content.createEmbeddedView(null);
                return [viewRef.rootNodes];
            }
            /** @type {?} */
            var factory = this.componentFactoryResolver.resolveComponentFactory(content);
            /** @type {?} */
            var componentRef = factory.create(this.injector);
            return [[componentRef.location.nativeElement]];
        };
        FivOverlayService.decorators = [
            { type: core.Injectable, args: [{
                        providedIn: 'root'
                    },] }
        ];
        /** @nocollapse */
        FivOverlayService.ctorParameters = function () { return [
            { type: core.ComponentFactoryResolver },
            { type: core.RendererFactory2 },
            { type: core.ApplicationRef },
            { type: core.Injector }
        ]; };
        /** @nocollapse */ FivOverlayService.ngInjectableDef = core.defineInjectable({ factory: function FivOverlayService_Factory() { return new FivOverlayService(core.inject(core.ComponentFactoryResolver), core.inject(core.RendererFactory2), core.inject(core.ApplicationRef), core.inject(core.INJECTOR)); }, token: FivOverlayService, providedIn: "root" });
        return FivOverlayService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivOverlay = /** @class */ (function () {
        function FivOverlay(overlay) {
            this.overlay = overlay;
            this._open = false;
        }
        /**
         * @param {?=} priority
         * @return {?}
         */
        FivOverlay.prototype.show = /**
         * @param {?=} priority
         * @return {?}
         */
        function (priority) {
            if (!this.componentRef) {
                this.componentRef = this.overlay.createOverlay(FivOverlayContent, this.ngContent);
                this._open = true;
                this.componentRef.instance.priority = priority;
                return this.componentRef.instance;
            }
        };
        /**
         * @return {?}
         */
        FivOverlay.prototype.hide = /**
         * @return {?}
         */
        function () {
            if (this.componentRef) {
                this.componentRef.destroy();
                this.componentRef = null;
                this._open = false;
            }
        };
        Object.defineProperty(FivOverlay.prototype, "open", {
            get: /**
             * @return {?}
             */
            function () {
                return this._open;
            },
            enumerable: true,
            configurable: true
        });
        FivOverlay.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-overlay',
                        template: "<ng-template #content>\n  <ng-content></ng-content>\n</ng-template>",
                        styles: [""]
                    }] }
        ];
        /** @nocollapse */
        FivOverlay.ctorParameters = function () { return [
            { type: FivOverlayService }
        ]; };
        FivOverlay.propDecorators = {
            ngContent: [{ type: core.ViewChild, args: ['content',] }],
            priority: [{ type: core.Input }]
        };
        return FivOverlay;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @enum {number} */
    var Key = {
        Backspace: 8,
        Tab: 9,
        Enter: 13,
        Shift: 16,
        Ctrl: 17,
        Alt: 18,
        PauseBreak: 19,
        CapsLock: 20,
        Escape: 27,
        Space: 32,
        PageUp: 33,
        PageDown: 34,
        End: 35,
        Home: 36,
        LeftArrow: 37,
        UpArrow: 38,
        RightArrow: 39,
        DownArrow: 40,
        Insert: 45,
        Delete: 46,
        Zero: 48,
        ClosedParen: 48,
        One: 49,
        ExclamationMark: 49,
        Two: 50,
        AtSign: 50,
        Three: 51,
        PoundSign: 51,
        Hash: 51,
        Four: 52,
        DollarSign: 52,
        Five: 53,
        PercentSign: 53,
        Six: 54,
        Caret: 54,
        Hat: 54,
        Seven: 55,
        Ampersand: 55,
        Eight: 56,
        Star: 56,
        Asterik: 56,
        Nine: 57,
        OpenParen: 57,
        A: 65,
        B: 66,
        C: 67,
        D: 68,
        E: 69,
        F: 70,
        G: 71,
        H: 72,
        I: 73,
        J: 74,
        K: 75,
        L: 76,
        M: 77,
        N: 78,
        O: 79,
        P: 80,
        Q: 81,
        R: 82,
        S: 83,
        T: 84,
        U: 85,
        V: 86,
        W: 87,
        X: 88,
        Y: 89,
        Z: 90,
        LeftWindowKey: 91,
        RightWindowKey: 92,
        SelectKey: 93,
        Numpad0: 96,
        Numpad1: 97,
        Numpad2: 98,
        Numpad3: 99,
        Numpad4: 100,
        Numpad5: 101,
        Numpad6: 102,
        Numpad7: 103,
        Numpad8: 104,
        Numpad9: 105,
        Multiply: 106,
        Add: 107,
        Subtract: 109,
        DecimalPoint: 110,
        Divide: 111,
        F1: 112,
        F2: 113,
        F3: 114,
        F4: 115,
        F5: 116,
        F6: 117,
        F7: 118,
        F8: 119,
        F9: 120,
        F10: 121,
        F11: 122,
        F12: 123,
        NumLock: 144,
        ScrollLock: 145,
        SemiColon: 186,
        Equals: 187,
        Comma: 188,
        Dash: 189,
        Period: 190,
        UnderScore: 189,
        PlusSign: 187,
        ForwardSlash: 191,
        Tilde: 192,
        GraveAccent: 192,
        OpenBracket: 219,
        ClosedBracket: 221,
        Quote: 222,
    };
    Key[Key.Backspace] = 'Backspace';
    Key[Key.Tab] = 'Tab';
    Key[Key.Enter] = 'Enter';
    Key[Key.Shift] = 'Shift';
    Key[Key.Ctrl] = 'Ctrl';
    Key[Key.Alt] = 'Alt';
    Key[Key.PauseBreak] = 'PauseBreak';
    Key[Key.CapsLock] = 'CapsLock';
    Key[Key.Escape] = 'Escape';
    Key[Key.Space] = 'Space';
    Key[Key.PageUp] = 'PageUp';
    Key[Key.PageDown] = 'PageDown';
    Key[Key.End] = 'End';
    Key[Key.Home] = 'Home';
    Key[Key.LeftArrow] = 'LeftArrow';
    Key[Key.UpArrow] = 'UpArrow';
    Key[Key.RightArrow] = 'RightArrow';
    Key[Key.DownArrow] = 'DownArrow';
    Key[Key.Insert] = 'Insert';
    Key[Key.Delete] = 'Delete';
    Key[Key.Zero] = 'Zero';
    Key[Key.ClosedParen] = 'ClosedParen';
    Key[Key.One] = 'One';
    Key[Key.ExclamationMark] = 'ExclamationMark';
    Key[Key.Two] = 'Two';
    Key[Key.AtSign] = 'AtSign';
    Key[Key.Three] = 'Three';
    Key[Key.PoundSign] = 'PoundSign';
    Key[Key.Hash] = 'Hash';
    Key[Key.Four] = 'Four';
    Key[Key.DollarSign] = 'DollarSign';
    Key[Key.Five] = 'Five';
    Key[Key.PercentSign] = 'PercentSign';
    Key[Key.Six] = 'Six';
    Key[Key.Caret] = 'Caret';
    Key[Key.Hat] = 'Hat';
    Key[Key.Seven] = 'Seven';
    Key[Key.Ampersand] = 'Ampersand';
    Key[Key.Eight] = 'Eight';
    Key[Key.Star] = 'Star';
    Key[Key.Asterik] = 'Asterik';
    Key[Key.Nine] = 'Nine';
    Key[Key.OpenParen] = 'OpenParen';
    Key[Key.A] = 'A';
    Key[Key.B] = 'B';
    Key[Key.C] = 'C';
    Key[Key.D] = 'D';
    Key[Key.E] = 'E';
    Key[Key.F] = 'F';
    Key[Key.G] = 'G';
    Key[Key.H] = 'H';
    Key[Key.I] = 'I';
    Key[Key.J] = 'J';
    Key[Key.K] = 'K';
    Key[Key.L] = 'L';
    Key[Key.M] = 'M';
    Key[Key.N] = 'N';
    Key[Key.O] = 'O';
    Key[Key.P] = 'P';
    Key[Key.Q] = 'Q';
    Key[Key.R] = 'R';
    Key[Key.S] = 'S';
    Key[Key.T] = 'T';
    Key[Key.U] = 'U';
    Key[Key.V] = 'V';
    Key[Key.W] = 'W';
    Key[Key.X] = 'X';
    Key[Key.Y] = 'Y';
    Key[Key.Z] = 'Z';
    Key[Key.LeftWindowKey] = 'LeftWindowKey';
    Key[Key.RightWindowKey] = 'RightWindowKey';
    Key[Key.SelectKey] = 'SelectKey';
    Key[Key.Numpad0] = 'Numpad0';
    Key[Key.Numpad1] = 'Numpad1';
    Key[Key.Numpad2] = 'Numpad2';
    Key[Key.Numpad3] = 'Numpad3';
    Key[Key.Numpad4] = 'Numpad4';
    Key[Key.Numpad5] = 'Numpad5';
    Key[Key.Numpad6] = 'Numpad6';
    Key[Key.Numpad7] = 'Numpad7';
    Key[Key.Numpad8] = 'Numpad8';
    Key[Key.Numpad9] = 'Numpad9';
    Key[Key.Multiply] = 'Multiply';
    Key[Key.Add] = 'Add';
    Key[Key.Subtract] = 'Subtract';
    Key[Key.DecimalPoint] = 'DecimalPoint';
    Key[Key.Divide] = 'Divide';
    Key[Key.F1] = 'F1';
    Key[Key.F2] = 'F2';
    Key[Key.F3] = 'F3';
    Key[Key.F4] = 'F4';
    Key[Key.F5] = 'F5';
    Key[Key.F6] = 'F6';
    Key[Key.F7] = 'F7';
    Key[Key.F8] = 'F8';
    Key[Key.F9] = 'F9';
    Key[Key.F10] = 'F10';
    Key[Key.F11] = 'F11';
    Key[Key.F12] = 'F12';
    Key[Key.NumLock] = 'NumLock';
    Key[Key.ScrollLock] = 'ScrollLock';
    Key[Key.SemiColon] = 'SemiColon';
    Key[Key.Equals] = 'Equals';
    Key[Key.Comma] = 'Comma';
    Key[Key.Dash] = 'Dash';
    Key[Key.Period] = 'Period';
    Key[Key.UnderScore] = 'UnderScore';
    Key[Key.PlusSign] = 'PlusSign';
    Key[Key.ForwardSlash] = 'ForwardSlash';
    Key[Key.Tilde] = 'Tilde';
    Key[Key.GraveAccent] = 'GraveAccent';
    Key[Key.OpenBracket] = 'OpenBracket';
    Key[Key.ClosedBracket] = 'ClosedBracket';
    Key[Key.Quote] = 'Quote';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivGalleryImage = /** @class */ (function () {
        function FivGalleryImage() {
            this.viewerState = 'in';
            this.backdropColor = 'rgb(0,0,0)';
            this.openTiming = '300ms';
            this.closeTiming = '340ms';
            this.willOpen = new core.EventEmitter();
            this.didOpen = new core.EventEmitter();
            this.didClose = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        FivGalleryImage.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivGalleryImage.prototype.open = /**
         * @return {?}
         */
        function () {
            this.willOpen.emit(this);
            /** @type {?} */
            var p = this.getThumbnailPosition(this.image);
            this.animationParams = {
                translate: p.translate,
                timing: this.openTiming,
                height: p.height,
                width: p.width,
                top: p.top,
                left: p.left
            };
            this.overlay.show(49999);
        };
        /**
         * @param {?} position
         * @return {?}
         */
        FivGalleryImage.prototype.close = /**
         * @param {?} position
         * @return {?}
         */
        function (position) {
            /** @type {?} */
            var p = this.getThumbnailPosition(this.image);
            this.animationParams = {
                translate: position.translate,
                timing: this.closeTiming,
                height: p.height,
                width: p.width,
                top: p.top,
                left: p.left
            };
            this.viewerState = 'out';
        };
        /**
         * @param {?} position
         * @param {?} src
         * @return {?}
         */
        FivGalleryImage.prototype.slideOut = /**
         * @param {?} position
         * @param {?} src
         * @return {?}
         */
        function (position, src) {
            this.originalSrc = src;
            /** @type {?} */
            var p = this.getThumbnailPosition(this.image);
            this.animationParams = {
                translate: position.translate,
                timing: this.closeTiming,
                height: p.height,
                width: p.width,
                top: p.top,
                left: p.left
            };
            this.viewerState = 'slideout';
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivGalleryImage.prototype.handleViewerAnimation = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.fromState === 'void' && event.toState === 'in') {
                this.didOpen.emit(this);
            }
            if ((event.fromState === 'in' || event.fromState === 'hidden') &&
                (event.toState === 'out' || event.toState === 'slideout')) {
                this.overlay.hide();
                this.didClose.emit(this);
                this.viewerState = 'in';
            }
            if (event.toState === 'slideout') {
                this.src = this.originalSrc;
            }
        };
        /**
         * @private
         * @param {?} element
         * @return {?}
         */
        FivGalleryImage.prototype.getThumbnailPosition = /**
         * @private
         * @param {?} element
         * @return {?}
         */
        function (element) {
            /** @type {?} */
            var bounds = element.nativeElement.getBoundingClientRect();
            return {
                top: bounds.top,
                left: bounds.left,
                height: element.nativeElement.clientHeight,
                width: element.nativeElement.clientWidth
            };
        };
        FivGalleryImage.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-gallery-image',
                        template: "<ng-container *ngIf=\"!overlay.open && !src\">\n  <ng-content></ng-content>\n</ng-container>\n\n<img #thumbnail [ngClass]=\"{'hidden': (overlay.open || !src)}\" class=\"thumbnail\" [src]=\"src\" (click)=\"open()\">\n<fiv-overlay #overlay>\n\n  <div [style.backgroundColor]=\"backdropColor\"\n    *ngIf=\"overlay.open && viewerState !== 'out' && viewerState !== 'slideout'\" [@fade]=\"viewerState\" class=\"backdrop\">\n  </div>\n\n  <img *ngIf=\"overlay.open\" class=\"viewer-image\" (@image.done)=\"handleViewerAnimation($event)\"\n    [@image]=\"{ value: viewerState, params : animationParams}\" [src]=\"src\">\n\n</fiv-overlay>",
                        animations: [
                            animations.trigger('image', [
                                animations.transition('* => in', [
                                    animations.style({
                                        position: 'absolute',
                                        top: '{{top}}px',
                                        left: '{{left}}px',
                                        transform: 'translate(0%,0%)',
                                        height: '{{height}}px',
                                        width: '{{width}}px',
                                        opacity: 1,
                                        borderRadius: '*'
                                    }),
                                    animations.animate('{{timing}}', animations.style({
                                        position: 'absolute',
                                        top: '50%',
                                        left: '50%',
                                        transform: 'translate(-50%,-50%)',
                                        height: '*',
                                        width: '*',
                                        opacity: 1,
                                        borderRadius: '0'
                                    }))
                                ], {
                                    params: {
                                        top: '0',
                                        left: '0',
                                        height: '*',
                                        width: '*',
                                        timing: '300ms'
                                    }
                                }),
                                animations.transition('* => out', [
                                    animations.style({
                                        position: 'absolute',
                                        top: '{{translate}}px',
                                        left: '50%',
                                        transform: 'translate(-50%,-50%)',
                                        height: '*',
                                        width: '*',
                                        opacity: 1,
                                        borderRadius: '0'
                                    }),
                                    animations.animate('{{timing}}', animations.style({
                                        position: 'absolute',
                                        top: '{{top}}px',
                                        left: '{{left}}px',
                                        transform: 'translate(0%,0%)',
                                        height: '{{height}}px',
                                        width: '{{width}}px',
                                        opacity: 1,
                                        borderRadius: '*'
                                    }))
                                ], {
                                    params: {
                                        top: '0',
                                        left: '0',
                                        height: '*',
                                        width: '*',
                                        translate: '0',
                                        timing: '340ms'
                                    }
                                }),
                                animations.state('hidden', animations.style({ opacity: 0 })),
                                animations.transition('* => slideout', [
                                    animations.style({
                                        position: 'absolute',
                                        top: '{{translate}}px',
                                        left: '50%',
                                        transform: 'translate(-50%,-50%)',
                                        opacity: 1,
                                        borderRadius: '0'
                                    }),
                                    animations.animate('{{timing}}', animations.style({
                                        transform: 'translate(-50%,100%)',
                                        opacity: 0.2,
                                        borderRadius: '0'
                                    }))
                                ], {
                                    params: {
                                        top: '0',
                                        left: '0',
                                        height: '*',
                                        width: '*',
                                        translate: '0',
                                        timing: '340ms'
                                    }
                                })
                            ]),
                            animations.trigger('fade', [
                                animations.transition('void => *', [
                                    animations.style({ opacity: 0 }),
                                    animations.animate('180ms', animations.keyframes([
                                        animations.style({ opacity: 0, offset: 0 }),
                                        animations.style({ opacity: 0.3, offset: 0.75 }),
                                        animations.style({ opacity: 0.97, offset: 1 })
                                    ]))
                                ]),
                                animations.transition(':leave', [
                                    animations.style({ opacity: 0.97 }),
                                    animations.animate('180ms', animations.keyframes([
                                        animations.style({ opacity: 0.97, offset: 0 }),
                                        animations.style({ opacity: 0.6, offset: 0.8 }),
                                        animations.style({ opacity: 0, offset: 1 })
                                    ]))
                                ])
                            ])
                        ],
                        styles: [":host{display:block;--max-height:100%;--border-radius:0px;min-height:var(--max-height);--background:var(--ion-color-light);background:var(--background)}.backdrop{width:100vw;height:100vh;opacity:.97;position:absolute;transition:background-color .3s}.thumbnail{-o-object-position:center;object-position:center;-o-object-fit:cover;object-fit:cover;display:block;height:var(--height,auto);max-height:var(--max-height);width:var(--width,100%);border-radius:var(--border-radius)}.hidden{opacity:0}.viewer-image{-o-object-position:center;object-position:center;-o-object-fit:cover;object-fit:cover;position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);height:auto;max-height:100%;width:auto;max-width:100%;border-radius:var(--border-radius)}"]
                    }] }
        ];
        /** @nocollapse */
        FivGalleryImage.ctorParameters = function () { return []; };
        FivGalleryImage.propDecorators = {
            src: [{ type: core.Input }],
            image: [{ type: core.ViewChild, args: ['thumbnail',] }],
            overlay: [{ type: core.ViewChild, args: ['overlay',] }],
            willOpen: [{ type: core.Output }],
            didOpen: [{ type: core.Output }],
            didClose: [{ type: core.Output }]
        };
        return FivGalleryImage;
    }());
    var Position = /** @class */ (function () {
        function Position() {
        }
        return Position;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivGallery = /** @class */ (function () {
        function FivGallery(domCtrl, renderer, animation, change, platform, document, imageService) {
            this.domCtrl = domCtrl;
            this.renderer = renderer;
            this.animation = animation;
            this.change = change;
            this.platform = platform;
            this.document = document;
            this.imageService = imageService;
            // properties for the slides
            this.activeIndex = 0;
            this.options = {
                zoom: true,
                initialSlide: 0
            };
            this.controlsVisible = true;
            this.pagerVisible = true;
            this.ambient = true;
            this.openTiming = '300ms';
            this.closeTiming = '340ms';
            this.willOpen = new core.EventEmitter();
            this.willClose = new core.EventEmitter();
            this.didOpen = new core.EventEmitter();
            this.didClose = new core.EventEmitter();
            this.backdropChange = new core.EventEmitter();
            this.$onDestroy = new rxjs.Subject();
        }
        /**
         * @param {?} event
         * @return {?}
         */
        FivGallery.prototype.keyEvent = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (this.overlay &&
                this.overlay.open &&
                this.initialImage &&
                this.initialImage.viewerState === 'hidden') {
                this.handleKeyboardEvents(event);
            }
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivGallery.prototype.ngAfterContentInit = /**
         * @return {?}
         */
        function () {
            this.updateImages();
            this.updateToolbars();
            this.subscribeToImageEvents();
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.ngOnDestroy = /**
         * @return {?}
         */
        function () {
            this.$onDestroy.next();
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.subscribeToImageEvents = /**
         * @return {?}
         */
        function () {
            var _this = this;
            rxjs.from(this.images.map((/**
             * @param {?} image
             * @return {?}
             */
            function (image) { return image.didOpen; })))
                .pipe(operators.mergeMap((/**
             * @param {?} value
             * @return {?}
             */
            function (value) { return value; })), operators.takeUntil(this.$onDestroy))
                .subscribe((/**
             * @param {?} image
             * @return {?}
             */
            function (image) { return _this.open(image); }));
            rxjs.from(this.images.map((/**
             * @param {?} image
             * @return {?}
             */
            function (image) { return image.willOpen; })))
                .pipe(operators.mergeMap((/**
             * @param {?} value
             * @return {?}
             */
            function (value) { return value; })), operators.takeUntil(this.$onDestroy))
                .subscribe((/**
             * @param {?} image
             * @return {?}
             */
            function (image) { return _this.willOpen.emit(image); }));
            rxjs.from(this.images.map((/**
             * @param {?} image
             * @return {?}
             */
            function (image) { return image.didClose; })))
                .pipe(operators.mergeMap((/**
             * @param {?} value
             * @return {?}
             */
            function (value) { return value; })), operators.takeUntil(this.$onDestroy))
                .subscribe((/**
             * @param {?} image
             * @return {?}
             */
            function (image) { return _this.didClose.emit(image); }));
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.updateImages = /**
         * @return {?}
         */
        function () {
            this.images.forEach((/**
             * @param {?} img
             * @param {?} i
             * @return {?}
             */
            function (img, i) {
                img.index = i;
            }));
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.updateToolbars = /**
         * @return {?}
         */
        function () {
            var _this = this;
            this.toolbars.forEach((/**
             * @param {?} toolbar
             * @return {?}
             */
            function (toolbar) {
                if (toolbar.position === 'top') {
                    _this.topToolbar = toolbar.content;
                }
                else {
                    _this.bottomToolbar = toolbar.content;
                }
            }));
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivGallery.prototype.handleKeyboardEvents = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.keyCode === Key.RightArrow) {
                this.next();
                return;
            }
            if (event.keyCode === Key.LeftArrow) {
                this.prev();
                return;
            }
            if (event.keyCode === Key.DownArrow || event.keyCode === Key.Escape) {
                this.close();
                return;
            }
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.next = /**
         * @return {?}
         */
        function () {
            if (this.overlay &&
                this.overlay.open &&
                this.initialImage &&
                this.initialImage.viewerState === 'hidden') {
                this.slides.slideNext();
            }
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.prev = /**
         * @return {?}
         */
        function () {
            if (this.overlay &&
                this.overlay.open &&
                this.initialImage &&
                this.initialImage.viewerState === 'hidden') {
                this.slides.slidePrev();
            }
        };
        /**
         * @param {?} initial
         * @return {?}
         */
        FivGallery.prototype.open = /**
         * @param {?} initial
         * @return {?}
         */
        function (initial) {
            this.activeIndex = initial.index;
            this.options.initialSlide = this.activeIndex;
            this.overlay.show(50000);
            this.initialImage = initial;
            this.initialImage.openTiming = this.openTiming;
            this.initialImage.closeTiming = this.closeTiming;
            this.initialImage.backdropColor = this.ambient
                ? this.imageService.getAverageRGB(this.images.toArray()[this.activeIndex].image.nativeElement)
                : '#000';
            this.showControls();
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.close = /**
         * @return {?}
         */
        function () {
            this.closeFromPullDown(0);
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.dismiss = /**
         * @return {?}
         */
        function () {
            this.closeFromPullDown(0, false);
        };
        /**
         * @param {?} progress
         * @param {?=} emit
         * @return {?}
         */
        FivGallery.prototype.closeFromPullDown = /**
         * @param {?} progress
         * @param {?=} emit
         * @return {?}
         */
        function (progress, emit) {
            if (emit === void 0) { emit = true; }
            if (emit) {
                this.willClose.emit(this.initialImage);
            }
            this.transformSlides(0);
            /** @type {?} */
            var sameAsInitial = this.images.toArray()[this.activeIndex].index === this.initialImage.index;
            /** @type {?} */
            var position = this.getImagePosition(this.images.toArray()[this.activeIndex].image, progress);
            if (sameAsInitial) {
                this.initialImage.close(position);
            }
            else {
                /** @type {?} */
                var src = this.initialImage.src;
                this.initialImage.src = this.images.toArray()[this.activeIndex].src;
                this.initialImage.slideOut(position, src);
            }
            if (this.inFullscreen) {
                this.closeFullscreen();
            }
            this.slidesLoaded = false;
            this.overlay.hide();
        };
        /**
         * @param {?} progress
         * @return {?}
         */
        FivGallery.prototype.resetPan = /**
         * @param {?} progress
         * @return {?}
         */
        function (progress) {
            this.resetSlides(progress);
        };
        /**
         * @private
         * @param {?} element
         * @param {?=} offset
         * @return {?}
         */
        FivGallery.prototype.getImagePosition = /**
         * @private
         * @param {?} element
         * @param {?=} offset
         * @return {?}
         */
        function (element, offset) {
            if (offset === void 0) { offset = 0; }
            /** @type {?} */
            var bounds = element.nativeElement.getBoundingClientRect();
            return {
                top: bounds.top,
                left: bounds.left,
                height: element.nativeElement.clientHeight,
                width: element.nativeElement.clientWidth,
                translate: this.platform.height() / 2 + offset * 120
            };
        };
        /**
         * @param {?} progress
         * @return {?}
         */
        FivGallery.prototype.transformSlides = /**
         * @param {?} progress
         * @return {?}
         */
        function (progress) {
            var _this = this;
            if (this.controlsVisible) {
                this.hideControls();
            }
            this.domCtrl.write((/**
             * @return {?}
             */
            function () {
                _this.renderer.setStyle(_this.viewer.nativeElement, 'transform', "translateY(" + progress * 120 + "px)");
            }));
        };
        /**
         * @param {?} progress
         * @return {?}
         */
        FivGallery.prototype.resetSlides = /**
         * @param {?} progress
         * @return {?}
         */
        function (progress) {
            var _this = this;
            /** @type {?} */
            var reset = this.animation.build([
                animations.style({ transform: "translateY(" + progress * 120 + "px)" }),
                animations.animate('150ms', animations.style({ transform: "translateY(0px)" }))
            ]);
            /** @type {?} */
            var animation = reset.create(this.viewer.nativeElement);
            animation.play();
            animation.onDone((/**
             * @return {?}
             */
            function () {
                animation.destroy();
                _this.transformSlides(0);
                _this.showControls();
            }));
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.slideDidChange = /**
         * @return {?}
         */
        function () {
            this.activeIndex = this.swiper.nativeElement.swiper.activeIndex;
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.ionSlideNextStart = /**
         * @return {?}
         */
        function () {
            if (this.slidesLoaded) {
                this.updateBackdrop(this.activeIndex + 1);
            }
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.ionSlidePrevStart = /**
         * @return {?}
         */
        function () {
            if (this.slidesLoaded) {
                this.updateBackdrop(this.activeIndex - 1);
            }
        };
        /**
         * @param {?} index
         * @return {?}
         */
        FivGallery.prototype.updateBackdrop = /**
         * @param {?} index
         * @return {?}
         */
        function (index) {
            this.initialImage.backdropColor = this.ambient
                ? this.imageService.getAverageRGB(this.images.toArray()[index].image.nativeElement)
                : '#000';
            this.backdropChange.emit(this.initialImage);
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.onSlidesLoad = /**
         * @return {?}
         */
        function () {
            var _this = this;
            this.slidesLoaded = true;
            this.didOpen.emit(this.initialImage);
            this.activeIndex = this.swiper.nativeElement.swiper.activeIndex;
            this.initialImage.viewerState = 'hidden';
            this.swiper.nativeElement.swiper.on('click', (/**
             * @return {?}
             */
            function () {
                _this.handleSingleTap();
            }));
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.fullscreen = /**
         * @return {?}
         */
        function () {
            if (this.inFullscreen) {
                this.closeFullscreen();
            }
            else {
                this.openFullscreen();
            }
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.openFullscreen = /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var elem = document.documentElement;
            if (elem.requestFullscreen) {
                elem.requestFullscreen();
            }
            else if (elem['mozRequestFullScreen']) {
                /* Firefox */
                elem['mozRequestFullScreen']();
            }
            else if (elem['webkitRequestFullscreen']) {
                /* Chrome, Safari and Opera */
                elem['webkitRequestFullscreen']();
            }
            else if (elem['msRequestFullscreen']) {
                /* IE/Edge */
                elem['msRequestFullscreen']();
            }
            this.inFullscreen = true;
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.closeFullscreen = /**
         * @return {?}
         */
        function () {
            this.inFullscreen = false;
            if (this.document.exitFullscreen) {
                this.document.exitFullscreen();
            }
            else if (this.document.mozCancelFullScreen) {
                /* Firefox */
                this.document.mozCancelFullScreen();
            }
            else if (this.document.webkitExitFullscreen) {
                /* Chrome, Safari and Opera */
                this.document.webkitExitFullscreen();
            }
            else if (this.document.msExitFullscreen) {
                /* IE/Edge */
                this.document.msExitFullscreen();
            }
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.zoom = /**
         * @return {?}
         */
        function () {
            if (this.zoomedIn) {
                this.zoomOut();
            }
            else {
                this.zoomIn();
            }
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.zoomIn = /**
         * @return {?}
         */
        function () {
            this.swiper.nativeElement.swiper.zoom.in();
            this.zoomedIn = true;
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.zoomOut = /**
         * @return {?}
         */
        function () {
            this.swiper.nativeElement.swiper.zoom.out();
            this.zoomedIn = false;
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.handleSingleTap = /**
         * @return {?}
         */
        function () {
            this.controlsVisible = !this.controlsVisible;
            this.change.detectChanges();
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.hideControls = /**
         * @return {?}
         */
        function () {
            this.controlsVisible = false;
            this.change.detectChanges();
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.showControls = /**
         * @return {?}
         */
        function () {
            this.controlsVisible = true;
            this.change.detectChanges();
        };
        FivGallery.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-gallery',
                        template: "<ng-content></ng-content>\n<fiv-overlay #overlay>\n\n  <div [@slideDown] *ngIf=\"controlsVisible && topToolbar\" class=\"gallery-toolbar header\" color=\"transparent\">\n    <ng-container [ngTemplateOutlet]=\"topToolbar\">\n    </ng-container>\n  </div>\n\n  <ng-container *fivIf=\"['desktop']\">\n    <ion-fab [@scale] *ngIf=\"controlsVisible && images?.length > 0 && pagerVisible\" vertical=\"center\" horizontal=\"start\"\n      slot=\"fixed\">\n      <ion-fab-button color=\"light\" (click)=\"prev()\" [disabled]=\"activeIndex === 0\">\n        <ion-icon name=\"arrow-back\"></ion-icon>\n      </ion-fab-button>\n    </ion-fab>\n  </ng-container>\n\n  <div #viewer class=\"viewer\" fivPull [maxPullHeight]=\"160\" [minPullHeight]=\"120\" (fivPull)=\"transformSlides($event)\"\n    (fivRefresh)=\"closeFromPullDown($event)\" (fivCancel)=\"resetPan($event)\" [enableScroll]=\"true\">\n    <ion-slides #slider *ngIf=\"overlay.open\" [ngClass]=\"[initialImage?.viewerState]\"\n      (ionSlideDidChange)=\"slideDidChange()\" (ionSlideNextStart)=\"ionSlideNextStart()\"\n      (ionSlidePrevStart)=\"ionSlidePrevStart()\" (ionSlidesDidLoad)=\"onSlidesLoad()\" [options]=\"options\">\n      <ion-slide *ngFor=\"let image of images; let i = index\">\n        <div class=\"swiper-zoom-container\">\n          <img [ngClass]=\"{'instant': activeIndex !== i}\" [src]=\"image.src\">\n        </div>\n      </ion-slide>\n    </ion-slides>\n  </div>\n\n  <ng-container *fivIf=\"['desktop']\">\n    <ion-fab [@scale] *ngIf=\"controlsVisible && pagerVisible\" vertical=\"center\" horizontal=\"end\" slot=\"fixed\">\n      <ion-fab-button color=\"light\" (click)=\"next()\" [disabled]=\"activeIndex === images.length - 1\">\n        <ion-icon name=\"arrow-forward\"></ion-icon>\n      </ion-fab-button>\n    </ion-fab>\n  </ng-container>\n\n  <div [@slideUp] *ngIf=\"controlsVisible && bottomToolbar\" class=\"gallery-toolbar footer\" color=\"transparent\">\n    <ng-container [ngTemplateOutlet]=\"bottomToolbar\">\n    </ng-container>\n  </div>\n\n\n</fiv-overlay>",
                        animations: [
                            animations.trigger('scale', [
                                animations.transition('void => *', [
                                    animations.style({ opacity: 0, transform: 'scale(0)' }),
                                    animations.animate('125ms', animations.style({ opacity: 1, transform: 'scale(1)' }))
                                ]),
                                animations.transition('* => void', [
                                    animations.style({ opacity: 1, transform: 'scale(1)' }),
                                    animations.animate('125ms', animations.style({ opacity: 0, transform: 'scale(0)' }))
                                ])
                            ]),
                            animations.trigger('slideUp', [
                                animations.transition('void => *', [
                                    animations.style({ opacity: 0, transform: 'translateY(100%)' }),
                                    animations.animate('75ms', animations.style({ opacity: 1, transform: 'translateY(0%)' }))
                                ]),
                                animations.transition('* => void', [
                                    animations.style({ opacity: 1, transform: 'translateY(0%)' }),
                                    animations.animate('75ms', animations.style({ opacity: 0, transform: 'translateY(100%)' }))
                                ])
                            ]),
                            animations.trigger('slideDown', [
                                animations.transition('* => void', [
                                    animations.style({ opacity: 0, transform: 'translateY(0%)' }),
                                    animations.animate('75ms', animations.style({ opacity: 1, transform: 'translateY(-100%)' }))
                                ]),
                                animations.transition('void => *', [
                                    animations.style({ opacity: 1, transform: 'translateY(-100%)' }),
                                    animations.animate('75ms', animations.style({ opacity: 0, transform: 'translateY(0%)' }))
                                ])
                            ])
                        ],
                        styles: [".viewer{width:100vw;height:100vh}.viewer ion-slides{height:100%}.viewer img{height:auto;max-height:100%;width:auto;max-width:100%}.viewer img.instant{transition-duration:0s!important}.backdrop{background:rgba(0,0,0,.97);width:100vw;height:100vh;position:absolute}.gallery-toolbar{width:100%;--fiv-gallery-toolbar-color:#fff;position:absolute;color:var(--fiv-gallery-toolbar-color)}.gallery-toolbar.header{top:env(safe-area-inset-top)}.gallery-toolbar.footer{bottom:env(safe-area-inset-bottom)}ion-slides.in,ion-slides.out{visibility:hidden}"]
                    }] }
        ];
        /** @nocollapse */
        FivGallery.ctorParameters = function () { return [
            { type: angular.DomController },
            { type: core.Renderer2 },
            { type: animations.AnimationBuilder },
            { type: core.ChangeDetectorRef },
            { type: angular.Platform },
            { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] }] },
            { type: ImageService }
        ]; };
        FivGallery.propDecorators = {
            overlay: [{ type: core.ViewChild, args: ['overlay',] }],
            viewer: [{ type: core.ViewChild, args: ['viewer',] }],
            swiper: [{ type: core.ViewChild, args: ['slider', { read: core.ElementRef },] }],
            slides: [{ type: core.ViewChild, args: ['slider',] }],
            images: [{ type: core.ContentChildren, args: [core.forwardRef((/**
                         * @return {?}
                         */
                        function () { return FivGalleryImage; })), { descendants: true },] }],
            toolbars: [{ type: core.ContentChildren, args: [FivGalleryToolbar,] }],
            pagerVisible: [{ type: core.Input }],
            ambient: [{ type: core.Input }],
            openTiming: [{ type: core.Input }],
            closeTiming: [{ type: core.Input }],
            willOpen: [{ type: core.Output }],
            willClose: [{ type: core.Output }],
            didOpen: [{ type: core.Output }],
            didClose: [{ type: core.Output }],
            backdropChange: [{ type: core.Output }],
            keyEvent: [{ type: core.HostListener, args: ['window:keyup', ['$event'],] }]
        };
        return FivGallery;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivOverlayModule = /** @class */ (function () {
        function FivOverlayModule() {
        }
        FivOverlayModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivOverlay, FivOverlayContent],
                        imports: [common.CommonModule],
                        exports: [FivOverlay, FivOverlayContent],
                        entryComponents: [FivOverlayContent],
                        providers: [FivOverlayService]
                    },] }
        ];
        return FivOverlayModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivIfPlatform = /** @class */ (function () {
        function FivIfPlatform(platform, viewContainer, templateRef) {
            this.platform = platform;
            this.viewContainer = viewContainer;
            this.templateRef = templateRef;
        }
        Object.defineProperty(FivIfPlatform.prototype, "fivIf", {
            set: /**
             * @param {?} platforms
             * @return {?}
             */
            function (platforms) {
                var _this = this;
                /** @type {?} */
                var show = true;
                platforms.forEach((/**
                 * @param {?} p
                 * @return {?}
                 */
                function (p) {
                    if (!_this.platform.is(p)) {
                        show = false;
                    }
                }));
                if (show) {
                    this.viewContainer.createEmbeddedView(this.templateRef);
                }
                else {
                    this.viewContainer.clear();
                }
            },
            enumerable: true,
            configurable: true
        });
        FivIfPlatform.decorators = [
            { type: core.Directive, args: [{
                        selector: '[fivIf]'
                    },] }
        ];
        /** @nocollapse */
        FivIfPlatform.ctorParameters = function () { return [
            { type: angular.Platform },
            { type: core.ViewContainerRef },
            { type: core.TemplateRef }
        ]; };
        FivIfPlatform.propDecorators = {
            fivIf: [{ type: core.Input }]
        };
        return FivIfPlatform;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivIfModule = /** @class */ (function () {
        function FivIfModule() {
        }
        FivIfModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivIfPlatform],
                        imports: [common.CommonModule],
                        exports: [FivIfPlatform]
                    },] }
        ];
        return FivIfModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivPull = /** @class */ (function () {
        function FivPull(element, platform, content) {
            this.element = element;
            this.platform = platform;
            this.content = content;
            this.minPullHeight = 112;
            this.maxPullHeight = 168;
            this.enabled = true;
            this.enableScroll = false;
            this.direction = 'down';
            this.fivRefresh = new core.EventEmitter();
            this.fivCancel = new core.EventEmitter();
            this.fivPull = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        FivPull.prototype.ngOnInit = /**
         * @return {?}
         */
        function () {
            var _this = this;
            this.content.scrollEvents = true;
            this.content.getScrollElement().then((/**
             * @param {?} s
             * @return {?}
             */
            function (s) {
                _this.scrollY = s; // needed for scrollTop
                _this.setupPanListener();
            }));
        };
        /**
         * @private
         * @return {?}
         */
        FivPull.prototype.setupPanListener = /**
         * @private
         * @return {?}
         */
        function () {
            var _this = this;
            /** @type {?} */
            var touchstart$ = rxjs.fromEvent(this.element.nativeElement, 'touchstart', { passive: true });
            /** @type {?} */
            var touchmove$ = rxjs.fromEvent(this.element.nativeElement, 'touchmove', { passive: true });
            /** @type {?} */
            var touchend$ = rxjs.fromEvent(this.element.nativeElement, 'touchend', { passive: true });
            /** @type {?} */
            var touchcancel$ = rxjs.fromEvent(this.element.nativeElement, 'touchcancel', { passive: true });
            /** @type {?} */
            var end$ = rxjs.merge(touchend$, touchcancel$);
            /** @type {?} */
            var dragAtTop = touchstart$.pipe(operators.filter((/**
             * @param {?} e
             * @return {?}
             */
            function (e) {
                return (_this.scrollY.scrollTop === 0 || _this.enableScroll) &&
                    _this.direction === 'down' &&
                    _this.enabled;
            })));
            /** @type {?} */
            var dragAtBottom = touchstart$.pipe(operators.filter((/**
             * @param {?} e
             * @return {?}
             */
            function (e) {
                return (_this.scrollY.scrollTop ===
                    _this.scrollY.clientHeight - _this.platform.height() ||
                    _this.enableScroll) &&
                    _this.direction === 'up' &&
                    _this.enabled;
            })));
            /** @type {?} */
            var dragTopDown = dragAtTop.pipe(operators.map((/**
             * @param {?} start
             * @return {?}
             */
            function (start) {
                /** @type {?} */
                var startY = start.touches[0].pageY;
                return touchmove$.pipe(operators.map((/**
                 * @param {?} move
                 * @return {?}
                 */
                function (move) {
                    /** @type {?} */
                    var currentY = move.touches[0].pageY;
                    return {
                        startEvent: start,
                        moveEvent: move,
                        startY: startY,
                        currentY: currentY,
                        offset: currentY - startY
                    };
                })), operators.skipWhile((/**
                 * @param {?} drag
                 * @return {?}
                 */
                function (drag) { return drag.offset < 0; })), operators.takeUntil(end$));
            })));
            dragTopDown.forEach((/**
             * @param {?} drags
             * @return {?}
             */
            function (drags) {
                drags.forEach((/**
                 * @param {?} drag
                 * @return {?}
                 */
                function (drag) {
                    /** @type {?} */
                    var offset = drag.offset / 2;
                    if (offset < 0 || offset > _this.maxPullHeight) {
                        return;
                    }
                    if (offset <= _this.maxPullHeight) ;
                    _this.fivPull.emit(offset / _this.maxPullHeight);
                }));
                drags.pipe(operators.takeLast(1)).subscribe((/**
                 * @param {?} drag
                 * @return {?}
                 */
                function (drag) {
                    /** @type {?} */
                    var offset = drag.offset / 2;
                    /** @type {?} */
                    var refresh = offset >= _this.minPullHeight;
                    if (refresh) {
                        _this.fivRefresh.emit(offset / _this.maxPullHeight);
                    }
                    else {
                        _this.fivCancel.emit(offset / _this.maxPullHeight);
                    }
                }));
            }));
            /** @type {?} */
            var dragBottomUp = dragAtBottom.pipe(operators.map((/**
             * @param {?} start
             * @return {?}
             */
            function (start) {
                /** @type {?} */
                var startY = start.touches[0].pageY;
                return touchmove$.pipe(operators.map((/**
                 * @param {?} move
                 * @return {?}
                 */
                function (move) {
                    /** @type {?} */
                    var currentY = move.touches[0].pageY;
                    return {
                        startEvent: start,
                        moveEvent: move,
                        startY: startY,
                        currentY: currentY,
                        offset: startY - currentY
                    };
                })), operators.skipWhile((/**
                 * @param {?} drag
                 * @return {?}
                 */
                function (drag) { return drag.offset < 0; })), operators.takeUntil(end$));
            })));
            dragBottomUp.forEach((/**
             * @param {?} drags
             * @return {?}
             */
            function (drags) {
                drags.forEach((/**
                 * @param {?} drag
                 * @return {?}
                 */
                function (drag) {
                    /** @type {?} */
                    var offset = drag.offset / 2;
                    if (offset < 0 || offset > _this.maxPullHeight) {
                        return;
                    }
                    _this.fivPull.emit(offset / _this.maxPullHeight);
                }));
                drags.pipe(operators.takeLast(1)).subscribe((/**
                 * @param {?} drag
                 * @return {?}
                 */
                function (drag) {
                    /** @type {?} */
                    var offset = drag.offset / 2;
                    /** @type {?} */
                    var refresh = offset >= _this.minPullHeight;
                    if (refresh) {
                        _this.fivRefresh.emit(offset / _this.maxPullHeight);
                    }
                    else {
                        _this.fivCancel.emit(offset / _this.maxPullHeight);
                    }
                }));
            }));
        };
        FivPull.decorators = [
            { type: core.Directive, args: [{
                        selector: '[fivPull]'
                    },] }
        ];
        /** @nocollapse */
        FivPull.ctorParameters = function () { return [
            { type: core.ElementRef },
            { type: angular.Platform },
            { type: angular.IonContent }
        ]; };
        FivPull.propDecorators = {
            minPullHeight: [{ type: core.Input }],
            maxPullHeight: [{ type: core.Input }],
            enabled: [{ type: core.Input }],
            enableScroll: [{ type: core.Input }],
            direction: [{ type: core.Input }],
            fivRefresh: [{ type: core.Output }],
            fivCancel: [{ type: core.Output }],
            fivPull: [{ type: core.Output }]
        };
        return FivPull;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivPullModule = /** @class */ (function () {
        function FivPullModule() {
        }
        FivPullModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivPull],
                        imports: [common.CommonModule],
                        exports: [FivPull]
                    },] }
        ];
        return FivPullModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivGalleryToolbarContent = /** @class */ (function () {
        function FivGalleryToolbarContent(gallery) {
            this.gallery = gallery;
        }
        /**
         * @return {?}
         */
        FivGalleryToolbarContent.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        FivGalleryToolbarContent.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-gallery-toolbar-content',
                        template: "<ion-toolbar color=\"transparent\">\n  <ion-buttons slot=\"start\">\n    <ion-button (click)=\"gallery.close()\">\n      <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\n    </ion-button>\n  </ion-buttons>\n  <ion-buttons slot=\"end\">\n    <ion-button (click)=\"gallery.fullscreen()\">\n      <fiv-icon slot=\"icon-only\" [name]=\"gallery.inFullscreen ? 'contract': 'expand'\"></fiv-icon>\n    </ion-button>\n    <ion-button (click)=\"gallery.zoom()\">\n      <fiv-icon slot=\"icon-only\" [name]=\"gallery.zoomedIn ? 'remove': 'add'\"></fiv-icon>\n    </ion-button>\n  </ion-buttons>\n</ion-toolbar>\n",
                        styles: [""]
                    }] }
        ];
        /** @nocollapse */
        FivGalleryToolbarContent.ctorParameters = function () { return [
            { type: FivGallery, decorators: [{ type: core.Host }] }
        ]; };
        return FivGalleryToolbarContent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivGalleryModule = /** @class */ (function () {
        function FivGalleryModule() {
        }
        FivGalleryModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [
                            FivGallery,
                            FivGalleryImage,
                            FivGalleryToolbar,
                            FivGalleryToolbarContent
                        ],
                        imports: [
                            common.CommonModule,
                            angular.IonicModule,
                            FivIconModule,
                            FivIfModule,
                            FivPullModule,
                            FivOverlayModule
                        ],
                        exports: [
                            FivGallery,
                            FivGalleryImage,
                            FivGalleryToolbar,
                            FivGalleryToolbarContent
                        ]
                    },] }
        ];
        return FivGalleryModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR = {
        provide: forms.NG_VALUE_ACCESSOR,
        useExisting: core.forwardRef((/**
         * @return {?}
         */
        function () { return FivPasswordInput; })),
        multi: true
    };
    var FivPasswordInput = /** @class */ (function () {
        function FivPasswordInput() {
            this.clearOnEdit = false;
            this.disabled = false;
            this.hideIcon = 'eye-off';
            this.position = 'floating';
            this.showIcon = 'eye';
            this._passwordValue = '';
        }
        /**
         * @return {?}
         */
        FivPasswordInput.prototype.toggleShowPassword = /**
         * @return {?}
         */
        function () {
            this.show = !this.show;
        };
        Object.defineProperty(FivPasswordInput.prototype, "passwordValue", {
            get: /**
             * @return {?}
             */
            function () {
                return this._passwordValue;
            },
            set: /**
             * @param {?} v
             * @return {?}
             */
            function (v) {
                if (v !== this._passwordValue) {
                    this._passwordValue = v;
                    if (this.onChangeCallback) {
                        this.onChangeCallback(this._passwordValue);
                    }
                }
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @param {?} value
         * @return {?}
         */
        FivPasswordInput.prototype.writeValue = /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value !== undefined && value !== this._passwordValue) {
                this._passwordValue = value;
            }
        };
        /**
         * @return {?}
         */
        FivPasswordInput.prototype.blur = /**
         * @return {?}
         */
        function () {
            if (this.onTouchedCallback) {
                this.onTouchedCallback();
            }
        };
        /**
         * @param {?} fn
         * @return {?}
         */
        FivPasswordInput.prototype.registerOnChange = /**
         * @param {?} fn
         * @return {?}
         */
        function (fn) {
            this.onChangeCallback = fn;
        };
        /**
         * @param {?} fn
         * @return {?}
         */
        FivPasswordInput.prototype.registerOnTouched = /**
         * @param {?} fn
         * @return {?}
         */
        function (fn) {
            this.onTouchedCallback = fn;
        };
        FivPasswordInput.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-password-input',
                        template: "<ion-item [color]=\"color\" [disabled]=\"disabled\" [lines]=\"lines\">\n  <ion-label *ngIf=\"placeholder\" [position]=\"position\">{{ placeholder }}</ion-label>\n  <ion-input [type]=\"show ? 'text' : 'password'\" [(ngModel)]=\"passwordValue\" [clearOnEdit]=\"clearOnEdit\"\n    (ionBlur)=\"blur()\"></ion-input>\n  <ion-icon slot=\"end\" [name]=\"show ? hideIcon : showIcon\" (click)=\"toggleShowPassword()\"></ion-icon>\n</ion-item>",
                        providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR],
                        styles: [":host(.password-disabled){pointer-events:none}"]
                    }] }
        ];
        /** @nocollapse */
        FivPasswordInput.ctorParameters = function () { return []; };
        FivPasswordInput.propDecorators = {
            clearOnEdit: [{ type: core.Input }],
            color: [{ type: core.Input }],
            disabled: [{ type: core.HostBinding, args: ['class.password-disabled',] }, { type: core.Input }],
            hideIcon: [{ type: core.Input }],
            lines: [{ type: core.Input }],
            placeholder: [{ type: core.Input }],
            position: [{ type: core.Input }],
            show: [{ type: core.Input }],
            showIcon: [{ type: core.Input }]
        };
        return FivPasswordInput;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivPasswordInputModule = /** @class */ (function () {
        function FivPasswordInputModule() {
        }
        FivPasswordInputModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivPasswordInput],
                        imports: [common.CommonModule, forms.FormsModule, angular.IonicModule],
                        exports: [FivPasswordInput]
                    },] }
        ];
        return FivPasswordInputModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivExpandable = /** @class */ (function () {
        function FivExpandable(change) {
            this.change = change;
            this.isOpen = false;
            this.fivWillOpen = new core.EventEmitter();
            this.fivDidOpen = new core.EventEmitter();
            this.fivWillClose = new core.EventEmitter();
            this.fivDidClose = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        FivExpandable.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivExpandable.prototype.open = /**
         * @return {?}
         */
        function () {
            this.fivWillOpen.emit(this);
            this.isOpen = true;
            this.change.detectChanges();
        };
        /**
         * @return {?}
         */
        FivExpandable.prototype.toggle = /**
         * @return {?}
         */
        function () {
            if (this.isOpen === false) {
                this.open();
            }
            else {
                this.close();
            }
        };
        /**
         * @param {?=} param
         * @return {?}
         */
        FivExpandable.prototype.close = /**
         * @param {?=} param
         * @return {?}
         */
        function (param) {
            this.param = param;
            this.fivWillClose.emit(this);
            this.isOpen = false;
            this.change.detectChanges();
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivExpandable.prototype.onAnimationEnd = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.fromState === 'closed') {
                this.fivDidOpen.emit(this);
            }
            else if (event.fromState === 'open') {
                this.fivDidClose.emit({ expandable: this, param: this.param });
                this.param = null;
            }
        };
        FivExpandable.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-expandable',
                        template: "<div>\n  <ng-content select=\"[header]\"></ng-content>\n  <div [@listAnim]=\"{value: isOpen ? 'open' : 'closed', params: timingFunction ? {time: timingFunction} : {}}\" (@listAnim.done)=\"onAnimationEnd($event)\"\n    style=\"overflow: hidden\">\n    <ng-content select=\"[content]\"></ng-content>\n  </div>\n</div>",
                        animations: [
                            animations.trigger('listAnim', [
                                animations.state('open', animations.style({ height: '*', opacity: 1 })),
                                animations.state('closed', animations.style({ height: '0', opacity: 0 })),
                                animations.transition('closed => open', [
                                    animations.animate('{{time}}', animations.keyframes([
                                        animations.style({ height: '0', opacity: 0, offset: 0 }),
                                        animations.style({ height: '*', opacity: 0.1, offset: 0.8 }),
                                        animations.style({ height: '*', opacity: 1, offset: 1 })
                                    ]))
                                ], { params: { time: '270ms ease-out' } }),
                                animations.transition('open => closed', [
                                    animations.animate('{{time}}', animations.keyframes([
                                        animations.style({ height: '*', opacity: 1, offset: 0 }),
                                        animations.style({ height: '*', opacity: 0.1, offset: 0.2 }),
                                        animations.style({ height: '0', opacity: 0, offset: 1 })
                                    ]))
                                ], { params: { time: '220ms ease-out' } })
                            ])
                        ],
                        styles: [""]
                    }] }
        ];
        /** @nocollapse */
        FivExpandable.ctorParameters = function () { return [
            { type: core.ChangeDetectorRef }
        ]; };
        FivExpandable.propDecorators = {
            isOpen: [{ type: core.Input }],
            timingFunction: [{ type: core.Input }],
            fivWillOpen: [{ type: core.Output }],
            fivDidOpen: [{ type: core.Output }],
            fivWillClose: [{ type: core.Output }],
            fivDidClose: [{ type: core.Output }]
        };
        return FivExpandable;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivExpandableIndicator = /** @class */ (function () {
        function FivExpandableIndicator(expandable) {
            this.expandable = expandable;
            this.icon = 'ios-arrow-down';
        }
        /**
         * @return {?}
         */
        FivExpandableIndicator.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        FivExpandableIndicator.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-expandable-indicator',
                        template: "<ion-icon class=\"indicator\" [ngClass]=\"{'rotate': expandable.isOpen}\" [name]=\"icon\"></ion-icon>",
                        styles: [":host{display:flex}.indicator{transition:125ms}.indicator.rotate{-webkit-transform:rotateZ(180deg);transform:rotateZ(180deg)}"]
                    }] }
        ];
        /** @nocollapse */
        FivExpandableIndicator.ctorParameters = function () { return [
            { type: FivExpandable }
        ]; };
        FivExpandableIndicator.propDecorators = {
            icon: [{ type: core.Input }]
        };
        return FivExpandableIndicator;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivExpandableModule = /** @class */ (function () {
        function FivExpandableModule() {
        }
        FivExpandableModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivExpandable, FivExpandableIndicator],
                        imports: [common.CommonModule, angular.IonicModule],
                        exports: [FivExpandable, FivExpandableIndicator]
                    },] }
        ];
        return FivExpandableModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivStep = /** @class */ (function () {
        function FivStep() {
            this.isLast = false;
            this.open = false;
            this.title = '';
            this.subtitle = '';
        }
        /**
         * @return {?}
         */
        FivStep.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        FivStep.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-step',
                        template: "<ng-template>\n  <ng-content></ng-content>\n</ng-template>",
                        styles: [""]
                    }] }
        ];
        /** @nocollapse */
        FivStep.ctorParameters = function () { return []; };
        FivStep.propDecorators = {
            index: [{ type: core.Input }],
            icon: [{ type: core.Input }],
            isLast: [{ type: core.Input }],
            open: [{ type: core.Input }],
            title: [{ type: core.Input }],
            subtitle: [{ type: core.Input }],
            content: [{ type: core.ViewChild, args: [core.TemplateRef,] }]
        };
        return FivStep;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivStepHeader = /** @class */ (function () {
        function FivStepHeader() {
            this.iconState = 'normal';
        }
        /**
         * @return {?}
         */
        FivStepHeader.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @param {?} event
         * @param {?} icon
         * @return {?}
         */
        FivStepHeader.prototype.changeIconAndReveal = /**
         * @param {?} event
         * @param {?} icon
         * @return {?}
         */
        function (event, icon) {
            if (event.fromState === 'normal') {
                this.tempIcon = this.icon;
                this.icon = icon;
                this.iconState = 'normal';
            }
        };
        /**
         * @return {?}
         */
        FivStepHeader.prototype.complete = /**
         * @return {?}
         */
        function () {
            this.iconState = 'rotate';
        };
        /**
         * @return {?}
         */
        FivStepHeader.prototype.reset = /**
         * @return {?}
         */
        function () {
            this.icon = this.tempIcon;
        };
        FivStepHeader.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-step-header',
                        template: "<div class=\"number-container\">\n  <span *ngIf=\"index && !icon\" [@rotateAnim]=\"iconState\" (@rotateAnim.done)=\"changeIconAndReveal($event,'md-checkmark')\">{{index}}</span>\n  <ion-icon *ngIf=\"icon\" [@rotateAnim]=\"iconState\" (@rotateAnim.done)=\"changeIconAndReveal($event,'md-checkmark')\"\n    [name]=\"icon\"></ion-icon>\n</div>\n<div class=\"step-content\">\n  <ng-content>\n  </ng-content>\n</div>",
                        animations: [
                            animations.trigger('rotateAnim', [
                                animations.transition('normal => rotate', [animations.animate('125ms ease-out')]),
                                animations.transition('rotate => normal', [animations.animate('125ms ease-in')]),
                                animations.state('rotate', animations.style({
                                    opacity: '0',
                                    transform: 'translate(-50%, -50%) rotateZ(45deg)'
                                })),
                                animations.state('normal', animations.style({
                                    opacity: '1',
                                    transform: 'translate(-50%, -50%) rotateZ(0deg)'
                                }))
                            ])
                        ],
                        styles: [":host{display:block;width:100%;height:72px;align-items:center;position:relative;padding-top:8px}.number-container{width:24px;height:24px;border-radius:100%;position:absolute;left:16px;background:var(--fiv-color-circle,var(--ion-color-primary));color:var(--fiv-color-circle-color,var(--ion-color-light))}.number-container *{position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%,-50%) rotateZ(0);transform:translate(-50%,-50%) rotateZ(0)}.step-content{padding-left:56px}"]
                    }] }
        ];
        /** @nocollapse */
        FivStepHeader.ctorParameters = function () { return []; };
        FivStepHeader.propDecorators = {
            index: [{ type: core.Input }],
            icon: [{ type: core.Input }]
        };
        return FivStepHeader;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivStepContent = /** @class */ (function () {
        function FivStepContent(change) {
            this.change = change;
            this.isLast = false;
            this.isOpen = false;
            this.title = '';
            this.subtitle = '';
            this.fivDidOpen = new core.EventEmitter();
            this.fivDidClose = new core.EventEmitter();
            this.fivClick = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        FivStepContent.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivStepContent.prototype.open = /**
         * @return {?}
         */
        function () {
            this.isOpen = true;
            this.change.detectChanges();
        };
        /**
         * @return {?}
         */
        FivStepContent.prototype.close = /**
         * @return {?}
         */
        function () {
            this.isOpen = false;
            this.change.detectChanges();
        };
        /**
         * @return {?}
         */
        FivStepContent.prototype.completeAndClose = /**
         * @return {?}
         */
        function () {
            this.close();
            this.complete();
        };
        /**
         * @return {?}
         */
        FivStepContent.prototype.complete = /**
         * @return {?}
         */
        function () {
            this.header.complete();
        };
        /**
         * @return {?}
         */
        FivStepContent.prototype.reset = /**
         * @return {?}
         */
        function () {
            this.header.reset();
        };
        /**
         * @return {?}
         */
        FivStepContent.prototype.afterClose = /**
         * @return {?}
         */
        function () {
            this.fivDidClose.emit(this);
        };
        /**
         * @return {?}
         */
        FivStepContent.prototype.afterOpen = /**
         * @return {?}
         */
        function () {
            this.fivDidOpen.emit(this);
        };
        /**
         * @return {?}
         */
        FivStepContent.prototype.click = /**
         * @return {?}
         */
        function () {
            this.fivClick.emit(this);
        };
        FivStepContent.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-step-content',
                        template: "<div *ngIf=\"!isLast\" class=\"timeline\"></div>\n<fiv-expandable [isOpen]=\"isOpen\" (fivDidClose)=\"afterClose()\" (fivDidOpen)=\"afterOpen()\" #self>\n  <fiv-ripple header (fivClick)=\"click()\">\n    <fiv-step-header #header [index]=\"index\" [icon]=\"icon\">\n      <div class=\"header-title\">{{title}}</div>\n      <div class=\"header-subtitle\">{{subtitle}}</div>\n    </fiv-step-header>\n  </fiv-ripple>\n  <ng-container content>\n    <div class=\"step-content\">\n      <ng-content></ng-content>\n    </div>\n  </ng-container>\n</fiv-expandable>",
                        styles: [":host{display:block;width:100%;position:relative}.step-content{padding-left:44px;padding-bottom:24px}.timeline{width:1px;height:calc(100% - 32px);position:absolute;background:var(--fiv-color-timeline,var(--ion-color-medium));left:27.5px;top:36px}.header-title{color:var(--fiv-color-title,var(--ion-color-dark))}.header-subtitle{color:var(--fiv-color-subtitle,var(--ion-color-medium));font-size:.8em}"]
                    }] }
        ];
        /** @nocollapse */
        FivStepContent.ctorParameters = function () { return [
            { type: core.ChangeDetectorRef }
        ]; };
        FivStepContent.propDecorators = {
            index: [{ type: core.Input }],
            icon: [{ type: core.Input }],
            isLast: [{ type: core.Input }],
            isOpen: [{ type: core.Input }],
            title: [{ type: core.Input }],
            subtitle: [{ type: core.Input }],
            fivDidOpen: [{ type: core.Output }],
            fivDidClose: [{ type: core.Output }],
            fivClick: [{ type: core.Output }],
            step: [{ type: core.ViewChild, args: ['self',] }],
            header: [{ type: core.ViewChild, args: ['header',] }]
        };
        return FivStepContent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivStepperHorizontal = /** @class */ (function () {
        function FivStepperHorizontal() {
            this.fivSelect = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        FivStepperHorizontal.prototype.ngOnInit = /**
         * @return {?}
         */
        function () {
            this.slides.lockSwipes(true);
        };
        /**
         * @return {?}
         */
        FivStepperHorizontal.prototype.close = /**
         * @return {?}
         */
        function () {
            this.slides.slideTo(0);
        };
        /**
         * @param {?} index
         * @return {?}
         */
        FivStepperHorizontal.prototype.open = /**
         * @param {?} index
         * @return {?}
         */
        function (index) {
            this.slides.lockSwipes(false);
            this.slides.slideTo(index);
            this.slides.lockSwipes(true);
        };
        FivStepperHorizontal.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-stepper-horizontal',
                        template: "<ion-grid fixed>\n  <ion-row>\n    <ion-col *ngFor=\"let content of contents.toArray(); let i = index; let f = first; let l = last;\" [size]=\"12 / contents.length\">\n      <fiv-ripple (click)=\"fivSelect.emit(i)\">\n        <span *ngIf=\"!f\" class=\"line left\"></span>\n        <div class=\"number-container\">\n          <span *ngIf=\"!content.icon\">{{i +  1}}</span>\n          <ion-icon *ngIf=\"content.icon\"\n            [name]=\"content.icon\"></ion-icon>\n        </div>\n        <span *ngIf=\"!l\" class=\"line right\"></span>\n      </fiv-ripple>\n    </ion-col>\n  </ion-row>\n  <ion-row>\n    <ion-col *ngFor=\"let content of contents.toArray(); let i = index; let f = first; let l = last;\" [size]=\"12 / contents.length\">\n      <fiv-ripple (click)=\"fivSelect.emit(i)\">\n          <div class=\"horizontal-content\">\n          <div class=\"header-title\">{{content.title}}</div>\n          <div class=\"header-subtitle\">{{content.subtitle}}</div>\n        </div>\n      </fiv-ripple>\n    </ion-col>\n  </ion-row>\n</ion-grid>\n\n<ion-slides #slides pager=\"false\">\n  <ion-slide *ngFor=\"let content of contents; let i = index\">\n    <ng-container [ngTemplateOutlet]=\"content.content\"></ng-container>\n  </ion-slide>\n</ion-slides>",
                        animations: [
                            animations.trigger('rotateAnim', [
                                animations.transition('normal => rotate', [animations.animate('125ms ease-out')]),
                                animations.transition('rotate => normal', [animations.animate('125ms ease-in')]),
                                animations.state('rotate', animations.style({
                                    opacity: '0',
                                    transform: 'translate(-50%, -50%) rotateZ(45deg)'
                                })),
                                animations.state('normal', animations.style({
                                    opacity: '1',
                                    transform: 'translate(-50%, -50%) rotateZ(0deg)'
                                }))
                            ])
                        ],
                        styles: [".number-container{width:24px;height:24px;border-radius:100%;position:relative;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);background:var(--fiv-color-circle,var(--ion-color-primary));color:var(--fiv-color-circle-color,var(--ion-color-light))}.number-container *{position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%,-50%) rotateZ(0);transform:translate(-50%,-50%) rotateZ(0)}ion-col{text-align:center;padding:0}.line{width:calc(50% - 20px);height:1px;position:absolute;background:var(--fiv-color-timeline,var(--ion-color-medium));top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.left{left:0}.right{right:0}.header-title{color:var(--fiv-color-title,var(--ion-color-dark))}.header-subtitle{color:var(--fiv-color-subtitle,var(--ion-color-medium));font-size:.8em}"]
                    }] }
        ];
        /** @nocollapse */
        FivStepperHorizontal.ctorParameters = function () { return []; };
        FivStepperHorizontal.propDecorators = {
            contents: [{ type: core.Input }],
            slides: [{ type: core.ViewChild, args: ['slides',] }],
            fivSelect: [{ type: core.Output }]
        };
        return FivStepperHorizontal;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivStepper = /** @class */ (function () {
        function FivStepper() {
            this.mode = 'vertical';
            this.fivClick = new core.EventEmitter();
            this.fivClose = new core.EventEmitter();
            this.currentIndex = 0;
        }
        /**
         * @return {?}
         */
        FivStepper.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @param {?} index
         * @return {?}
         */
        FivStepper.prototype.open = /**
         * @param {?} index
         * @return {?}
         */
        function (index) {
            if (this.mode === 'horizontal') {
                this.currentIndex = index;
                this.horizontal.open(index);
            }
            else {
                if (this.steps.toArray()[index]) {
                    if (this.steps.toArray()[index].isOpen) {
                        this.close(index);
                    }
                    else {
                        this.currentIndex = index;
                        this.steps.toArray()[index].open();
                    }
                }
            }
        };
        /**
         * @return {?}
         */
        FivStepper.prototype.openFirst = /**
         * @return {?}
         */
        function () {
            this.open(0);
        };
        /**
         * @return {?}
         */
        FivStepper.prototype.openLast = /**
         * @return {?}
         */
        function () {
            this.open(this.steps.toArray().length - 1);
        };
        /**
         * @param {?} index
         * @param {?=} param
         * @return {?}
         */
        FivStepper.prototype.close = /**
         * @param {?} index
         * @param {?=} param
         * @return {?}
         */
        function (index, param) {
            this.param = param;
            if (this.mode === 'horizontal') {
                this.currentIndex = 0;
                this.horizontal.close();
            }
            else {
                this.currentIndex = -1;
                this.steps.toArray()[index].close();
            }
        };
        /**
         * @return {?}
         */
        FivStepper.prototype.closeFirst = /**
         * @return {?}
         */
        function () {
            this.close(0);
        };
        /**
         * @return {?}
         */
        FivStepper.prototype.closeLast = /**
         * @return {?}
         */
        function () {
            this.close(this.steps.toArray().length - 1);
        };
        /**
         * @param {?} index
         * @return {?}
         */
        FivStepper.prototype.select = /**
         * @param {?} index
         * @return {?}
         */
        function (index) {
            if (index >= 0 && index < this.contents.length) {
                if (this.mode === 'vertical') {
                    this.closeAll();
                }
                this.open(index);
            }
        };
        /**
         * @return {?}
         */
        FivStepper.prototype.closeAll = /**
         * @return {?}
         */
        function () {
            if (this.mode === 'horizontal') {
                this.currentIndex = 0;
                this.horizontal.close();
            }
            else {
                this.steps.forEach((/**
                 * @param {?} step
                 * @return {?}
                 */
                function (step) {
                    step.close();
                }));
            }
        };
        /**
         * @return {?}
         */
        FivStepper.prototype.next = /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var next = this.currentIndex < this.steps.length ? this.currentIndex + 1 : -1;
            this.select(next);
        };
        /**
         * @return {?}
         */
        FivStepper.prototype.previous = /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var next = this.currentIndex > 0 ? this.currentIndex + -1 : -1;
            this.select(next);
        };
        /**
         * @param {?} index
         * @return {?}
         */
        FivStepper.prototype.completeStep = /**
         * @param {?} index
         * @return {?}
         */
        function (index) {
            if (this.mode === 'horizontal') ;
            else {
                this.steps.toArray()[index].complete();
            }
        };
        /**
         * @param {?} index
         * @return {?}
         */
        FivStepper.prototype.completeAndCloseStep = /**
         * @param {?} index
         * @return {?}
         */
        function (index) {
            if (this.mode === 'horizontal') ;
            else {
                this.steps.toArray()[index].completeAndClose();
            }
        };
        /**
         * @param {?} index
         * @return {?}
         */
        FivStepper.prototype.reset = /**
         * @param {?} index
         * @return {?}
         */
        function (index) {
            if (this.mode === 'horizontal') ;
            else {
                this.steps.toArray()[index].reset();
            }
        };
        FivStepper.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-stepper',
                        template: "<ion-list *ngIf=\"mode === 'vertical'\">\n  <fiv-step-content (fivDidClose)=\"fivClose.emit({index: i, param: param}); param = null;\" (fivClick)=\"fivClick.emit(i)\" *ngFor=\"let content of contents; let i = index; let l = last;\" [icon]=\"content.icon\" [index]=\"i + 1\"\n    [isLast]=\"l\" [title]=\"content.title\" [subtitle]=\"content.subtitle\" [isOpen]=\"content.open\">\n    <ng-container [ngTemplateOutlet]=\"content.content\"></ng-container>\n  </fiv-step-content>\n</ion-list>\n<div *ngIf=\"mode === 'horizontal'\">\n  <fiv-stepper-horizontal (fivSelect)=\"select($event)\" [contents]=\"contents\"></fiv-stepper-horizontal>\n</div>",
                        styles: [":host{display:block;width:100%}"]
                    }] }
        ];
        /** @nocollapse */
        FivStepper.ctorParameters = function () { return []; };
        FivStepper.propDecorators = {
            contents: [{ type: core.ContentChildren, args: [FivStep,] }],
            steps: [{ type: core.ViewChildren, args: [FivStepContent,] }],
            horizontal: [{ type: core.ViewChild, args: [FivStepperHorizontal,] }],
            mode: [{ type: core.Input }],
            fivClick: [{ type: core.Output }],
            fivClose: [{ type: core.Output }]
        };
        return FivStepper;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivRipple = /** @class */ (function () {
        function FivRipple(el, renderer) {
            this.el = el;
            this.renderer = renderer;
            this.rippleAnimationEvent = new core.EventEmitter();
            this.round = false;
            this.hover = false;
            this.fivClick = new core.EventEmitter();
            this.rippleAnimationEvent.pipe(operators.debounceTime(750)).subscribe((/**
             * @return {?}
             */
            function () {
                renderer.removeClass(el.nativeElement.querySelector('.ripple'), 'show');
                renderer.removeClass(el.nativeElement.querySelector('.rippleWrapper'), 'show');
            }));
        }
        /**
         * @param {?} event
         * @return {?}
         */
        FivRipple.prototype.clickEvent = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            this.ripple(event);
            this.fivClick.emit(event);
        };
        Object.defineProperty(FivRipple.prototype, "isRound", {
            get: /**
             * @return {?}
             */
            function () {
                return !!this.round;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivRipple.prototype, "canHover", {
            get: /**
             * @return {?}
             */
            function () {
                return !!this.hover;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @param {?=} event
         * @return {?}
         */
        FivRipple.prototype.ripple = /**
         * @param {?=} event
         * @return {?}
         */
        function (event) {
            /** @type {?} */
            var ripple = this.el.nativeElement.querySelector('.ripple');
            if (!ripple) {
                this.rippleFactory();
            }
            if (!event) {
                /** @type {?} */
                var target = this.el.nativeElement;
                /** @type {?} */
                var rect = target.getBoundingClientRect();
                /** @type {?} */
                var centerY = rect.top + rect.height / 2;
                /** @type {?} */
                var centerX = rect.left + rect.width / 2;
                event = { pageX: centerX, pageY: centerY };
            }
            this.rippleAnimation({ pageX: event.pageX, pageY: event.pageY });
            return;
        };
        /**
         * @return {?}
         */
        FivRipple.prototype.rippleFactory = /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var target = this.el.nativeElement;
            /** @type {?} */
            var rect = target.getBoundingClientRect();
            /** @type {?} */
            var radius = Math.max(rect.width, rect.height) + 'px';
            /** @type {?} */
            var rippleWrapper = this.renderer.createElement('div');
            this.renderer.addClass(rippleWrapper, 'rippleWrapper');
            /** @type {?} */
            var ripple = this.renderer.createElement('span');
            this.renderer.addClass(ripple, 'ripple');
            this.renderer.setStyle(ripple, 'height', radius);
            this.renderer.setStyle(ripple, 'width', radius);
            this.renderer.appendChild(rippleWrapper, ripple);
            this.renderer.appendChild(target, rippleWrapper);
        };
        /**
         * @param {?} __0
         * @return {?}
         */
        FivRipple.prototype.rippleAnimation = /**
         * @param {?} __0
         * @return {?}
         */
        function (_a) {
            var pageX = _a.pageX, pageY = _a.pageY;
            /** @type {?} */
            var target = this.el.nativeElement;
            /** @type {?} */
            var rect = target.getBoundingClientRect();
            /** @type {?} */
            var ripple = target.querySelector('.ripple');
            /** @type {?} */
            var rippleWrapper = target.querySelector('.rippleWrapper');
            this.renderer.removeClass(rippleWrapper, 'show');
            this.renderer.removeClass(ripple, 'show');
            /** @type {?} */
            var left = pageX -
                rect.left -
                ripple.offsetWidth / 2 -
                document.body.scrollLeft +
                'px';
            /** @type {?} */
            var top = pageY -
                rect.top -
                ripple.offsetHeight / 2 -
                document.body.scrollTop +
                'px';
            this.renderer.setStyle(ripple, 'top', top);
            this.renderer.setStyle(ripple, 'left', left);
            this.renderer.addClass(rippleWrapper, 'show');
            this.renderer.addClass(ripple, 'show');
            this.rippleAnimationEvent.emit();
        };
        FivRipple.decorators = [
            { type: core.Component, args: [{
                        // tslint:disable-next-line:component-selector
                        selector: 'fiv-ripple, [fivRipple]',
                        template: "<ng-content></ng-content>",
                        styles: [":host{display:block;position:relative}:host:hover{cursor:pointer}:host.hover:hover{background-color:rgba(0,0,0,.1)}:host.round{border-radius:100%}.rippleWrapper{position:absolute;top:0;bottom:0;left:0;width:100%;overflow:hidden;border-radius:inherit}.rippleWrapper::before{content:'';display:block;height:100%;width:100%;-webkit-transform:scale(0);transform:scale(0)}.rippleWrapper.show::before{transition:opacity 1.5s;-webkit-transform:scale(2);transform:scale(2);opacity:0}.ripple{position:absolute;background:rgba(0,0,0,.1);border-radius:100%;-webkit-transform:scale(0);transform:scale(0)}.ripple.show{-webkit-animation:.75s ease-out ripple;animation:.75s ease-out ripple}@-webkit-keyframes ripple{to{-webkit-transform:scale(2);transform:scale(2);opacity:0}}@keyframes ripple{to{-webkit-transform:scale(2);transform:scale(2);opacity:0}}"]
                    }] }
        ];
        /** @nocollapse */
        FivRipple.ctorParameters = function () { return [
            { type: core.ElementRef },
            { type: core.Renderer2 }
        ]; };
        FivRipple.propDecorators = {
            round: [{ type: core.Input }],
            hover: [{ type: core.Input }],
            fivClick: [{ type: core.Output }],
            clickEvent: [{ type: core.HostListener, args: ['click', ['$event'],] }],
            isRound: [{ type: core.HostBinding, args: ['class.round',] }],
            canHover: [{ type: core.HostBinding, args: ['class.hover',] }]
        };
        return FivRipple;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivRippleModule = /** @class */ (function () {
        function FivRippleModule() {
        }
        FivRippleModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivRipple],
                        imports: [common.CommonModule],
                        exports: [FivRipple]
                    },] }
        ];
        return FivRippleModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivStepperModule = /** @class */ (function () {
        function FivStepperModule() {
        }
        FivStepperModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [
                            FivStepper,
                            FivStepContent,
                            FivStepperHorizontal,
                            FivStep,
                            FivStepHeader
                        ],
                        imports: [common.CommonModule, angular.IonicModule, FivExpandableModule, FivRippleModule],
                        exports: [
                            FivStepper,
                            FivStepContent,
                            FivStepperHorizontal,
                            FivStep,
                            FivStepHeader
                        ]
                    },] }
        ];
        return FivStepperModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivRouterItem = /** @class */ (function () {
        function FivRouterItem(router, host) {
            this.router = router;
            this.host = host;
            this.active = false;
            this.detailIcon = 'ios-arrow-forward';
            this.disabled = false;
            this.matchChildUrl = false;
            this.navigate = true;
            /**
             * The position of the active state.
             * Default value is: `"left"`
             */
            this.position = 'left';
            /**
             * The shape of the active state.
             * Possible values are: `"line"`, `"dot"` and `"rounded"`.
             * Default value is: `"line"`
             */
            this.shape = 'line';
        }
        /**
         * @return {?}
         */
        FivRouterItem.prototype.onclick = /**
         * @return {?}
         */
        function () {
            if (this.navigate && this.pageUrl) {
                this.router.navigateByUrl(this.pageUrl);
            }
        };
        Object.defineProperty(FivRouterItem.prototype, "classes", {
            get: /**
             * @return {?}
             */
            function () {
                return this.position + " " + this.shape;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivRouterItem.prototype, "activeClass", {
            get: /**
             * @return {?}
             */
            function () {
                return this.matchActiveUrl() || this.active;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivRouterItem.prototype, "disabledClass", {
            get: /**
             * @return {?}
             */
            function () {
                return this.disabled;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivRouterItem.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivRouterItem.prototype.ngAfterViewInit = /**
         * @return {?}
         */
        function () {
            var _this = this;
            this.router.events
                .pipe(operators.filter((/**
             * @param {?} event
             * @return {?}
             */
            function (event) { return event instanceof router.NavigationEnd; })), operators.filter((/**
             * @param {?} event
             * @return {?}
             */
            function (event) { return event.url === _this.pageUrl; })))
                .subscribe((/**
             * @return {?}
             */
            function () { return _this.openExpandableHost(); }));
        };
        /**
         * @return {?}
         */
        FivRouterItem.prototype.openExpandableHost = /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var isActive = this.matchActiveUrl() || this.active;
            if (isActive) {
                if (this.host && !this.host.isOpen) {
                    this.host.open();
                }
            }
        };
        /**
         * @return {?}
         */
        FivRouterItem.prototype.getClasses = /**
         * @return {?}
         */
        function () {
            return [this.position, this.shape];
        };
        /**
         * @return {?}
         */
        FivRouterItem.prototype.matchActiveUrl = /**
         * @return {?}
         */
        function () {
            return this.matchChildUrl ? this.isChildUrl() : this.isCurrentUrl();
        };
        /**
         * @return {?}
         */
        FivRouterItem.prototype.isCurrentUrl = /**
         * @return {?}
         */
        function () {
            return this.router.url === this.pageUrl;
        };
        /**
         * @return {?}
         */
        FivRouterItem.prototype.isChildUrl = /**
         * @return {?}
         */
        function () {
            return this.router.url.startsWith(this.pageUrl);
        };
        FivRouterItem.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-router-item',
                        template: "<ion-menu-toggle auto-hide=\"false\">\n    <fiv-ripple>\n        <ion-item [color]=\"color\" [detail]=\"detail\" [detailIcon]=\"detailIcon\" [disabled]=\"disabled\" [lines]=\"lines\">\n            <fiv-icon #fivIcon *ngIf=\"icon\" [name]=\"icon\"></fiv-icon>\n            <ion-label>{{text}}</ion-label>\n        </ion-item>\n    </fiv-ripple>\n</ion-menu-toggle>\n<span [ngClass]=\"getClasses()\" class=\"indicator\"></span>",
                        styles: [":host{display:block;position:relative;width:100%}:host(.active){--color-active:var(--ion-color-primary)}:host(.active) ion-item{--color:var(--color-active)}:host(.line){--width-line:4px;--background-line:var(--ion-color-primary)}:host(.active) .line{display:block;background:var(--background-line)}:host.active.left .line{width:var(--width-line);height:100%;top:0}:host.active.right .line{width:var(--width-line);height:100%;top:0}.indicator{position:absolute}:host.active .dot{display:block}:host.active.dot.left{padding-left:24px}.dot{width:var(--fiv-dot-width,8px);height:var(--fiv-dot-heigt,8px);background-color:var(--fiv-dot-color,var(--ion-color-primary));top:50%;border-radius:100%;-webkit-transform:translateY(-50%);transform:translateY(-50%);right:8px;display:none}.dot.left{left:8px;right:unset}.dot.right{right:8px}:host(.rounded.left){--border-radius-rounded-left:0 50px 50px 0}:host(.rounded.left) ion-item{--border-radius:var(--border-radius-rounded-left)}:host(.rounded.right){--border-radius-rounded-right:50px 0 0 50px}:host(.rounded.right) ion-item{--border-radius:var(--border-radius-rounded-right)}:host(.active.rounded){--background-rounded:var(--ion-color-primary-rgb);--opacity-rounded:0.25}:host(.active.rounded) ion-item{--background:rgba(var(--background-rounded), var(--opacity-rounded))}.left{left:0}.right{right:0}ion-item{--border-style:none}fiv-icon{--fiv-padding-end:8px}ion-item:hover{--background-hover:var(--ion-color-light);cursor:pointer;--background:var(--background-hover)}:host(.router-item-disabled){pointer-events:none}"]
                    }] }
        ];
        /** @nocollapse */
        FivRouterItem.ctorParameters = function () { return [
            { type: router.Router },
            { type: FivExpandable, decorators: [{ type: core.Optional }, { type: core.Host }] }
        ]; };
        FivRouterItem.propDecorators = {
            fivIcon: [{ type: core.ViewChild, args: ['fivIcon',] }],
            active: [{ type: core.Input }],
            color: [{ type: core.Input }],
            detail: [{ type: core.Input }],
            detailIcon: [{ type: core.Input }],
            disabled: [{ type: core.Input }],
            icon: [{ type: core.Input }],
            lines: [{ type: core.Input }],
            matchChildUrl: [{ type: core.Input }],
            navigate: [{ type: core.Input }],
            pageUrl: [{ type: core.Input }],
            position: [{ type: core.Input }],
            shape: [{ type: core.Input }],
            text: [{ type: core.Input }],
            onclick: [{ type: core.HostListener, args: ['click',] }],
            classes: [{ type: core.HostBinding, args: ['class',] }],
            activeClass: [{ type: core.HostBinding, args: ['class.active',] }],
            disabledClass: [{ type: core.HostBinding, args: ['class.router-item-disabled',] }]
        };
        return FivRouterItem;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivRouterItemModule = /** @class */ (function () {
        function FivRouterItemModule() {
        }
        FivRouterItemModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivRouterItem],
                        imports: [
                            common.CommonModule,
                            angular.IonicModule,
                            FivExpandableModule,
                            FivIconModule,
                            FivRippleModule
                        ],
                        exports: [FivRouterItem]
                    },] }
        ];
        return FivRouterItemModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivAppBarTabContent = /** @class */ (function () {
        function FivAppBarTabContent() {
            this.active = false;
            this.titleLayout = 'hide';
            this.selected = false;
            this.badge = -1;
            this.ionTabButtonClick = new core.EventEmitter();
        }
        Object.defineProperty(FivAppBarTabContent.prototype, "classes", {
            get: /**
             * @return {?}
             */
            function () {
                return "label-" + this.titleLayout;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivAppBarTabContent.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivAppBarTabContent.prototype.onClick = /**
         * @return {?}
         */
        function () {
            // this.nav.navigateRoot(this.href);
            this.ionTabButtonClick.emit({
                tab: this.tab,
                href: this.href,
                selected: true
            });
        };
        FivAppBarTabContent.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-app-bar-tab-content',
                        template: "<fiv-ripple (fivClick)=\"onClick()\" class=\"tab\" [ngClass]=\"{'active': active}\">\n  <fiv-icon [(indicatorValue)]=\"badge\" [name]=\"icon\"></fiv-icon>\n  <ion-label>{{name}}</ion-label>\n</fiv-ripple>",
                        styles: [":host{width:50%;height:100%;display:inline-block;position:relative}:host fiv-ripple{width:100%;height:100%;display:flex;position:relative;flex-direction:column;align-items:center;justify-content:center}:host fiv-icon{display:block;order:-1;--fiv-dot-top:-6px;--fiv-dot-right:-6px}:host ion-label{order:0}:host .tab.active{--fiv-color-icon:var(--ion-color-primary)}:host .tab.active ion-label{color:var(--ion-color-primary)}:host(.label-hide) ion-label{display:none}:host(.label-active-only) fiv-ripple:not(.active) ion-label{display:none}"]
                    }] }
        ];
        /** @nocollapse */
        FivAppBarTabContent.ctorParameters = function () { return []; };
        FivAppBarTabContent.propDecorators = {
            name: [{ type: core.Input }],
            icon: [{ type: core.Input }],
            tab: [{ type: core.Input }],
            href: [{ type: core.Input }],
            active: [{ type: core.Input }],
            titleLayout: [{ type: core.Input }],
            badge: [{ type: core.Input }],
            classes: [{ type: core.HostBinding, args: ['class',] }],
            ionTabButtonClick: [{ type: core.Output }]
        };
        return FivAppBarTabContent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivFeatureDiscovery = /** @class */ (function () {
        function FivFeatureDiscovery(renderer, platform) {
            this.renderer = renderer;
            this.platform = platform;
            this.top = 0;
            this.left = 0;
            this.width = 420;
            this.height = 420;
            this.innerDiameter = 0;
            this.featurePadding = 0;
            this.contentTop = 0;
            this.contentLeft = 0;
            this.contentWidth = 0;
            this.contentHeight = 0;
            this.contentOffset = 0;
            this.animationState = 'hidden';
            this.pulse = 'small';
            this.fivClick = new core.EventEmitter();
            this.fivBackdropClick = new core.EventEmitter();
            this.fivClose = new core.EventEmitter();
            this.fivOpen = new core.EventEmitter();
            this.fivAnimation = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        FivFeatureDiscovery.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivFeatureDiscovery.prototype.ngAfterContentInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @param {?} bounds
         * @return {?}
         */
        FivFeatureDiscovery.prototype.setBounds = /**
         * @param {?} bounds
         * @return {?}
         */
        function (bounds) {
            this.bounds = bounds;
            this.innerDiameter =
                bounds.height > bounds.width ? bounds.height : bounds.width;
            this.top = bounds.top + bounds.height / 2 - this.height / 2;
            this.left = bounds.left + bounds.width / 2 - this.width / 2;
            this.calculateContentBounds();
            if (!this.icon) {
                // tslint:disable-next-line:max-line-length
                /** @type {?} */
                var gradient = "-webkit-radial-gradient(transparent " + (this
                    .innerDiameter /
                    2 +
                    5) + "px, var(--fiv-color-feature) " + (this.innerDiameter / 2 + 5) + "px)";
                // tslint:disable-next-line:max-line-length
                /** @type {?} */
                var pulseGradient = "-webkit-radial-gradient(transparent " + (this
                    .innerDiameter /
                    2 +
                    5) + "px, var(--fiv-color-pulse) " + (this.innerDiameter / 2 + 5) + "px)";
                this.renderer.setStyle(this.circle.nativeElement, 'background', gradient);
                this.renderer.setStyle(this.innerPulse.nativeElement, 'background', pulseGradient);
                this.renderer.setStyle(this.outerPulse.nativeElement, 'background', pulseGradient);
            }
        };
        /**
         * @return {?}
         */
        FivFeatureDiscovery.prototype.calculateContentBounds = /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var absoluteCenter = {
                x: this.platform.width() / 2,
                y: this.platform.height() / 2
            };
            /** @type {?} */
            var center = {
                x: this.left + this.width / 2,
                y: this.top + this.width / 2
            };
            /** @type {?} */
            var rectWidth = Math.sqrt(Math.pow(this.width, 2) / 2);
            /** @type {?} */
            var isTop = center.y < absoluteCenter.y;
            /** @type {?} */
            var isLeft = center.x < absoluteCenter.x;
            /** @type {?} */
            var innerRadius = this.innerDiameter / 2;
            /** @type {?} */
            var padding = this.featurePadding / 2;
            /** @type {?} */
            var contentRight = 0;
            /** @type {?} */
            var contentBottom = 0;
            if (isLeft) {
                this.contentLeft = center.x - innerRadius;
                contentRight = Math.min(center.x + rectWidth / 2 + this.contentOffset, this.platform.width());
            }
            else {
                this.contentLeft = Math.max(center.x - rectWidth / 2 - this.contentOffset, 0);
                contentRight = center.x + innerRadius;
            }
            if (isTop) {
                this.contentTop = center.y + innerRadius + padding;
                contentBottom = center.y + rectWidth / 2 + -1 * this.contentOffset;
            }
            else {
                this.contentTop = center.y - rectWidth / 2 + this.contentOffset;
                contentBottom = center.y - innerRadius - padding;
            }
            this.contentWidth = Math.abs(this.contentLeft - contentRight);
            this.contentHeight = Math.abs(this.contentTop - contentBottom);
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivFeatureDiscovery.prototype.handleCircleAnimation = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            this.fivAnimation.emit(event);
            if (event.toState === 'visible') {
                this.fivOpen.emit();
            }
            if (event.fromState === 'visible' && event.toState === 'hidden') {
                this.fivClose.emit();
            }
            if (event.fromState === 'visible' && event.toState === 'execute') {
                this.fivClose.emit();
            }
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivFeatureDiscovery.prototype.handleFeatureAnimation = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.toState === 'big') {
                this.pulse = 'small';
            }
            if (event.toState === 'small') {
                this.pulse = 'big';
            }
        };
        /**
         * @return {?}
         */
        FivFeatureDiscovery.prototype.show = /**
         * @return {?}
         */
        function () {
            this.animationState = 'visible';
        };
        /**
         * @return {?}
         */
        FivFeatureDiscovery.prototype.hide = /**
         * @return {?}
         */
        function () {
            this.animationState = 'hidden';
        };
        /**
         * @return {?}
         */
        FivFeatureDiscovery.prototype.featureClick = /**
         * @return {?}
         */
        function () {
            this.animationState = 'execute';
        };
        /**
         * @param {?} icon
         * @return {?}
         */
        FivFeatureDiscovery.prototype.setIcon = /**
         * @param {?} icon
         * @return {?}
         */
        function (icon) {
            if (icon) {
                this.icon = icon.name;
            }
        };
        FivFeatureDiscovery.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-feature-discovery',
                        template: "<div class=\"backdrop\" (click)=\"fivBackdropClick.emit()\"></div>\n<div [@scale]=\"animationState\" (@scale.done)=\"handleCircleAnimation($event)\" #circle class=\"circle\"\n  [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\" [style.top]=\"top + 'px'\" [style.left]=\"left + 'px'\">\n  <div #pOuter class=\"feature center\" [@pulseFade]=\"pulse\" [style.height]=\"(innerDiameter + featurePadding) + 'px'\"\n    [style.width]=\"(innerDiameter + featurePadding) + 'px'\">\n  </div>\n  <fiv-ripple #pInner class=\"feature center\" (fivClick)=\"fivClick.emit()\" [@pulse]=\"pulse\"\n    (@pulse.done)=\"handleFeatureAnimation($event)\" [style.height]=\"(innerDiameter + (icon ? featurePadding : 0)) + 'px'\"\n    [style.width]=\"(innerDiameter + (icon ? featurePadding : 0)) + 'px'\">\n    <fiv-icon class=\"center\" *ngIf=\"icon\" [name]=\"icon\"></fiv-icon>\n  </fiv-ripple>\n</div>\n<div class=\"content\" *ngIf=\"animationState === 'visible'\" [@contentAnim] [style.width]=\"contentWidth + 'px'\"\n  [style.height]=\"contentHeight + 'px'\" [style.top]=\"contentTop + 'px'\" [style.left]=\"contentLeft + 'px'\">\n  <ng-content></ng-content>\n</div>",
                        animations: [
                            animations.trigger('scale', [
                                animations.transition('* => visible', [
                                    animations.style({ transform: 'scale(0)', opacity: '0' }),
                                    animations.animate('240ms ease-out', animations.style({ transform: 'scale(1)', opacity: '1' }))
                                ]),
                                animations.transition('visible => hidden', [
                                    animations.style({ transform: 'scale(1)', opacity: '1' }),
                                    animations.animate('215ms ease-in', animations.style({ transform: 'scale(0)', opacity: '0' }))
                                ]),
                                animations.transition('visible => execute', [
                                    animations.style({ transform: 'scale(1)', opacity: '1' }),
                                    animations.animate('215ms 0.15s ease-in', animations.style({ transform: 'scale(1.4)', opacity: '0' }))
                                ])
                            ]),
                            animations.trigger('pulse', [
                                animations.transition('small => big', [
                                    animations.style({ transform: 'scale(1) translate(-50%,-50%)' }),
                                    animations.animate('1000ms', animations.style({ transform: 'scale(1.1) translate(-45%,-45%)' }))
                                ]),
                                animations.transition('big => small', [
                                    animations.style({ transform: 'scale(1.1) translate(-45%,-45%)' }),
                                    animations.animate('400ms', animations.style({ transform: 'scale(1) translate(-50%,-50%)' }))
                                ])
                            ]),
                            animations.trigger('pulseFade', [
                                animations.transition('small => big', [
                                    animations.style({ transform: 'scale(1) translate(-50%,-50%)', opacity: 0.8 }),
                                    animations.animate('1000ms', animations.style({ transform: 'scale(1.6) translate(-28%,-28%)', opacity: 0 }))
                                ]),
                                animations.transition('big => small', [
                                    animations.style({ transform: 'scale(1) translate(-50%,-50%)', opacity: 0 }),
                                    animations.animate('400ms', animations.style({ transform: 'scale(1) translate(-50%,-50%)', opacity: 0 }))
                                ])
                            ]),
                            animations.trigger('contentAnim', [
                                animations.transition('void => *', [
                                    animations.style({ opacity: '0' }),
                                    animations.animate('100ms 240ms ease-out', animations.style({ opacity: '1' }))
                                ])
                            ])
                        ],
                        styles: [":host{display:block;height:100vh;width:100vw;position:absolute;--fiv-color-feature:rgba(56, 128, 255, 0.97);--fiv-color-pulse:var(--ion-color-light)}.backdrop{display:block;height:100vh;width:100vw;position:absolute}fiv-icon{--fiv-color-icon:var(--ion-color-primary)}.circle{position:absolute;border-radius:100%;background:var(--fiv-color-feature);box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.feature{border-radius:100%;background:var(--fiv-color-pulse)}.content{position:absolute}.center{position:absolute;left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}"]
                    }] }
        ];
        /** @nocollapse */
        FivFeatureDiscovery.ctorParameters = function () { return [
            { type: core.Renderer2 },
            { type: angular.Platform }
        ]; };
        FivFeatureDiscovery.propDecorators = {
            circle: [{ type: core.ViewChild, args: ['circle',] }],
            rect: [{ type: core.ViewChild, args: ['rect',] }],
            innerPulse: [{ type: core.ViewChild, args: ['pInner', { read: core.ElementRef },] }],
            outerPulse: [{ type: core.ViewChild, args: ['pOuter',] }],
            fivClick: [{ type: core.Output }],
            fivBackdropClick: [{ type: core.Output }],
            fivClose: [{ type: core.Output }],
            fivOpen: [{ type: core.Output }],
            fivAnimation: [{ type: core.Output }]
        };
        return FivFeatureDiscovery;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivLoadingService = /** @class */ (function () {
        function FivLoadingService() {
            this.loading = false;
            this.isComplete = false;
            this.loadChange = new rxjs.BehaviorSubject(this.loading);
            this.completeChange = new rxjs.BehaviorSubject(this.isComplete);
        }
        /**
         * @return {?}
         */
        FivLoadingService.prototype.load = /**
         * @return {?}
         */
        function () {
            this.loading = true;
            this.loadChange.next(this.loading);
        };
        /**
         * @return {?}
         */
        FivLoadingService.prototype.unload = /**
         * @return {?}
         */
        function () {
            this.loading = false;
            this.loadChange.next(this.loading);
            this.isComplete = false;
        };
        /**
         * @return {?}
         */
        FivLoadingService.prototype.toggleSpinner = /**
         * @return {?}
         */
        function () {
            this.loading = !this.loading;
        };
        /**
         * @return {?}
         */
        FivLoadingService.prototype.complete = /**
         * @return {?}
         */
        function () {
            this.isComplete = true;
            this.completeChange.next(this.isComplete);
        };
        FivLoadingService.decorators = [
            { type: core.Injectable, args: [{
                        providedIn: 'root'
                    },] }
        ];
        /** @nocollapse */
        FivLoadingService.ctorParameters = function () { return []; };
        /** @nocollapse */ FivLoadingService.ngInjectableDef = core.defineInjectable({ factory: function FivLoadingService_Factory() { return new FivLoadingService(); }, token: FivLoadingService, providedIn: "root" });
        return FivLoadingService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivLoadingProgressBar = /** @class */ (function () {
        function FivLoadingProgressBar(loadingService, builder) {
            this.loadingService = loadingService;
            this.builder = builder;
            this.loading = false;
            this.global = false;
            this.isComplete = false;
            this.progress = 0;
            this.verticalAlign = 'top';
            this.fivComplete = new core.EventEmitter();
            this.fivDoneShrinking = new core.EventEmitter();
            this.fivRefresh = new core.EventEmitter();
            this.animating = false;
        }
        /**
         * @return {?}
         */
        FivLoadingProgressBar.prototype.ngOnInit = /**
         * @return {?}
         */
        function () {
            var _this = this;
            if (this.global) {
                this.loadingService.completeChange.subscribe((/**
                 * @param {?} isComplete
                 * @return {?}
                 */
                function (isComplete) {
                    if (isComplete) {
                        _this.complete(null);
                    }
                }));
            }
        };
        /**
         * @return {?}
         */
        FivLoadingProgressBar.prototype.ngOnDestroy = /**
         * @return {?}
         */
        function () {
            if (this.global) {
                this.loadingService.completeChange.unsubscribe();
            }
        };
        /**
         * @return {?}
         */
        FivLoadingProgressBar.prototype.toggleSpinner = /**
         * @return {?}
         */
        function () {
            this.loading = !this.loading;
        };
        /**
         * @return {?}
         */
        FivLoadingProgressBar.prototype.load = /**
         * @return {?}
         */
        function () {
            this.loading = true;
            this.fivRefresh.emit(this);
        };
        /**
         * @return {?}
         */
        FivLoadingProgressBar.prototype.unload = /**
         * @return {?}
         */
        function () {
            this.loading = false;
            if (this.isComplete) {
                this.isComplete = false;
            }
        };
        /**
         * @param {?=} param
         * @return {?}
         */
        FivLoadingProgressBar.prototype.complete = /**
         * @param {?=} param
         * @return {?}
         */
        function (param) {
            this.param = param;
            this.isComplete = true;
            this.fillIn(850);
        };
        /**
         * @param {?} isComplete
         * @return {?}
         */
        FivLoadingProgressBar.prototype.fillAnimationComplete = /**
         * @param {?} isComplete
         * @return {?}
         */
        function (isComplete) {
            if (isComplete) {
                this.fivComplete.emit(this.param);
                this.isComplete = false;
                this.param = null;
                if (this.global) {
                    this.loadingService.unload();
                }
                else {
                    this.unload();
                }
            }
        };
        /**
         * @param {?} progress
         * @return {?}
         */
        FivLoadingProgressBar.prototype.setProgress = /**
         * @param {?} progress
         * @return {?}
         */
        function (progress) {
            if (progress < 0) {
                this.progress = 0;
                return;
            }
            if (progress > 100) {
                this.progress = 100;
                return;
            }
            this.progress = progress;
        };
        /**
         * @param {?} ms
         * @return {?}
         */
        FivLoadingProgressBar.prototype.fillIn = /**
         * @param {?} ms
         * @return {?}
         */
        function (ms) {
            var _this = this;
            // first define a reusable animation
            this.progress = 0;
            /** @type {?} */
            var myAnimation = this.builder.build([
                animations.style({ width: this.progress + "%" }),
                animations.animate(ms, animations.style({ width: '100%' }))
            ]);
            // use the returned factory object to create a player
            /** @type {?} */
            var player = myAnimation.create(this.linear.nativeElement);
            /** @type {?} */
            var t = rxjs.timer(0, ms / 100).subscribe((/**
             * @return {?}
             */
            function () {
                if (_this.progress <= 0) {
                    return t.unsubscribe();
                }
                _this.progress++;
            }));
            player.play();
            player.onDone((/**
             * @return {?}
             */
            function () {
                if (_this.animating) {
                    _this.fillAnimationComplete(true);
                    _this.stopProgressAnimation();
                }
            }));
            this.stopProgressAnimation();
            this.animating = true;
            this._progressPlayer = player;
        };
        /**
         * @param {?} ms
         * @return {?}
         */
        FivLoadingProgressBar.prototype.shrinkIn = /**
         * @param {?} ms
         * @return {?}
         */
        function (ms) {
            var _this = this;
            // first define a reusable animation
            this.progress = 100;
            /** @type {?} */
            var myAnimation = this.builder.build([
                animations.style({ width: this.progress + "%" }),
                animations.animate(ms, animations.style({ width: 0 }))
            ]);
            // use the returned factory object to create a player
            /** @type {?} */
            var player = myAnimation.create(this.linear.nativeElement);
            /** @type {?} */
            var t = rxjs.timer(0, ms / 100).subscribe((/**
             * @return {?}
             */
            function () {
                if (_this.progress <= 0) {
                    return t.unsubscribe();
                }
                _this.progress--;
            }));
            player.play();
            player.onDone((/**
             * @return {?}
             */
            function () {
                if (_this.animating) {
                    _this.fivDoneShrinking.emit(true);
                    _this.stopProgressAnimation();
                }
            }));
            this.stopProgressAnimation();
            this.animating = true;
            this._progressPlayer = player;
        };
        /**
         * @return {?}
         */
        FivLoadingProgressBar.prototype.stopProgressAnimation = /**
         * @return {?}
         */
        function () {
            if (this._progressPlayer) {
                this._progressPlayer.destroy();
                this._progressPlayer = null;
                this.animating = false;
            }
        };
        FivLoadingProgressBar.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-loading-progress-bar',
                        template: "<div [@progressAnim] *ngIf=\"(!global && loading) || (global && loadingService.loading)\" class=\"slider\" [ngClass]=\"{'top':verticalAlign == 'top','bottom': verticalAlign == 'bottom'}\" >\n  <div class=\"line\"></div>\n  <div *ngIf=\"!isComplete\" class=\"subline inc\"></div>\n  <!-- <div *ngIf=\"isComplete\" [@fillAnim] (@fillAnim.done)=\"fillAnimationComplete(isComplete)\" class=\"subline fill\"></div> -->\n  <div *ngIf=\"!isComplete\" class=\"subline dec\"></div>\n</div>\n<div #linear [@progressAnimLinear] class=\"progress\"  [ngClass]=\"{'top':verticalAlign == 'top','bottom': verticalAlign == 'bottom'}\" ></div>\n",
                        animations: [
                            animations.trigger('progressAnim', [
                                animations.transition('void => *', [
                                    animations.style({ height: '0px' }),
                                    animations.animate('250ms ease-out')
                                ]),
                                animations.transition('* => void', [
                                    animations.animate('299ms ease-in', animations.style({ height: '0px' }))
                                ])
                            ]),
                            animations.trigger('progressAnimLinear', [
                                animations.transition('void => *', [
                                    animations.style({ height: '0px' }),
                                    animations.animate('65ms ease-out')
                                ]),
                                animations.transition('* => void', [
                                    animations.animate('299ms ease-in', animations.style({ height: '0px' }))
                                ])
                            ]),
                            animations.trigger('fillAnim', [
                                animations.transition('void => *', [
                                    animations.style({
                                        width: '0px'
                                    }),
                                    animations.animate('850ms ease-out', animations.style({ width: '100%' }))
                                ])
                            ])
                        ],
                        styles: [":host{--background-progress-bar:var(--ion-color-primary);--color-spin-0:var(--ion-color-primary-shade);--color-spin-25:var(--ion-color-primary-shade);--color-spin-50:var(--ion-color-primary-shade);--color-spin-75:var(--ion-color-primary-shade);--color-spin-100:var(--ion-color-primary-shade)}.slider{position:absolute;width:100%;height:5px;overflow-x:hidden;z-index:5000}.progress{position:absolute;height:5px;width:0;overflow-x:hidden;z-index:5000;background:var(--background-progress-bar);transition:240ms}.line{position:absolute;opacity:.4;width:240%;height:5px;-webkit-animation:5.6s ease-in-out infinite colorspin;animation:5.6s ease-in-out infinite colorspin}.subline{position:absolute;height:5px;background:inherit}.inc{-webkit-animation:1.6s infinite increase,5.6s ease-in-out infinite colorspin;animation:1.6s infinite increase,5.6s ease-in-out infinite colorspin}.dec{-webkit-animation:1.6s .4s infinite decrease,5.6s ease-in-out infinite colorspin;animation:1.6s .4s infinite decrease,5.6s ease-in-out infinite colorspin}.fill{left:0;width:100%;-webkit-animation:5.6s ease-in-out infinite colorspin;animation:5.6s ease-in-out infinite colorspin}@-webkit-keyframes increase{from{left:-5%;width:5%}to{left:130%;width:100%}}@keyframes increase{from{left:-5%;width:5%}to{left:130%;width:100%}}@-webkit-keyframes decrease{from{left:-80%;width:80%}to{left:110%;width:10%}}@keyframes decrease{from{left:-80%;width:80%}to{left:110%;width:10%}}@-webkit-keyframes colorspin{0%{background-color:var(--color-spin-0)}25%{background-color:var(--color-spin-25)}50%{background-color:var(--color-spin-50)}75%{background-color:var(--color-spin-75)}100%{background-color:var(--color-spin-100)}}@keyframes colorspin{0%{background-color:var(--color-spin-0)}25%{background-color:var(--color-spin-25)}50%{background-color:var(--color-spin-50)}75%{background-color:var(--color-spin-75)}100%{background-color:var(--color-spin-100)}}.top{top:0;left:0}.bottom{bottom:0;left:0}"]
                    }] }
        ];
        /** @nocollapse */
        FivLoadingProgressBar.ctorParameters = function () { return [
            { type: FivLoadingService },
            { type: animations.AnimationBuilder }
        ]; };
        FivLoadingProgressBar.propDecorators = {
            loading: [{ type: core.Input }],
            global: [{ type: core.Input }],
            isComplete: [{ type: core.Input }],
            verticalAlign: [{ type: core.Input }],
            fivComplete: [{ type: core.Output }],
            fivDoneShrinking: [{ type: core.Output }],
            fivRefresh: [{ type: core.Output }],
            bar: [{ type: core.ViewChild, args: ['bar',] }],
            linear: [{ type: core.ViewChild, args: ['linear',] }]
        };
        return FivLoadingProgressBar;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var BASE_SIZE = 100;
    var FivLoadingSpinner = /** @class */ (function () {
        function FivLoadingSpinner(_document, _elementRef, change, builder, sanitizer, renderer) {
            this._document = _document;
            this._elementRef = _elementRef;
            this.change = change;
            this.builder = builder;
            this.sanitizer = sanitizer;
            this.renderer = renderer;
            this._diameter = BASE_SIZE;
            this._strokeWidth = 10;
            this._value = 0;
            this.fivProgress = new core.EventEmitter();
            this.fivComplete = new core.EventEmitter();
            this.mode = 'indeterminate';
            this.circleRadius = 45;
            console.log('spin color', 'var(--ion-color-' + this.color + ')');
        }
        Object.defineProperty(FivLoadingSpinner.prototype, "color", {
            set: /**
             * @param {?} color
             * @return {?}
             */
            function (color) {
                this._color = "var(--ion-color-" + color + ")";
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivLoadingSpinner.prototype, "class", {
            get: /**
             * @return {?}
             */
            function () {
                return (this.mode +
                    ' fiv-spinner fiv-progress-spinner fiv-progress-spinner-indeterminate-animation');
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivLoadingSpinner.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        Object.defineProperty(FivLoadingSpinner.prototype, "viewBox", {
            get: /**
             * @return {?}
             */
            function () {
                /** @type {?} */
                var viewBox = this.circleRadius * 2 + this.strokeWidth;
                return "0 0 " + viewBox + " " + viewBox;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivLoadingSpinner.prototype, "strokeCircumference", {
            /** The stroke circumference of the svg circle. */
            get: /**
             * The stroke circumference of the svg circle.
             * @return {?}
             */
            function () {
                return 2 * Math.PI * this.circleRadius;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivLoadingSpinner.prototype, "strokeDashOffset", {
            /** The dash offset of the svg circle. */
            get: /**
             * The dash offset of the svg circle.
             * @return {?}
             */
            function () {
                if (this.mode === 'determinate') {
                    return (this.strokeCircumference * (100 - this._value)) / 100;
                }
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivLoadingSpinner.prototype, "circleStrokeWidth", {
            /** Stroke width of the circle in percent. */
            get: /**
             * Stroke width of the circle in percent.
             * @return {?}
             */
            function () {
                return (this.strokeWidth / this.diameter) * 100;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivLoadingSpinner.prototype, "value", {
            /** Value of the progress circle. */
            get: /**
             * Value of the progress circle.
             * @return {?}
             */
            function () {
                return this.mode === 'determinate' ? this._value : 0;
            },
            set: /**
             * @param {?} newValue
             * @return {?}
             */
            function (newValue) {
                this._value = Math.max(0, Math.min(100, newValue));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivLoadingSpinner.prototype, "diameter", {
            get: /**
             * @return {?}
             */
            function () {
                return this._diameter;
            },
            set: /**
             * @param {?} size
             * @return {?}
             */
            function (size) {
                this._diameter = size;
                if (!FivLoadingSpinner.diameters.has(this._diameter)) {
                    this._attachStyleNode();
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivLoadingSpinner.prototype, "strokeWidth", {
            /** Stroke width of the progress spinner. */
            get: /**
             * Stroke width of the progress spinner.
             * @return {?}
             */
            function () {
                return this._strokeWidth || this.diameter / 10;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */
            function (value) {
                this._strokeWidth = value;
            },
            enumerable: true,
            configurable: true
        });
        /** Dynamically generates a style tag containing the correct animation for this diameter. */
        /**
         * Dynamically generates a style tag containing the correct animation for this diameter.
         * @private
         * @return {?}
         */
        FivLoadingSpinner.prototype._attachStyleNode = /**
         * Dynamically generates a style tag containing the correct animation for this diameter.
         * @private
         * @return {?}
         */
        function () {
            /** @type {?} */
            var styleTag = FivLoadingSpinner.styleTag;
            if (!styleTag) {
                styleTag = this._document.createElement('style');
                this._document.head.appendChild(styleTag);
                FivLoadingSpinner.styleTag = styleTag;
            }
            if (styleTag && styleTag.sheet) {
                ((/** @type {?} */ (styleTag.sheet))).insertRule(this._getAnimationText(), 0);
            }
            FivLoadingSpinner.diameters.add(this.diameter);
        };
        /** Generates animation styles adjusted for the spinner's diameter. */
        /**
         * Generates animation styles adjusted for the spinner's diameter.
         * @private
         * @return {?}
         */
        FivLoadingSpinner.prototype._getAnimationText = /**
         * Generates animation styles adjusted for the spinner's diameter.
         * @private
         * @return {?}
         */
        function () {
            /** @type {?} */
            var INDETERMINATE_ANIMATION_TEMPLATE = "\n    @keyframes fiv-progress-spinner-stroke-rotate-DIAMETER {\n       0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n       12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n       12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n       25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n       25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n       37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n       37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n       50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n       50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n       62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n       62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n       75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n       75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n       87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n       87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n       100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n     }\n   ";
            return (INDETERMINATE_ANIMATION_TEMPLATE
                // Animation should begin at 5% and end at 80%
                .replace(/START_VALUE/g, "" + 0.95 * this.strokeCircumference)
                .replace(/END_VALUE/g, "" + 0.2 * this.strokeCircumference)
                .replace(/DIAMETER/g, "" + this.diameter));
        };
        /**
         * @param {?} duration
         * @return {?}
         */
        FivLoadingSpinner.prototype.completeIn = /**
         * @param {?} duration
         * @return {?}
         */
        function (duration) {
            var _this = this;
            this.mode = 'determinate';
            this.change.detectChanges();
            /** @type {?} */
            var animation = this.builder.build([
                animations.style({
                    'stroke-dasharray': 180,
                    'stroke-dashoffset': 90,
                    transformOrigin: 'center',
                    stroke: '#DE3E35'
                }),
                animations.animate(duration + "ms ease-out", animations.style({
                    'stroke-dasharray': 315,
                    'stroke-dashoffset': 0,
                    transformOrigin: 'center',
                    stroke: '#1B9A59',
                    opacity: 0
                }))
            ]);
            /** @type {?} */
            var player = animation.create(this.determinateCircle.nativeElement);
            player.play();
            player.onDone((/**
             * @return {?}
             */
            function () {
                _this.fivComplete.emit(_this);
                _this._value = 0;
            }));
            /** @type {?} */
            var i = rxjs.interval(duration / 100);
            /** @type {?} */
            var t = rxjs.timer(duration + duration / 50);
            /** @type {?} */
            var progress = i.pipe(operators.takeUntil(t));
            progress.subscribe((/**
             * @param {?} p
             * @return {?}
             */
            function (p) {
                _this.fivProgress.emit(p);
            }));
        };
        /**
         * @param {?} progress
         * @return {?}
         */
        FivLoadingSpinner.prototype.setValue = /**
         * @param {?} progress
         * @return {?}
         */
        function (progress) {
            this.mode = 'determinate';
            this._value = progress;
            this.change.detectChanges();
        };
        /**
         * @return {?}
         */
        FivLoadingSpinner.prototype.spin = /**
         * @return {?}
         */
        function () {
            this.mode = 'indeterminate';
            this.change.detectChanges();
        };
        /**
         * @return {?}
         */
        FivLoadingSpinner.prototype.stopSpinning = /**
         * @return {?}
         */
        function () {
            this._value = 0;
            this.change.detectChanges();
        };
        /**
         * @param {?} mode
         * @return {?}
         */
        FivLoadingSpinner.prototype.setMode = /**
         * @param {?} mode
         * @return {?}
         */
        function (mode) {
            this.mode = mode;
            this.change.detectChanges();
        };
        FivLoadingSpinner.diameters = new Set([BASE_SIZE]);
        FivLoadingSpinner.styleTag = null;
        FivLoadingSpinner.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-loading-spinner',
                        template: "<svg [style.width.px]=\"diameter\" [style.height.px]=\"diameter\" [attr.viewBox]=\"viewBox\"\n  preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\" [ngSwitch]=\"mode == 'indeterminate'\">\n  <circle [attr.stroke]=\"_color\" *ngSwitchCase=\"true\" cx=\"50%\" cy=\"50%\" [attr.r]=\"circleRadius\"\n    [style.animation-name]=\"'fiv-progress-spinner-stroke-rotate-' + diameter\"\n    [style.stroke-dashoffset.px]=\"strokeDashOffset\" [style.stroke-dasharray.px]=\"strokeCircumference\"\n    [style.stroke-width.%]=\"circleStrokeWidth\"></circle>\n\n  <circle [attr.stroke]=\"_color\" class=\"determinate-circle\" #determinateCircle *ngSwitchCase=\"false\" cx=\"50%\" cy=\"50%\"\n    [attr.r]=\"circleRadius\" [style.stroke-dashoffset.px]=\"strokeDashOffset\"\n    [style.stroke-dasharray.px]=\"strokeCircumference\" [style.stroke-width.%]=\"circleStrokeWidth\"></circle>\n</svg>",
                        // tslint:disable-next-line:use-host-property-decorator
                        host: {
                            '[style.width.px]': 'diameter',
                            '[style.height.px]': 'diameter'
                        },
                        changeDetection: core.ChangeDetectionStrategy.OnPush,
                        encapsulation: core.ViewEncapsulation.None,
                        styles: ["fiv-loading-spinner{display:block;position:relative}fiv-loading-spinner svg{position:absolute;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);top:0;left:0;-webkit-transform-origin:center;transform-origin:center;overflow:visible}fiv-loading-spinner circle{fill:transparent;-webkit-transform-origin:center;transform-origin:center;transition:stroke-dashoffset 225ms linear}fiv-loading-spinner.fiv-progress-spinner-indeterminate-animation.determinate circle{transition-property:stroke;-webkit-animation-duration:4s;animation-duration:4s;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite}fiv-loading-spinner.fiv-progress-spinner-indeterminate-animation.indeterminate{-webkit-animation:2s linear infinite fiv-progress-spinner-linear-rotate;animation:2s linear infinite fiv-progress-spinner-linear-rotate}fiv-loading-spinner.fiv-progress-spinner-indeterminate-animation.indeterminate circle{transition-property:stroke;-webkit-animation-duration:4s;animation-duration:4s;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite}@-webkit-keyframes fiv-progress-spinner-linear-rotate{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes fiv-progress-spinner-linear-rotate{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes fiv-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.60617px;-webkit-transform:rotate(0);transform:rotate(0)}12.5%{stroke-dashoffset:56.54867px;-webkit-transform:rotate(0);transform:rotate(0)}12.5001%{stroke-dashoffset:56.54867px;-webkit-transform:rotateX(180deg) rotate(72.5deg);transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.60617px;-webkit-transform:rotateX(180deg) rotate(72.5deg);transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.60617px;-webkit-transform:rotate(270deg);transform:rotate(270deg)}37.5%{stroke-dashoffset:56.54867px;-webkit-transform:rotate(270deg);transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.54867px;-webkit-transform:rotateX(180deg) rotate(161.5deg);transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.60617px;-webkit-transform:rotateX(180deg) rotate(161.5deg);transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.60617px;-webkit-transform:rotate(180deg);transform:rotate(180deg)}62.5%{stroke-dashoffset:56.54867px;-webkit-transform:rotate(180deg);transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.54867px;-webkit-transform:rotateX(180deg) rotate(251.5deg);transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.60617px;-webkit-transform:rotateX(180deg) rotate(251.5deg);transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.60617px;-webkit-transform:rotate(90deg);transform:rotate(90deg)}87.5%{stroke-dashoffset:56.54867px;-webkit-transform:rotate(90deg);transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.54867px;-webkit-transform:rotateX(180deg) rotate(341.5deg);transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.60617px;-webkit-transform:rotateX(180deg) rotate(341.5deg);transform:rotateX(180deg) rotate(341.5deg)}}@keyframes fiv-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.60617px;-webkit-transform:rotate(0);transform:rotate(0)}12.5%{stroke-dashoffset:56.54867px;-webkit-transform:rotate(0);transform:rotate(0)}12.5001%{stroke-dashoffset:56.54867px;-webkit-transform:rotateX(180deg) rotate(72.5deg);transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.60617px;-webkit-transform:rotateX(180deg) rotate(72.5deg);transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.60617px;-webkit-transform:rotate(270deg);transform:rotate(270deg)}37.5%{stroke-dashoffset:56.54867px;-webkit-transform:rotate(270deg);transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.54867px;-webkit-transform:rotateX(180deg) rotate(161.5deg);transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.60617px;-webkit-transform:rotateX(180deg) rotate(161.5deg);transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.60617px;-webkit-transform:rotate(180deg);transform:rotate(180deg)}62.5%{stroke-dashoffset:56.54867px;-webkit-transform:rotate(180deg);transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.54867px;-webkit-transform:rotateX(180deg) rotate(251.5deg);transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.60617px;-webkit-transform:rotateX(180deg) rotate(251.5deg);transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.60617px;-webkit-transform:rotate(90deg);transform:rotate(90deg)}87.5%{stroke-dashoffset:56.54867px;-webkit-transform:rotate(90deg);transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.54867px;-webkit-transform:rotateX(180deg) rotate(341.5deg);transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.60617px;-webkit-transform:rotateX(180deg) rotate(341.5deg);transform:rotateX(180deg) rotate(341.5deg)}}"]
                    }] }
        ];
        /** @nocollapse */
        FivLoadingSpinner.ctorParameters = function () { return [
            { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [common.DOCUMENT,] }] },
            { type: core.ElementRef },
            { type: core.ChangeDetectorRef },
            { type: animations.AnimationBuilder },
            { type: platformBrowser.DomSanitizer },
            { type: core.Renderer2 }
        ]; };
        FivLoadingSpinner.propDecorators = {
            fivProgress: [{ type: core.Output }],
            fivComplete: [{ type: core.Output }],
            determinateCircle: [{ type: core.ViewChild, args: ['determinateCircle',] }],
            mode: [{ type: core.Input }],
            circleRadius: [{ type: core.Input }],
            color: [{ type: core.Input }],
            class: [{ type: core.HostBinding, args: ['class',] }],
            value: [{ type: core.Input }],
            diameter: [{ type: core.Input }],
            strokeWidth: [{ type: core.Input }]
        };
        return FivLoadingSpinner;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivFab = /** @class */ (function () {
        function FivFab(renderer, content) {
            this.renderer = renderer;
            this.content = content;
            this.vertical = 'none';
            this.horizontal = 'none';
            this.mode = 'normal';
            this.spinColor = 'primary';
            this.disabled = false;
            this.visible = true;
            this.pulse = false;
            this._scroll = true;
            this.fivComplete = new core.EventEmitter();
            this.fivRefresh = new core.EventEmitter();
            this.fivHidden = new core.EventEmitter();
            this.fivShow = new core.EventEmitter();
            this.fivTransition = new core.EventEmitter();
            this.loading = false;
            this.extended = false;
            this.iconState = 'normal';
            this.currentDeltaY = 0;
            this.$onDestroy = new rxjs.Subject();
            this.params = {
                fromTransform: 'translateX(-50%) scale(0)',
                toTransform: 'translateX(-50%) scale(1)'
            };
            this.params = {
                toTransform: this.toTransform,
                fromTransform: this.fromTransform
            };
        }
        Object.defineProperty(FivFab.prototype, "scroll", {
            get: /**
             * @return {?}
             */
            function () {
                return this._scroll;
            },
            set: /**
             * @param {?} scroll
             * @return {?}
             */
            function (scroll) {
                this._scroll = scroll;
                this.$onDestroy.next();
                this.ngOnInit();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivFab.prototype, "fromTransform", {
            get: /**
             * @return {?}
             */
            function () {
                return this.horizontal === 'center'
                    ? 'scale(0) translateX(-50%)'
                    : 'scale(0)';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivFab.prototype, "toTransform", {
            get: /**
             * @return {?}
             */
            function () {
                return this.horizontal === 'center'
                    ? 'translateX(-50%) scale(1)'
                    : 'scale(1)';
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivFab.prototype.ngOnInit = /**
         * @return {?}
         */
        function () {
            var _this = this;
            if (!this.content) {
                return;
            }
            if (!this.scroll) {
                return;
            }
            this.content.scrollEvents = true;
            /** @type {?} */
            var directionChange = this.content.ionScroll.pipe(operators.map((/**
             * @param {?} ev
             * @return {?}
             */
            function (ev) { return ev.detail.deltaY; })), operators.pairwise(), operators.map((/**
             * @param {?} __0
             * @return {?}
             */
            function (_a) {
                var _b = __read(_a, 2), y1 = _b[0], y2 = _b[1];
                return (y2 < y1 ? 'Up' : 'Down');
            })), operators.distinctUntilChanged(), operators.takeUntil(this.content.ionScrollEnd), operators.repeat());
            /** @type {?} */
            var up = directionChange.pipe(operators.filter((/**
             * @param {?} direction
             * @return {?}
             */
            function (direction) { return direction === 'Up'; })));
            /** @type {?} */
            var down = directionChange.pipe(operators.filter((/**
             * @param {?} direction
             * @return {?}
             */
            function (direction) { return direction === 'Down'; })));
            up.pipe(operators.tap((/**
             * @return {?}
             */
            function () {
                return _this.labelComp ? (_this.extended = true) : (_this.visible = true);
            })), operators.takeUntil(this.$onDestroy)).subscribe();
            down
                .pipe(operators.tap((/**
             * @return {?}
             */
            function () {
                return _this.labelComp ? (_this.extended = false) : (_this.visible = false);
            })), operators.takeUntil(this.$onDestroy))
                .subscribe();
        };
        /**
         * @return {?}
         */
        FivFab.prototype.ngOnDestroy = /**
         * @return {?}
         */
        function () {
            this.$onDestroy.next();
        };
        /**
         * @return {?}
         */
        FivFab.prototype.ngAfterContentInit = /**
         * @return {?}
         */
        function () {
            this.extended = !!this.labelComp;
        };
        /**
         * @return {?}
         */
        FivFab.prototype.load = /**
         * @return {?}
         */
        function () {
            this.loading = true;
            this.fivRefresh.emit(this);
        };
        /**
         * @return {?}
         */
        FivFab.prototype.unload = /**
         * @return {?}
         */
        function () {
            if (this.bar) {
                this.bar.unload();
            }
            this.loading = false;
        };
        /**
         * @return {?}
         */
        FivFab.prototype.complete = /**
         * @return {?}
         */
        function () {
            if (this.loading) {
                if (this.spinner) {
                    this.spinner.completeIn(1000);
                }
                else if (this.bar) {
                    this.bar.complete();
                }
            }
        };
        /**
         * @return {?}
         */
        FivFab.prototype.fillAnimationDone = /**
         * @return {?}
         */
        function () {
            this.fivComplete.emit(this);
            this.unload();
        };
        /**
         * @param {?} progress
         * @return {?}
         */
        FivFab.prototype.rotate = /**
         * @param {?} progress
         * @return {?}
         */
        function (progress) {
            this.renderer.setStyle(this.spinner._elementRef.nativeElement, 'transform', "rotateZ(" + (progress / 200) * 360 + "deg)");
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivFab.prototype.fabAnimDone = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.fromState === 'void') {
                this.fivShow.emit(this);
            }
            if (event.toState === 'void') {
                this.fivHidden.emit(this);
            }
        };
        FivFab.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-fab',
                        template: "<ion-fab *ngIf=\"visible\" (@fabAnim.done)=\"fabAnimDone($event)\" [@fabAnim]=\"{value: '*',params: params}\"\n  [ngClass]=\"[mode,horizontal,vertical]\" [slot]=\"slot\">\n  <fiv-loading-spinner [color]=\"spinColor\" *ngIf=\"!extended && loading\" (fivProgress)=\"rotate($event)\" #spinner\n    (fivComplete)=\"fillAnimationDone()\" class=\"spinner\" [circleRadius]=\"30\" [diameter]=\"68\" [strokeWidth]=\"4\"\n    [mode]=\"'indeterminate'\">\n  </fiv-loading-spinner>\n\n  <ion-button [ngClass]=\"{'pulse': pulse}\" [color]=\"color\" [disabled]=\"disabled\">\n    <fiv-loading-progress-bar *ngIf=\"extended\" [loading]=\"loading\" (fivComplete)=\"fillAnimationDone()\" #bar>\n    </fiv-loading-progress-bar>\n    <fiv-icon #feature=\"fivFeature\" [fivFeature]=\"feature\" *ngIf=\"iconComp\" [color]=\"iconComp.color\"\n      [name]=\"iconComp.name\" [dotVisible]=\"iconComp.dotVisible\" [indicatorValue]=\"iconComp.indicatorValue\">\n    </fiv-icon>\n    <div [@labelAnim] *ngIf=\"labelComp && extended\">\n      <ng-content select=\"ion-label\"></ng-content>\n    </div>\n  </ion-button>\n</ion-fab>",
                        animations: [
                            animations.trigger('fabAnim', [
                                animations.transition('void => *', [
                                    animations.style({
                                        transform: '{{fromTransform}}'
                                    }),
                                    animations.animate('250ms ease-out', animations.style({
                                        transform: '{{toTransform}}'
                                    }))
                                ], {
                                    params: {
                                        fromTransform: 'scale(0) translateX(-50%)',
                                        toTransform: 'translateX(-50%) scale(1)'
                                    }
                                }),
                                animations.transition('* => void', [
                                    animations.style({
                                        transform: '{{toTransform}}'
                                    }),
                                    animations.animate('250ms ease-in', animations.style({ transform: '{{fromTransform}}' }))
                                ], {
                                    params: {
                                        fromTransform: 'scale(0) translateX(-50%)',
                                        toTransform: 'translateX(-50%) scale(1)'
                                    }
                                })
                            ]),
                            animations.trigger('labelAnim', [
                                animations.transition('void => *', [
                                    animations.style({ width: '0', opacity: 0 }),
                                    animations.animate('140ms', animations.style({ width: '*', opacity: 1 }))
                                ]),
                                animations.transition('* => void', [
                                    animations.style({ width: '*', opacity: 1 }),
                                    animations.animate('120ms', animations.style({ width: 0, opacity: 0 }))
                                ])
                            ])
                        ],
                        styles: [":host{--fiv-spinner-size:68px;display:contents}:host(.button-disabled){pointer-events:none}ion-button{--border-radius:28px;height:56px;min-width:56px;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:0;margin-inline-end:0;margin:0}ion-fab.top{top:10px}ion-fab.top.edge{top:-28px}ion-fab.middle{top:calc(50% - 28px)}ion-fab.bottom.edge{bottom:-28px}ion-fab.bottom{bottom:10px}ion-fab.center{left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}ion-fab.start{left:10px}ion-fab.end{right:calc(10px + var(--ion-safe-area-right,0px))}.pulse{-webkit-animation:1.2s infinite shadow-pulse;animation:1.2s infinite shadow-pulse}fiv-loading-spinner{position:absolute;left:calc((var(--fiv-spinner-size) - 56px)/ -2);top:calc((var(--fiv-spinner-size) - 56px)/ -2)}@-webkit-keyframes shadow-pulse{0%{border-radius:28px;box-shadow:0 0 0 0 rgba(0,0,0,.2)}100%{border-radius:28px;box-shadow:0 0 0 28px transparent}}@keyframes shadow-pulse{0%{border-radius:28px;box-shadow:0 0 0 0 rgba(0,0,0,.2)}100%{border-radius:28px;box-shadow:0 0 0 28px transparent}}"]
                    }] }
        ];
        /** @nocollapse */
        FivFab.ctorParameters = function () { return [
            { type: core.Renderer2 },
            { type: angular.IonContent, decorators: [{ type: core.Optional }] }
        ]; };
        FivFab.propDecorators = {
            vertical: [{ type: core.Input }],
            horizontal: [{ type: core.Input }],
            mode: [{ type: core.Input }],
            slot: [{ type: core.Input }],
            icon: [{ type: core.Input }],
            spinColor: [{ type: core.Input }],
            color: [{ type: core.Input }],
            disabled: [{ type: core.Input }],
            visible: [{ type: core.Input }],
            pulse: [{ type: core.Input }],
            scroll: [{ type: core.Input }],
            feature: [{ type: core.Input }],
            fivComplete: [{ type: core.Output }],
            fivRefresh: [{ type: core.Output }],
            fivHidden: [{ type: core.Output }],
            fivShow: [{ type: core.Output }],
            fivTransition: [{ type: core.Output }],
            spinner: [{ type: core.ViewChild, args: ['spinner',] }],
            featureDiscovery: [{ type: core.ViewChild, args: ['feature',] }],
            bar: [{ type: core.ViewChild, args: ['bar',] }],
            iconComp: [{ type: core.ContentChild, args: [FivIcon,] }],
            labelComp: [{ type: core.ContentChild, args: [angular.IonLabel,] }]
        };
        return FivFab;
    }());
    /** @enum {number} */
    var FabState = {
        HIDDEN: 0,
        NORMAL: 1,
        EXTENDED: 2,
    };
    FabState[FabState.HIDDEN] = 'HIDDEN';
    FabState[FabState.NORMAL] = 'NORMAL';
    FabState[FabState.EXTENDED] = 'EXTENDED';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivAppBarTab = /** @class */ (function () {
        function FivAppBarTab() {
            this.badge = -1;
        }
        /**
         * @return {?}
         */
        FivAppBarTab.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        FivAppBarTab.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-app-bar-tab',
                        template: "<ng-template>\n  <ng-content></ng-content>\n</ng-template>",
                        styles: [":host{width:50%;height:100%;display:inline-block;position:relative}:host fiv-ripple{width:100%;height:100%}:host fiv-icon{display:block}:host .tab.active{--fiv-color-icon:var(--ion-color-primary)}"]
                    }] }
        ];
        /** @nocollapse */
        FivAppBarTab.ctorParameters = function () { return []; };
        FivAppBarTab.propDecorators = {
            name: [{ type: core.Input }],
            icon: [{ type: core.Input }],
            tab: [{ type: core.Input }],
            href: [{ type: core.Input }],
            badge: [{ type: core.Input }]
        };
        return FivAppBarTab;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivAppBar = /** @class */ (function () {
        function FivAppBar(router, tabs) {
            this.router = router;
            this.tabs = tabs;
            this._fabVisible = true;
            this.cutoutVisible = true;
            this.left = false;
            this.right = false;
            this.transitioning = false;
            this.icon = 'md-add';
            this.titleLayout = 'hide';
            this.fivFabClick = new core.EventEmitter();
        }
        Object.defineProperty(FivAppBar.prototype, "position", {
            get: /**
             * @return {?}
             */
            function () {
                return this._position;
            },
            set: /**
             * @param {?} position
             * @return {?}
             */
            function (position) {
                if (!position) {
                    return;
                }
                if (!this.fabVisible) {
                    this._position = position;
                    this.setPosition();
                    return;
                }
                this._fabVisible = false;
                this.transitioning = true;
                if (!this._position) {
                    this._position = position;
                    this.onFabHidden();
                    return;
                }
                this.prepareTabs(position);
                this._position = position;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivAppBar.prototype, "fabVisible", {
            get: /**
             * @return {?}
             */
            function () {
                return this._fabVisible;
            },
            set: /**
             * @param {?} fabVisible
             * @return {?}
             */
            function (fabVisible) {
                var _this = this;
                if (this._fabVisible === true && fabVisible === false) {
                    this._fabVisible = false;
                }
                else if (this._fabVisible === false && fabVisible === true) {
                    this.cutoutVisible = true;
                    setTimeout((/**
                     * @return {?}
                     */
                    function () {
                        _this._fabVisible = true;
                    }), 250);
                }
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivAppBar.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivAppBar.prototype.ngAfterViewInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivAppBar.prototype.ngAfterContentInit = /**
         * @return {?}
         */
        function () {
            this.prepareTabs(this.position);
        };
        /**
         * @return {?}
         */
        FivAppBar.prototype.onFabHidden = /**
         * @return {?}
         */
        function () {
            var _this = this;
            if (this.transitioning) {
                this.setPosition();
                this.cutoutVisible = false;
                setTimeout((/**
                 * @return {?}
                 */
                function () {
                    _this.cutoutVisible = true;
                    setTimeout((/**
                     * @return {?}
                     */
                    function () {
                        _this._fabVisible = true;
                        _this.transitioning = false;
                    }), 225);
                }), 225);
            }
            else {
                this.cutoutVisible = false;
            }
        };
        /**
         * @private
         * @param {?} position
         * @return {?}
         */
        FivAppBar.prototype.prepareTabs = /**
         * @private
         * @param {?} position
         * @return {?}
         */
        function (position) {
            if (position === 'center') {
                this.tabsLeft = this.tabComponents.toArray().slice(0, 2);
                this.tabsRight = this.tabComponents.toArray().slice(2, 4);
            }
            else if (position === 'right') {
                this.tabsLeft = this.tabComponents.toArray();
                this.tabsRight = [];
            }
            else if (position === 'left') {
                this.tabsLeft = [];
                this.tabsRight = this.tabComponents.toArray();
            }
        };
        /**
         * @private
         * @return {?}
         */
        FivAppBar.prototype.setPosition = /**
         * @private
         * @return {?}
         */
        function () {
            if (this._position === 'right') {
                this.right = true;
                this.left = false;
            }
            else if (this._position === 'left') {
                this.right = false;
                this.left = true;
            }
            else {
                this.right = false;
                this.left = false;
            }
        };
        /**
         * @return {?}
         */
        FivAppBar.prototype.fabClick = /**
         * @return {?}
         */
        function () {
            this.fivFabClick.emit(this);
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivAppBar.prototype.ionTabButtonClick = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            this.tabs.select(event.tab);
        };
        FivAppBar.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-app-bar',
                        template: "<div class=\"appbar\" [ngClass]=\"{'cutout': cutoutVisible, 'left': left, 'right': right}\">\n  <div class=\"appbar-rect left\">\n    <div class=\"tabs\">\n      <fiv-app-bar-tab-content (ionTabButtonClick)=\"ionTabButtonClick($event)\" [active]=\"router.url.endsWith(tab.href)\"\n        [tab]=\"tab.tab\" [href]=\"tab.href\" [name]=\"tab.name\" [icon]=\"tab.icon\" [badge]=\"tab.badge\"\n        [titleLayout]=\"titleLayout\" *ngFor=\"let tab of tabsLeft\"></fiv-app-bar-tab-content>\n    </div>\n  </div>\n  <fiv-fab [scroll]=\"false\" (fivHidden)=\"onFabHidden()\" [visible]=\"_fabVisible\" #fab (click)=\"fabClick()\">\n    <fiv-icon [name]=\"icon\"></fiv-icon>\n  </fiv-fab>\n  <div class=\"rect\"></div>\n  <div class=\"rect-filler\"></div>\n  <div class=\"appbar-rect right\">\n    <div class=\"tabs\">\n      <fiv-app-bar-tab-content (ionTabButtonClick)=\"ionTabButtonClick($event)\" [active]=\"router.url.endsWith(tab.href)\"\n        [tab]=\"tab.tab\" [href]=\"tab.href\" [name]=\"tab.name\" [icon]=\"tab.icon\" [badge]=\"tab.badge\"\n        [titleLayout]=\"titleLayout\" *ngFor=\"let tab of tabsRight\"></fiv-app-bar-tab-content>\n    </div>\n  </div>\n</div>",
                        styles: [":host{--fiv-color-appbar:var(--ion-color-light);--fiv-color-fab:var(--ion-color-primary)}.appbar{width:100%;position:fixed;bottom:0;left:0;height:calc(84px + env(safe-area-inset-bottom));background:rgba(0,0,0,0);z-index:5000}.appbar .appbar-rect{position:absolute;width:calc(50% - 34px);height:calc(56px + env(safe-area-inset-bottom));bottom:0;box-shadow:3px -4px 5px 0 rgba(0,0,0,.1);transition:350ms}.appbar .appbar-rect.left{left:0;background:var(--fiv-color-appbar);border-top-right-radius:12px}.appbar .appbar-rect.right{right:0;background:var(--fiv-color-appbar);border-top-left-radius:12px}.appbar fiv-fab{display:block;width:56px;height:56px;-webkit-transform:translateX(-50%);transform:translateX(-50%);left:50%;position:absolute;z-index:14}.appbar fiv-fab fiv-icon{--fiv-color-icon:var(--fiv-color-fab-icon)}.appbar .rect{display:inline-block;width:68px;height:48px;position:absolute;overflow:hidden;bottom:env(safe-area-inset-bottom);left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);transition:350ms}.appbar .rect-filler{display:inline-block;width:72px;height:env(safe-area-inset-bottom);position:absolute;overflow:hidden;bottom:0;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);transition:350ms;background:var(--fiv-color-appbar)}.appbar .rect:before{content:'';position:absolute;bottom:50%;width:100%;height:100%;border-radius:100%;box-shadow:0 300px 0 300px var(--fiv-color-appbar);transition:350ms}.appbar:not(.cutout) .appbar-rect.left{border-top-right-radius:0}.appbar:not(.cutout) .appbar-rect.right{border-top-left-radius:0}.appbar:not(.cutout) .rect{height:56px;box-shadow:3px -4px 5px 0 rgba(0,0,0,.1);background:var(--fiv-color-appbar)}.appbar:not(.cutout) .rect:before{border-radius:0;bottom:100%}.appbar.left .appbar-rect.left{width:4px}.appbar.left .appbar-rect.right{width:calc(100% - 70px)}.appbar.left .rect{left:4px;-webkit-transform:translateX(0);transform:translateX(0);width:66px}.appbar.left fiv-fab{width:56px;height:56px;-webkit-transform:translateX(0);transform:translateX(0);left:10px;position:absolute}.appbar.right .appbar-rect.left{width:calc(100% - 70px)}.appbar.right .appbar-rect.right{width:4px}.appbar.right .rect{left:calc(100% - 37px);width:67px}.appbar.right fiv-fab{width:56px;height:56px;-webkit-transform:translateX(0);transform:translateX(0);left:calc(100% - 64px);position:absolute;--fiv-spinner-size:68px}.tabs{display:flex;width:100%;height:100%;position:relative}"]
                    }] }
        ];
        /** @nocollapse */
        FivAppBar.ctorParameters = function () { return [
            { type: router.Router },
            { type: angular.IonTabs, decorators: [{ type: core.Host }] }
        ]; };
        FivAppBar.propDecorators = {
            fab: [{ type: core.ViewChild, args: ['fab',] }],
            icon: [{ type: core.Input }],
            titleLayout: [{ type: core.Input }],
            fivFabClick: [{ type: core.Output }],
            _tabs: [{ type: core.ViewChildren, args: [FivAppBarTabContent,] }],
            tabComponents: [{ type: core.ContentChildren, args: [FivAppBarTab,] }],
            position: [{ type: core.Input }],
            fabVisible: [{ type: core.Input }]
        };
        return FivAppBar;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivFeature = /** @class */ (function () {
        function FivFeature(host, icon, overlay, platform) {
            this.host = host;
            this.icon = icon;
            this.overlay = overlay;
            this.platform = platform;
            this.maxDiameter = 1080;
            this.diameter = Math.min(this.platform.width() * 2, this.maxDiameter);
            this.contentOffset = 20;
            this.featurePadding = 20;
            this.clickEnabled = true;
            this.fivFeatureClick = new core.EventEmitter();
            this.fivOpen = new core.EventEmitter();
            this.fivWillOpen = new core.EventEmitter();
            this.fivClose = new core.EventEmitter();
            this.fivWillClose = new core.EventEmitter();
            this.isOpen = false;
        }
        /**
         * @private
         * @param {?} nativeElement
         * @return {?}
         */
        FivFeature.prototype.getBounds = /**
         * @private
         * @param {?} nativeElement
         * @return {?}
         */
        function (nativeElement) {
            /** @type {?} */
            var bounds = nativeElement.getBoundingClientRect();
            return {
                top: bounds.top,
                left: bounds.left,
                height: nativeElement.clientHeight,
                width: nativeElement.clientWidth
            };
        };
        /**
         * @return {?}
         */
        FivFeature.prototype.show = /**
         * @return {?}
         */
        function () {
            var _this = this;
            /** @type {?} */
            var bounds = this.icon
                ? this.getBounds(this.host.nativeElement.parentElement)
                : this.getBounds(this.host.nativeElement);
            this.overlayRef = this.overlay.createOverlay(FivFeatureDiscovery, this.fivFeature);
            /** @type {?} */
            var featureOverlay = this.overlayRef.instance;
            featureOverlay.height = this.diameter;
            featureOverlay.width = this.diameter;
            featureOverlay.featurePadding = this.featurePadding;
            featureOverlay.contentOffset = this.contentOffset;
            featureOverlay.setIcon(this.icon);
            featureOverlay.setBounds(bounds);
            featureOverlay.show();
            this.fivWillOpen.emit();
            featureOverlay.fivAnimation
                .pipe(operators.filter((/**
             * @param {?} event
             * @return {?}
             */
            function (event) { return event.toState === 'visible'; })), operators.first())
                .subscribe((/**
             * @return {?}
             */
            function () {
                _this.didOpen();
            }));
            featureOverlay.fivClick.pipe(operators.first()).subscribe((/**
             * @return {?}
             */
            function () {
                _this.featureClick();
            }));
            featureOverlay.fivBackdropClick.pipe(operators.first()).subscribe((/**
             * @return {?}
             */
            function () {
                _this.hide();
            }));
        };
        /**
         * @return {?}
         */
        FivFeature.prototype.hide = /**
         * @return {?}
         */
        function () {
            var _this = this;
            this.fivWillClose.emit();
            if (this.overlayRef) {
                this.overlayRef.instance.hide();
                this.overlayRef.instance.fivClose.pipe(operators.first()).subscribe((/**
                 * @return {?}
                 */
                function () {
                    _this.fivClose.emit();
                    _this.isOpen = false;
                    _this.overlayRef.destroy();
                    _this.overlayRef = null;
                }));
            }
        };
        /**
         * @return {?}
         */
        FivFeature.prototype.didOpen = /**
         * @return {?}
         */
        function () {
            this.fivOpen.emit();
            this.isOpen = true;
        };
        /**
         * @return {?}
         */
        FivFeature.prototype.featureClick = /**
         * @return {?}
         */
        function () {
            var _this = this;
            if (this.overlayRef) {
                this.fivFeatureClick.emit();
                this.fivWillClose.emit();
                this.overlayRef.instance.featureClick();
                this.overlayRef.instance.fivClose.pipe(operators.first()).subscribe((/**
                 * @return {?}
                 */
                function () {
                    _this.fivClose.emit();
                    _this.overlayRef.destroy();
                    _this.overlayRef = null;
                    if (_this.clickEnabled) {
                        _this.host.nativeElement.click();
                    }
                }));
            }
        };
        FivFeature.decorators = [
            { type: core.Directive, args: [{
                        selector: '[fivFeature]',
                        exportAs: 'fivFeature'
                    },] }
        ];
        /** @nocollapse */
        FivFeature.ctorParameters = function () { return [
            { type: core.ElementRef, decorators: [{ type: core.Host }] },
            { type: FivIcon, decorators: [{ type: core.Host }, { type: core.Optional }] },
            { type: FivOverlayService },
            { type: angular.Platform }
        ]; };
        FivFeature.propDecorators = {
            maxDiameter: [{ type: core.Input }],
            diameter: [{ type: core.Input }],
            contentOffset: [{ type: core.Input }],
            featurePadding: [{ type: core.Input }],
            clickEnabled: [{ type: core.Input }],
            fivFeature: [{ type: core.Input }],
            fivFeatureClick: [{ type: core.Output }],
            fivOpen: [{ type: core.Output }],
            fivWillOpen: [{ type: core.Output }],
            fivClose: [{ type: core.Output }],
            fivWillClose: [{ type: core.Output }]
        };
        return FivFeature;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivFeatureDiscoveryModule = /** @class */ (function () {
        function FivFeatureDiscoveryModule() {
        }
        FivFeatureDiscoveryModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivFeature, FivFeatureDiscovery],
                        imports: [common.CommonModule, FivIconModule, FivRippleModule],
                        exports: [FivFeature, FivFeatureDiscovery],
                        entryComponents: [FivFeatureDiscovery]
                    },] }
        ];
        return FivFeatureDiscoveryModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivLoadingProgressBarModule = /** @class */ (function () {
        function FivLoadingProgressBarModule() {
        }
        FivLoadingProgressBarModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivLoadingProgressBar],
                        imports: [common.CommonModule],
                        exports: [FivLoadingProgressBar],
                        providers: [FivLoadingService]
                    },] }
        ];
        return FivLoadingProgressBarModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivLoadingSpinnerModule = /** @class */ (function () {
        function FivLoadingSpinnerModule() {
        }
        FivLoadingSpinnerModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivLoadingSpinner],
                        imports: [common.CommonModule],
                        exports: [FivLoadingSpinner]
                    },] }
        ];
        return FivLoadingSpinnerModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivFabModule = /** @class */ (function () {
        function FivFabModule() {
        }
        FivFabModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivFab],
                        imports: [
                            common.CommonModule,
                            FivCenterModule,
                            FivIconModule,
                            FivFeatureDiscoveryModule,
                            FivLoadingSpinnerModule,
                            angular.IonicModule,
                            FivLoadingProgressBarModule
                        ],
                        exports: [FivFab],
                        providers: []
                    },] }
        ];
        return FivFabModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivAppBarModule = /** @class */ (function () {
        function FivAppBarModule() {
        }
        FivAppBarModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivAppBar, FivAppBarTabContent, FivAppBarTab],
                        imports: [
                            common.CommonModule,
                            FivIconModule,
                            FivFabModule,
                            FivRippleModule,
                            angular.IonicModule
                        ],
                        exports: [FivAppBar, FivAppBarTabContent, FivAppBarTab],
                        providers: []
                    },] }
        ];
        return FivAppBarModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivRoutingStateService = /** @class */ (function () {
        function FivRoutingStateService(router, navCtrl, platform) {
            this.router = router;
            this.navCtrl = navCtrl;
            this.platform = platform;
            this.history = [];
        }
        /**
         * @param {?=} config
         * @return {?}
         */
        FivRoutingStateService.prototype.loadRouting = /**
         * @param {?=} config
         * @return {?}
         */
        function (config) {
            var _this = this;
            this.config = config;
            this.handleAndroidBackButton();
            this.router.events
                .pipe(operators.filter((/**
             * @param {?} event
             * @return {?}
             */
            function (event) { return event instanceof router.NavigationEnd; })))
                .subscribe((/**
             * @param {?} __0
             * @return {?}
             */
            function (_a) {
                var urlAfterRedirects = _a.urlAfterRedirects;
                if (urlAfterRedirects === _this.getPreviousUrl(_this.config.root)) {
                    _this.pop();
                    _this.pop();
                }
                // add url to history
                _this.history.push(urlAfterRedirects);
                if (_this.config && _this.config.clearOn) {
                    /** @type {?} */
                    var clear = _this.config.clearOn.some((/**
                     * @param {?} s
                     * @return {?}
                     */
                    function (s) { return s === urlAfterRedirects; }));
                    if (clear) {
                        _this.clearHistory(urlAfterRedirects);
                    }
                }
            }));
        };
        /**
         * @param {?} target
         * @return {?}
         */
        FivRoutingStateService.prototype.registerNavigateable = /**
         * @param {?} target
         * @return {?}
         */
        function (target) {
            if (isNavigateable(target)) {
                this.history.push(target);
            }
        };
        /**
         * @return {?}
         */
        FivRoutingStateService.prototype.handleAndroidBackButton = /**
         * @return {?}
         */
        function () {
            var _this = this;
            this.platform.backButton
                .pipe(operators.filter((/**
             * @return {?}
             */
            function () { return !isNavigateable(_this.getCurrentUrl()); })))
                .subscribe((/**
             * @param {?} event
             * @return {?}
             */
            function (event) {
                _this.goBack();
            }));
            this.platform.backButton
                .pipe(operators.filter((/**
             * @return {?}
             */
            function () { return isNavigateable(_this.getCurrentUrl()); })))
                .subscribe((/**
             * @param {?} event
             * @return {?}
             */
            function (event) {
                event.register(99999, (/**
                 * @return {?}
                 */
                function () {
                    _this.goBack('/');
                }));
            }));
        };
        /**
         * @return {?}
         */
        FivRoutingStateService.prototype.getHistory = /**
         * @return {?}
         */
        function () {
            return this.history;
        };
        /**
         * @param {?=} defaultHref
         * @return {?}
         */
        FivRoutingStateService.prototype.getPreviousUrl = /**
         * @param {?=} defaultHref
         * @return {?}
         */
        function (defaultHref) {
            if (defaultHref === void 0) { defaultHref = '/'; }
            if (this.history.length > 2) {
                return this.history[this.history.length - 2];
            }
            return defaultHref;
        };
        /**
         * @return {?}
         */
        FivRoutingStateService.prototype.pop = /**
         * @return {?}
         */
        function () {
            return this.history.pop();
        };
        /**
         * @param {?} fromUrl
         * @return {?}
         */
        FivRoutingStateService.prototype.clearHistory = /**
         * @param {?} fromUrl
         * @return {?}
         */
        function (fromUrl) {
            var _this = this;
            this.history = this.history.filter((/**
             * @param {?} h
             * @return {?}
             */
            function (h) {
                return _this.config.clearOn.some((/**
                 * @param {?} s
                 * @return {?}
                 */
                function (s) { return s === h; }));
            }));
            if (fromUrl !== this.config.root) {
                this.history.push(fromUrl);
            }
            this.history = this.history
                .reverse()
                .filter((/**
             * @param {?} item
             * @param {?} pos
             * @param {?} self
             * @return {?}
             */
            function (item, pos, self) {
                return self.indexOf(item) === pos;
            }))
                .reverse();
            if (this.history[0] !== this.config.root) {
                this.history = __spread([this.config.root], this.history);
            }
        };
        /**
         * @return {?}
         */
        FivRoutingStateService.prototype.getCurrentUrl = /**
         * @return {?}
         */
        function () {
            return this.history[this.history.length - 1];
        };
        /**
         * @param {?=} defaultHref
         * @return {?}
         */
        FivRoutingStateService.prototype.goBack = /**
         * @param {?=} defaultHref
         * @return {?}
         */
        function (defaultHref) {
            if (defaultHref === void 0) { defaultHref = '/'; }
            if (this.getHistory().length <= 1) {
                // close the app because we are at root level
                return navigator['app'].exitApp();
            }
            /** @type {?} */
            var current = this.getCurrentUrl();
            if (typeof current !== 'string' && isNavigateable(current)) {
                current.dismiss();
                return this.pop();
            }
            /** @type {?} */
            var previous = this.getPreviousUrl(defaultHref);
            if (typeof previous === 'string') {
                return this.navCtrl.navigateBack(previous);
            }
            if (isNavigateable(previous)) {
                return this.navCtrl.navigateBack(this.getLatestUrl(defaultHref));
            }
        };
        /**
         * @param {?} defaultHref
         * @return {?}
         */
        FivRoutingStateService.prototype.getLatestUrl = /**
         * @param {?} defaultHref
         * @return {?}
         */
        function (defaultHref) {
            /** @type {?} */
            var urls = this.history.filter((/**
             * @param {?} e
             * @return {?}
             */
            function (e) { return !!(typeof e === 'string'); }));
            /** @type {?} */
            var latest = urls[urls.length - 1];
            if (urls.length > 0 && latest && typeof latest === 'string') {
                return latest;
            }
            return defaultHref;
        };
        FivRoutingStateService.decorators = [
            { type: core.Injectable, args: [{
                        providedIn: 'root'
                    },] }
        ];
        /** @nocollapse */
        FivRoutingStateService.ctorParameters = function () { return [
            { type: router.Router },
            { type: angular.NavController },
            { type: angular.Platform }
        ]; };
        /** @nocollapse */ FivRoutingStateService.ngInjectableDef = core.defineInjectable({ factory: function FivRoutingStateService_Factory() { return new FivRoutingStateService(core.inject(router.Router), core.inject(angular.NavController), core.inject(angular.Platform)); }, token: FivRoutingStateService, providedIn: "root" });
        return FivRoutingStateService;
    }());
    /**
     * @param {?} object
     * @return {?}
     */
    function isNavigateable(object) {
        return !!object && object.dismiss !== undefined;
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivBackButton = /** @class */ (function () {
        function FivBackButton(routingState) {
            this.routingState = routingState;
            this.icon = 'arrow-back';
            this.defaultHref = '/';
        }
        /**
         * @return {?}
         */
        FivBackButton.prototype.buttonClick = /**
         * @return {?}
         */
        function () {
            this.routingState.goBack(this.defaultHref);
        };
        FivBackButton.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-back-button',
                        template: "<ion-button (click)=\"buttonClick()\">\n  <fiv-icon [color]=\"color\" [name]=\"icon\"></fiv-icon>\n</ion-button>\n",
                        styles: [":host{display:block;padding-top:.2em}"]
                    }] }
        ];
        /** @nocollapse */
        FivBackButton.ctorParameters = function () { return [
            { type: FivRoutingStateService }
        ]; };
        FivBackButton.propDecorators = {
            icon: [{ type: core.Input }],
            color: [{ type: core.Input }],
            defaultHref: [{ type: core.Input }]
        };
        return FivBackButton;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivBackButtonModule = /** @class */ (function () {
        function FivBackButtonModule() {
        }
        FivBackButtonModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivBackButton],
                        imports: [common.CommonModule, FivIconModule, angular.IonicModule],
                        exports: [FivBackButton],
                        providers: []
                    },] }
        ];
        return FivBackButtonModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivPopover = /** @class */ (function () {
        function FivPopover(navParams, popoverController) {
            this.navParams = navParams;
            this.popoverController = popoverController;
            this.buttons = [];
            this.buttons = navParams.get('buttons');
        }
        /**
         * @return {?}
         */
        FivPopover.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @param {?} i
         * @return {?}
         */
        FivPopover.prototype.onItemClicked = /**
         * @param {?} i
         * @return {?}
         */
        function (i) {
            this.popoverController.dismiss({ index: i });
        };
        FivPopover.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-popover',
                        template: "<ion-content>\n  <ion-item (click)=\"onItemClicked(i)\" class=\"popover-item\" *ngFor=\"let button of buttons; let i = index\">\n    <ion-icon slot=\"start\" [name]=\"button.icon\"></ion-icon>\n    <ion-label>{{button.text}}</ion-label>\n  </ion-item>\n</ion-content>",
                        styles: [".popover-item{--border-style:none}.popover-item:hover{--background:rgb(240, 240, 240);cursor:pointer}"]
                    }] }
        ];
        /** @nocollapse */
        FivPopover.ctorParameters = function () { return [
            { type: angular.NavParams },
            { type: angular.PopoverController }
        ]; };
        return FivPopover;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivButtons = /** @class */ (function () {
        function FivButtons(platform, popoverController, actionSheetController) {
            this.platform = platform;
            this.popoverController = popoverController;
            this.actionSheetController = actionSheetController;
            this.slot = 'end';
            this.icon = 'more';
            this.count = 0;
            this.forceActionsheet = false;
            this.forcePopover = false;
            this.iconsOnly = true;
        }
        /**
         * @return {?}
         */
        FivButtons.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivButtons.prototype.ngAfterContentInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @param {?} event
         * @return {?}
         */
        FivButtons.prototype.onMenuClicked = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (this.forceActionsheet) {
                this.presentActionSheet(event);
                return;
            }
            if (this.forcePopover) {
                this.presentPopover(event);
                return;
            }
            if (this.platform.is('mobile')) {
                this.presentActionSheet(event);
            }
            else {
                this.presentPopover(event);
            }
        };
        /**
         * @param {?} ev
         * @return {?}
         */
        FivButtons.prototype.presentPopover = /**
         * @param {?} ev
         * @return {?}
         */
        function (ev) {
            return __awaiter(this, void 0, void 0, function () {
                var popover, result;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.popoverController.create({
                                component: FivPopover,
                                event: ev,
                                translucent: false,
                                componentProps: {
                                    buttons: this.buttons
                                        .toArray()
                                        .slice(this.count)
                                        .filter((/**
                                     * @param {?} button
                                     * @return {?}
                                     */
                                    function (button) { return !button.disabled; }))
                                }
                            })];
                        case 1:
                            popover = _a.sent();
                            return [4 /*yield*/, popover.present()];
                        case 2:
                            _a.sent();
                            return [4 /*yield*/, popover.onDidDismiss()];
                        case 3:
                            result = _a.sent();
                            if (result &&
                                result.data &&
                                (result.data.index || result.data.index === 0)) {
                                this.onButtonClicked(result.data.index + this.count);
                            }
                            return [2 /*return*/];
                    }
                });
            });
        };
        /**
         * @param {?} ev
         * @return {?}
         */
        FivButtons.prototype.presentActionSheet = /**
         * @param {?} ev
         * @return {?}
         */
        function (ev) {
            return __awaiter(this, void 0, void 0, function () {
                var buttons, actionSheet;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            buttons = [];
                            this.buttons
                                .toArray()
                                .slice(this.count)
                                .forEach((/**
                             * @param {?} button
                             * @param {?} index
                             * @return {?}
                             */
                            function (button, index) {
                                if (!button.disabled) {
                                    buttons.push({
                                        text: button.text,
                                        icon: button.icon,
                                        handler: (/**
                                         * @return {?}
                                         */
                                        function () {
                                            _this.onButtonClicked(_this.count + index);
                                        })
                                    });
                                }
                            }));
                            return [4 /*yield*/, this.actionSheetController.create({
                                    header: this.header,
                                    subHeader: this.subHeader,
                                    buttons: buttons
                                })];
                        case 1:
                            actionSheet = _a.sent();
                            return [4 /*yield*/, actionSheet.present()];
                        case 2:
                            _a.sent();
                            return [2 /*return*/];
                    }
                });
            });
        };
        /**
         * @param {?} i
         * @return {?}
         */
        FivButtons.prototype.onButtonClicked = /**
         * @param {?} i
         * @return {?}
         */
        function (i) {
            this.buttons.toArray()[i].click.emit();
        };
        FivButtons.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-buttons',
                        template: "<ion-buttons *ngIf=\"buttons\" [slot]=\"slot\">\n\n  <fiv-button [color]=\"color\" *ngIf=\"(slot === 'start' || slot ==='primary') && count < buttons.length && text\"\n    (click)=\"onMenuClicked($event)\" [text]=\"text\"></fiv-button>\n\n  <fiv-button [color]=\"color\" *ngIf=\"(slot === 'start' || slot ==='primary') && count < buttons.length && !text\"\n    (click)=\"onMenuClicked($event)\" [icon]=\"'md-more'\"></fiv-button>\n  <ng-container *ngIf=\"iconsOnly\">\n    <fiv-button [color]=\"button.color\" (click)=\"onButtonClicked(i)\" [icon]=\"button.icon\"\n      *ngFor=\"let button of buttons.toArray() |\u00A0slice:0:count; let i = index;\"></fiv-button>\n  </ng-container>\n  <ng-container *ngIf=\"!iconsOnly\">\n    <fiv-button [color]=\"button.color\" (click)=\"onButtonClicked(i)\" [icon]=\"button.icon\" [text]=\"button.text\"\n      *ngFor=\"let button of buttons.toArray() |\u00A0slice:0:count; let i = index;\"></fiv-button>\n  </ng-container>\n  <fiv-button [color]=\"color\" *ngIf=\"(slot === 'end' || slot ==='secondary') && count < buttons.length && !text\"\n    (click)=\"onMenuClicked($event)\" [icon]=\"icon\"></fiv-button>\n  <fiv-button [color]=\"color\" *ngIf=\"(slot === 'end' || slot ==='secondary') && count < buttons.length && text\"\n    (click)=\"onMenuClicked($event)\" [text]=\"text\"></fiv-button>\n</ion-buttons>",
                        styles: [":host{display:block}"]
                    }] }
        ];
        /** @nocollapse */
        FivButtons.ctorParameters = function () { return [
            { type: angular.Platform },
            { type: angular.PopoverController },
            { type: angular.ActionSheetController }
        ]; };
        FivButtons.propDecorators = {
            slot: [{ type: core.Input }],
            subHeader: [{ type: core.Input }],
            header: [{ type: core.Input }],
            icon: [{ type: core.Input }],
            text: [{ type: core.Input }],
            color: [{ type: core.Input }],
            count: [{ type: core.Input }],
            forceActionsheet: [{ type: core.Input }],
            forcePopover: [{ type: core.Input }],
            iconsOnly: [{ type: core.Input }],
            buttons: [{ type: core.ContentChildren, args: [FivButton,] }]
        };
        return FivButtons;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivButtonsModule = /** @class */ (function () {
        function FivButtonsModule() {
        }
        FivButtonsModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivButtons],
                        imports: [common.CommonModule, FivButtonModule, angular.IonicModule],
                        exports: [
                            FivButtons,
                            // Re-export `FivButtonModule` as `FivButton` will be used
                            // inside of `FivButtons`
                            FivButtonModule
                        ]
                    },] }
        ];
        return FivButtonsModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivCollapsableMenu = /** @class */ (function () {
        function FivCollapsableMenu(sanitizer, menu, split, platform) {
            var _this = this;
            this.sanitizer = sanitizer;
            this.menu = menu;
            this.split = split;
            this.platform = platform;
            this.collapsed = false;
            this.hovering = false;
            this.splitVisible = false;
            this.hoverMenu = true;
            this.width = 64;
            this.minWidth = 270;
            this.maxWidth = this.platform.width() * 0.28;
            this.split.ionSplitPaneVisible
                .pipe(operators.map((/**
             * @param {?} event
             * @return {?}
             */
            function (event) { return event.detail.visible; })))
                .subscribe((/**
             * @param {?} visible
             * @return {?}
             */
            function (visible) { return (_this.splitVisible = visible); }));
        }
        Object.defineProperty(FivCollapsableMenu.prototype, "myStyle", {
            get: /**
             * @return {?}
             */
            function () {
                if (this.collapsed && this.splitVisible) {
                    return (this.sanitizer
                        // tslint:disable-next-line:max-line-length
                        .bypassSecurityTrustStyle("min-width: " + this.width + "px; max-width: " + this.width + "px; --border: 0; transition: all cubic-bezier(.55,0,.1,1) 200ms;"));
                }
                else {
                    if (!this.splitVisible) {
                        return (this.sanitizer
                            // tslint:disable-next-line:max-line-length
                            .bypassSecurityTrustStyle("--border: 0; transition: all cubic-bezier(.55,0,.1,1) 200ms;"));
                    }
                    else {
                        return (this.sanitizer
                            // tslint:disable-next-line:max-line-length
                            .bypassSecurityTrustStyle("min-width: " + this.minWidth + "px; max-width: " + this.maxWidth + "px; --border: 0; transition: all cubic-bezier(.55,0,.1,1) 200ms;"));
                    }
                }
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivCollapsableMenu.prototype.hover = /**
         * @return {?}
         */
        function () {
            if (this.collapsed && !this.hovering && this.hoverMenu) {
                this.open();
                this.hovering = true;
            }
        };
        /**
         * @return {?}
         */
        FivCollapsableMenu.prototype.blur = /**
         * @return {?}
         */
        function () {
            if (!this.hoverMenu) {
                return;
            }
            if (!this.collapsed && this.hovering) {
                this.close();
            }
            this.hovering = false;
        };
        Object.defineProperty(FivCollapsableMenu.prototype, "fivCollapseMenu", {
            set: /**
             * @param {?} collapse
             * @return {?}
             */
            function (collapse) {
                this.collapsed = collapse;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivCollapsableMenu.prototype.toggleMenu = /**
         * @return {?}
         */
        function () {
            if (this.hovering) {
                this.open();
                this.hovering = false;
                return;
            }
            this.collapsed = !this.collapsed;
        };
        /**
         * @return {?}
         */
        FivCollapsableMenu.prototype.open = /**
         * @return {?}
         */
        function () {
            this.collapsed = false;
        };
        /**
         * @return {?}
         */
        FivCollapsableMenu.prototype.close = /**
         * @return {?}
         */
        function () {
            this.collapsed = true;
        };
        FivCollapsableMenu.decorators = [
            { type: core.Directive, args: [{
                        selector: '[fivCollapseMenu]',
                        exportAs: 'menuCollapse'
                    },] }
        ];
        /** @nocollapse */
        FivCollapsableMenu.ctorParameters = function () { return [
            { type: platformBrowser.DomSanitizer },
            { type: angular.IonMenu, decorators: [{ type: core.Host }] },
            { type: angular.IonSplitPane, decorators: [{ type: core.Host }, { type: core.Optional }] },
            { type: angular.Platform }
        ]; };
        FivCollapsableMenu.propDecorators = {
            hoverMenu: [{ type: core.Input }],
            width: [{ type: core.Input }],
            minWidth: [{ type: core.Input }],
            maxWidth: [{ type: core.Input }],
            myStyle: [{ type: core.HostBinding, args: ['style',] }],
            hover: [{ type: core.HostListener, args: ['mouseenter',] }],
            blur: [{ type: core.HostListener, args: ['mouseleave',] }],
            fivCollapseMenu: [{ type: core.Input }]
        };
        return FivCollapsableMenu;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivCollapsableMenuButton = /** @class */ (function () {
        function FivCollapsableMenuButton() {
            this.icon = 'menu';
        }
        /**
         * @return {?}
         */
        FivCollapsableMenuButton.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivCollapsableMenuButton.prototype.onClick = /**
         * @return {?}
         */
        function () {
            this.menu.toggleMenu();
        };
        FivCollapsableMenuButton.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-collapsable-menu-button',
                        template: "<ion-button fivCenter (click)=\"onClick()\">\n  <fiv-icon slot=\"icon-only\" [name]=\"icon\"></fiv-icon>\n</ion-button>",
                        styles: [":host{display:block;padding-top:.2em}"]
                    }] }
        ];
        /** @nocollapse */
        FivCollapsableMenuButton.ctorParameters = function () { return []; };
        FivCollapsableMenuButton.propDecorators = {
            menu: [{ type: core.Input }],
            icon: [{ type: core.Input }]
        };
        return FivCollapsableMenuButton;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivCollapsableModule = /** @class */ (function () {
        function FivCollapsableModule() {
        }
        FivCollapsableModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivCollapsableMenu, FivCollapsableMenuButton],
                        imports: [common.CommonModule, FivIconModule, angular.IonicModule],
                        exports: [FivCollapsableMenu, FivCollapsableMenuButton]
                    },] }
        ];
        return FivCollapsableModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivDialog = /** @class */ (function () {
        function FivDialog(renderer, domCtrl, animation) {
            this.renderer = renderer;
            this.domCtrl = domCtrl;
            this.animation = animation;
            this.verticalAlign = 'top';
            this.horizontalAlign = 'middle';
            this.shape = 'card';
            this.priority = 20001;
            this.backdrop = true;
            this.backdropDismiss = true;
            this.pullEnabled = true;
            // animation data
            this.inDuration = 160;
            this.outDuration = 120;
            this.outPosition = '-100%';
            this.toPosition = '0px';
            this.translate = '0px';
            this.fivClose = new core.EventEmitter();
            this.fivDurationOver = new core.EventEmitter();
            this.fivOpen = new core.EventEmitter();
            this.dialogState = 'out';
        }
        /**
         * @return {?}
         */
        FivDialog.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivDialog.prototype.open = /**
         * @return {?}
         */
        function () {
            this.overlay.show(this.priority);
            this.dialogState = this.verticalAlign;
            if (this.duration) {
                this.bar.shrinkIn(this.duration);
            }
        };
        /**
         * @return {?}
         */
        FivDialog.prototype.doneShrinking = /**
         * @return {?}
         */
        function () {
            this.fivDurationOver.emit(this);
        };
        /**
         * @return {?}
         */
        FivDialog.prototype.close = /**
         * @return {?}
         */
        function () {
            this.dialogState = 'out';
            this.bar.stopProgressAnimation();
        };
        /**
         * @return {?}
         */
        FivDialog.prototype.backdropClick = /**
         * @return {?}
         */
        function () {
            if (this.backdropDismiss) {
                this.close();
            }
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivDialog.prototype.animationDone = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.fromState !== 'void' && event.toState === 'out') {
                this.transformDialog(0);
                this.overlay.hide();
                this.fivClose.emit(this);
            }
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivDialog.prototype.backdropAnimDone = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.fromState === 'out' && event.toState !== 'void') {
                this.fivOpen.emit(this);
            }
        };
        /**
         * @return {?}
         */
        FivDialog.prototype.onRefresh = /**
         * @return {?}
         */
        function () {
            this.close();
        };
        /**
         * @return {?}
         */
        FivDialog.prototype.fivCancel = /**
         * @return {?}
         */
        function () {
            this.resetDialog(this.currentPullProgress);
        };
        /**
         * @param {?} progress
         * @return {?}
         */
        FivDialog.prototype.transformDialog = /**
         * @param {?} progress
         * @return {?}
         */
        function (progress) {
            var _this = this;
            this.currentPullProgress = progress;
            this.domCtrl.write((/**
             * @return {?}
             */
            function () {
                if (_this.verticalAlign === 'bottom') {
                    _this.renderer.setStyle(_this.dialogRef.nativeElement, 'margin-bottom', "-" + progress * 120 + "px");
                }
                else if (_this.verticalAlign === 'top') {
                    _this.renderer.setStyle(_this.dialogRef.nativeElement, 'margin-top', "-" + progress * 120 + "px");
                }
                else if (_this.verticalAlign === 'center') {
                    _this.renderer.setStyle(_this.dialogRef.nativeElement, 'margin-top', progress * 120 + "px");
                }
            }));
        };
        /**
         * @param {?} progress
         * @return {?}
         */
        FivDialog.prototype.resetDialog = /**
         * @param {?} progress
         * @return {?}
         */
        function (progress) {
            var _this = this;
            /** @type {?} */
            var reset;
            if (this.verticalAlign === 'bottom') {
                reset = this.animation.build([
                    animations.style({ 'margin-bottom': "-" + progress * 120 + "px" }),
                    animations.animate('150ms', animations.style({ 'margin-bottom': "0px" }))
                ]);
            }
            else if (this.verticalAlign === 'top') {
                reset = this.animation.build([
                    animations.style({ 'margin-top': "-" + progress * 120 + "px" }),
                    animations.animate('150ms', animations.style({ 'margin-top': "0px" }))
                ]);
            }
            else if (this.verticalAlign === 'center') {
                reset = this.animation.build([
                    animations.style({ 'margin-top': progress * 120 + "px" }),
                    animations.animate('150ms', animations.style({ 'margin-top': "0px" }))
                ]);
            }
            /** @type {?} */
            var animation = reset.create(this.dialogRef.nativeElement);
            animation.play();
            animation.onDone((/**
             * @return {?}
             */
            function () {
                animation.destroy();
                _this.transformDialog(0);
            }));
        };
        FivDialog.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-dialog',
                        template: "<fiv-overlay #overlay>\n  <ion-content no-bounce [direction]=\"verticalAlign === 'top' ? 'up' : 'down'\" fivPull [enabled]=\"pullEnabled\" [maxPullHeight]=\"168\" [minPullHeight]=\"120\" (fivPull)=\"transformDialog($event)\"\n  (fivRefresh)=\"onRefresh()\" (fivCancel)=\"fivCancel()\"  *ngIf=\"backdrop\" (@fade.done)=\"backdropAnimDone($event)\"\n    [@fade]=\"{value: dialogState, params: { opacity: 0, inDuration: '120ms' }}\" (click)=\"backdropClick()\" class=\"backdrop\">\n</ion-content>\n  <div #dialog [@fade]=\"{value: dialogState, params: { opacity: 0, inDuration: '120ms' }}\"\n  [@slide]=\"{value: dialogState, params: {top: outPosition, inDuration: inDuration + 'ms',outDuration: outDuration + 'ms', toPosition: toPosition, translate: translate,translateX: horizontalAlign === 'middle' ? 'translateX(-50%)' :  '' }}\"\n  (@slide.done)=\"animationDone($event)\" class=\"dialog\" [ngClass]=\"[verticalAlign, horizontalAlign, shape]\">\n    <ng-container>\n      <ng-container *ngTemplateOutlet=\"card\"></ng-container>\n    </ng-container>\n  </div>\n\n</fiv-overlay>\n\n<ng-template #card>\n  <ion-card>\n    <fiv-loading-progress-bar [verticalAlign]=\"verticalAlign === 'top' ? 'bottom' : 'top'\"\n      (fivDoneShrinking)=\"doneShrinking()\" #bar></fiv-loading-progress-bar>\n    <ng-content></ng-content>\n  </ion-card>\n</ng-template>",
                        animations: [
                            animations.trigger('slide', [
                                animations.transition('out => top', [
                                    animations.style({ top: '0', transform: 'translateY(-100%) {{translateX}}' }),
                                    animations.animate('220ms ease-out')
                                ]),
                                animations.transition('out => center', [
                                    animations.style({
                                        top: '50%',
                                        transform: 'translateY(-50%) {{translateX}} scale(0)',
                                        opacity: 0
                                    }),
                                    animations.animate('220ms ease-out', animations.style({
                                        top: '50%',
                                        transform: 'translateY(-50%) {{translateX}} scale(1)',
                                        opacity: 1
                                    }))
                                ]),
                                animations.transition('out => bottom', [
                                    animations.style({ bottom: '0', transform: 'translateY(100%) {{translateX}}' }),
                                    animations.animate('220ms ease-out')
                                ]),
                                animations.transition('top => out', [
                                    animations.style({ top: '0', transform: '*' }),
                                    animations.animate('140ms ease-in', animations.style({ top: '0', transform: 'translateY(-100%) {{translateX}}' }))
                                ]),
                                animations.transition('center => out', [
                                    animations.style({
                                        top: '50%',
                                        transform: '*',
                                        opacity: 1
                                    }),
                                    animations.animate('140ms ease-in', animations.style({
                                        top: '50%',
                                        transform: 'translateY(-50%) {{translateX}} scale(0)',
                                        opacity: 0
                                    }))
                                ]),
                                animations.transition('bottom => out', [
                                    animations.style({ bottom: '0', transform: '*' }),
                                    animations.animate('140ms ease-in', animations.style({ bottom: '0', transform: 'translateY(100%) {{translateX}}' }))
                                ]),
                            ]),
                            animations.trigger('fade', [
                                animations.transition('out => *', [
                                    animations.style({ opacity: '{{opacity}}' }),
                                    animations.animate('{{inDuration}} ease-out', animations.style({ opacity: '1' }))
                                ], { params: { opacity: 0, inDuration: '250ms' } }),
                                animations.transition('* => out', [
                                    animations.style({ opacity: '1' }),
                                    animations.animate('{{outDuration}} ease-in', animations.style({ opacity: '0' }))
                                ], { params: { opacity: 0, outDuration: '200ms' } }),
                                animations.state('out', animations.style({ opacity: '0' }))
                            ])
                        ],
                        styles: ["ion-grid{--ion-grid-padding:0;--ion-grid-column-padding:0}.dialog{--min-width:340px;--ion-item-background:#fff;position:absolute;min-width:var(--min-width)}@media (max-width:600px){.dialog{--min-width:100%}}.dialog.fill{background:var(--ion-item-background);box-shadow:0 4px 16px rgba(0,0,0,.12)}.dialog.fill .sc-ion-card-ios-h,.dialog.fill .sc-ion-card-md-h{margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:0;margin-inline-end:0;box-shadow:none;margin-top:0;margin-bottom:0}.dialog.fill.bottom .sc-ion-card-ios-h,.dialog.fill.bottom .sc-ion-card-md-h,.dialog.fill.top .sc-ion-card-ios-h,.dialog.fill.top .sc-ion-card-md-h{border-radius:0}.dialog.top.left{padding-top:env(safe-area-inset-top);top:0;left:0}.dialog.top.right{padding-top:env(safe-area-inset-top);top:0;right:0}.dialog.top.middle{padding-top:env(safe-area-inset-top);top:0;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.dialog.center.middle{padding-top:env(safe-area-inset-top);top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.dialog.center.left{top:50%;padding-top:env(safe-area-inset-top);left:0;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.dialog.center.right{right:0;top:50%;padding-top:env(safe-area-inset-top);-webkit-transform:translateY(-50%);transform:translateY(-50%)}.dialog.bottom.left{bottom:0;left:0;padding-bottom:env(safe-area-inset-bottom)}.dialog.bottom.right{bottom:0;right:0;padding-bottom:env(safe-area-inset-bottom)}.dialog.bottom.middle{bottom:0;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);padding-bottom:env(safe-area-inset-bottom)}.backdrop{width:100%;height:100%;--background:rgba(0, 0, 0, 0.2);position:absolute}"]
                    }] }
        ];
        /** @nocollapse */
        FivDialog.ctorParameters = function () { return [
            { type: core.Renderer2 },
            { type: angular.DomController },
            { type: animations.AnimationBuilder }
        ]; };
        FivDialog.propDecorators = {
            verticalAlign: [{ type: core.Input }],
            horizontalAlign: [{ type: core.Input }],
            shape: [{ type: core.Input }],
            priority: [{ type: core.Input }],
            backdrop: [{ type: core.Input }],
            backdropDismiss: [{ type: core.Input }],
            pullEnabled: [{ type: core.Input }],
            duration: [{ type: core.Input }],
            inDuration: [{ type: core.Input }],
            outDuration: [{ type: core.Input }],
            fivClose: [{ type: core.Output }],
            fivDurationOver: [{ type: core.Output }],
            fivOpen: [{ type: core.Output }],
            overlay: [{ type: core.ViewChild, args: [FivOverlay,] }],
            bar: [{ type: core.ViewChild, args: [FivLoadingProgressBar,] }],
            dialogRef: [{ type: core.ViewChild, args: ['dialog',] }]
        };
        return FivDialog;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivDialogService = /** @class */ (function () {
        function FivDialogService(overlay) {
            this.overlay = overlay;
        }
        /**
         * @param {?} content
         * @param {?=} options
         * @return {?}
         */
        FivDialogService.prototype.openDialog = /**
         * @param {?} content
         * @param {?=} options
         * @return {?}
         */
        function (content, options) {
            /** @type {?} */
            var c = this.overlay.createOverlay(FivDialog, content);
            c.instance.verticalAlign = options ? options.verticalAlign : 'top';
            c.instance.verticalAlign = options ? options.verticalAlign : 'center';
            c.instance.backdrop = options ? options.backdrop : true;
            c.instance.duration = options ? options.duration : 0;
            c.instance.shape = options ? options.shape : 'card';
            c.instance.open();
            return c;
        };
        FivDialogService.decorators = [
            { type: core.Injectable, args: [{
                        providedIn: 'root'
                    },] }
        ];
        /** @nocollapse */
        FivDialogService.ctorParameters = function () { return [
            { type: FivOverlayService }
        ]; };
        /** @nocollapse */ FivDialogService.ngInjectableDef = core.defineInjectable({ factory: function FivDialogService_Factory() { return new FivDialogService(core.inject(FivOverlayService)); }, token: FivDialogService, providedIn: "root" });
        return FivDialogService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivDialogModule = /** @class */ (function () {
        function FivDialogModule() {
        }
        FivDialogModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivDialog],
                        imports: [
                            common.CommonModule,
                            FivLoadingProgressBarModule,
                            FivOverlayModule,
                            angular.IonicModule,
                            FivPullModule
                        ],
                        exports: [FivDialog],
                        entryComponents: [FivDialog],
                        providers: [FivDialogService]
                    },] }
        ];
        return FivDialogModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var CUSTOM_EDITIABLE_LABEL_CONTROL_VALUE_ACCESSOR = {
        provide: forms.NG_VALUE_ACCESSOR,
        useExisting: core.forwardRef((/**
         * @return {?}
         */
        function () { return FivEditableLabel; })),
        multi: true
    };
    var FivEditableLabel = /** @class */ (function () {
        function FivEditableLabel() {
            this.type = 'label';
            this.disabled = false;
            this.blur = new core.EventEmitter();
        }
        Object.defineProperty(FivEditableLabel.prototype, "editing", {
            get: /**
             * @return {?}
             */
            function () {
                return this._editing;
            },
            set: /**
             * @param {?} edit
             * @return {?}
             */
            function (edit) {
                this._editing = edit;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivEditableLabel.prototype.ngAfterContentInit = /**
         * @return {?}
         */
        function () {
            var _this = this;
            rxjs.timer(0).subscribe((/**
             * @return {?}
             */
            function () { return (_this.internalValue = _this.value); }));
        };
        Object.defineProperty(FivEditableLabel.prototype, "internalValue", {
            get: /**
             * @return {?}
             */
            function () {
                return this._value;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */
            function (value) {
                if (value !== this._value) {
                    this._value = value;
                    if (this.onChangeCallback) {
                        this.onChangeCallback(this._value);
                    }
                }
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivEditableLabel.prototype.edit = /**
         * @return {?}
         */
        function () {
            this.editing = true;
        };
        /**
         * @return {?}
         */
        FivEditableLabel.prototype.stopEdit = /**
         * @return {?}
         */
        function () {
            this.editing = false;
        };
        /**
         * @return {?}
         */
        FivEditableLabel.prototype.onEscapeClick = /**
         * @return {?}
         */
        function () {
            this.internalValue = this.value;
            this.stopEdit();
        };
        /**
         * @return {?}
         */
        FivEditableLabel.prototype.onEnterClick = /**
         * @return {?}
         */
        function () {
            this.value = this.internalValue;
            this.stopEdit();
        };
        /**
         * @param {?} value
         * @return {?}
         */
        FivEditableLabel.prototype.writeValue = /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value !== undefined && value !== this._value) {
                this._value = value;
            }
        };
        /**
         * @return {?}
         */
        FivEditableLabel.prototype.onBlur = /**
         * @return {?}
         */
        function () {
            this.blur.emit();
            this.stopEdit();
            if (this.onTouchedCallback) {
                this.onTouchedCallback();
            }
        };
        /**
         * @param {?} fn
         * @return {?}
         */
        FivEditableLabel.prototype.registerOnChange = /**
         * @param {?} fn
         * @return {?}
         */
        function (fn) {
            this.onChangeCallback = fn;
        };
        /**
         * @param {?} fn
         * @return {?}
         */
        FivEditableLabel.prototype.registerOnTouched = /**
         * @param {?} fn
         * @return {?}
         */
        function (fn) {
            this.onTouchedCallback = fn;
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivEditableLabel.prototype.titleAnimDone = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.toState === 'void') {
                this.input.setFocus();
            }
        };
        FivEditableLabel.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-editable-label',
                        template: "<!-- TODO if value is empty label or title can not be clicked, show placeholder?! -->\n<ion-title *ngIf=\"type === 'title' && !editing\" (click)=\"edit()\" (@titleAnim.done)=\"titleAnimDone($event)\" [@titleAnim]>\n    {{value}}</ion-title>\n<ion-label *ngIf=\"type === 'label' && !editing\" class=\"label\" (click)=\"edit()\" (@titleAnim.done)=\"titleAnimDone($event)\" [@titleAnim]>\n    {{value}}</ion-label>\n<ion-input *ngIf=\"editing\" [(ngModel)]=\"internalValue\" (blur)=\"onBlur()\" (keyup.enter)=\"onEnterClick()\"\n    (keyup.escape)=\"onEscapeClick()\" #input [@titleAnim] [ngClass]=\"{'title-input': type === 'title'}\">\n</ion-input>",
                        animations: [
                            animations.trigger('titleAnim', [
                                animations.transition('void => *', [
                                    animations.style({ opacity: '0', transform: 'translateY(-20%)' }),
                                    animations.animate('175ms ease-out', animations.style({ opacity: '1', transform: 'translateY(0)' }))
                                ])
                            ])
                        ],
                        providers: [CUSTOM_EDITIABLE_LABEL_CONTROL_VALUE_ACCESSOR],
                        styles: [":host{width:100%}.label{max-width:100%}:host *{pointer-events:auto}:host(.editable-label-disabled){pointer-events:none}.title-input{font-size:20px;font-weight:500;color:var(--color)}"]
                    }] }
        ];
        /** @nocollapse */
        FivEditableLabel.ctorParameters = function () { return []; };
        FivEditableLabel.propDecorators = {
            editing: [{ type: core.Input }],
            value: [{ type: core.Input }],
            type: [{ type: core.Input }],
            disabled: [{ type: core.HostBinding, args: ['class.editable-label-disabled',] }, { type: core.Input }],
            blur: [{ type: core.Output }],
            input: [{ type: core.ViewChild, args: ['input',] }]
        };
        return FivEditableLabel;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivEditableLabelModule = /** @class */ (function () {
        function FivEditableLabelModule() {
        }
        FivEditableLabelModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivEditableLabel],
                        imports: [common.CommonModule, forms.FormsModule, angular.IonicModule],
                        exports: [FivEditableLabel]
                    },] }
        ];
        return FivEditableLabelModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivLoadingRefresherContent = /** @class */ (function () {
        function FivLoadingRefresherContent(element, renderer, builder) {
            this.element = element;
            this.renderer = renderer;
            this.builder = builder;
            this.iconColor = '#000';
            this.checkmark = false;
            this.disabled = false;
            this._progress = 0;
            this.fivComplete = new core.EventEmitter();
            this.fivRefresh = new core.EventEmitter();
            this.fivHidden = new core.EventEmitter();
            this.fivShowed = new core.EventEmitter();
            this.fivProgress = new core.EventEmitter();
            this.visible = false;
            this.iconState = 'normal';
        }
        Object.defineProperty(FivLoadingRefresherContent.prototype, "progress", {
            get: /**
             * @return {?}
             */
            function () {
                return this._progress;
            },
            set: /**
             * @param {?} progress
             * @return {?}
             */
            function (progress) {
                this._progress = progress;
                if (progress < 1) {
                    this.renderer.setStyle(this.spinnerRef.nativeElement, 'transform', "rotateZ(" + 360 * progress + "deg)");
                }
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivLoadingRefresherContent.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivLoadingRefresherContent.prototype.load = /**
         * @return {?}
         */
        function () {
            this.visible = true;
            this.spinner.spin();
            this.fivRefresh.emit(this);
        };
        /**
         * @return {?}
         */
        FivLoadingRefresherContent.prototype.unload = /**
         * @return {?}
         */
        function () {
            this.spinner.stopSpinning();
        };
        /**
         * @return {?}
         */
        FivLoadingRefresherContent.prototype.complete = /**
         * @return {?}
         */
        function () {
            // this.spinner.completeIn(500);
            if (this.checkmark) {
                this.iconState = 'rotate';
            }
            else {
                this.postComplete();
            }
        };
        /**
         * @return {?}
         */
        FivLoadingRefresherContent.prototype.show = /**
         * @return {?}
         */
        function () {
            var _this = this;
            if (!this.visible) {
                this.visible = true;
                /** @type {?} */
                var animation = this.builder.build([
                    animations.style({ transform: 'scale(0)' }),
                    animations.animate('0ms ease-out', animations.style({ transform: 'scale(1)' }))
                ]);
                /** @type {?} */
                var player_1 = animation.create(this.background.nativeElement);
                player_1.play();
                player_1.onDone((/**
                 * @return {?}
                 */
                function () {
                    _this.fivShowed.emit(_this);
                    player_1.destroy();
                }));
            }
        };
        /**
         * @return {?}
         */
        FivLoadingRefresherContent.prototype.hide = /**
         * @return {?}
         */
        function () {
            var _this = this;
            if (this.visible) {
                /** @type {?} */
                var transform = "scale(1)";
                /** @type {?} */
                var animation = this.builder.build([
                    animations.style({ transform: transform }),
                    animations.animate('175ms ease-in', animations.style({ transform: 'scale(0)' }))
                ]);
                /** @type {?} */
                var player_2 = animation.create(this.background.nativeElement);
                player_2.play();
                player_2.onDone((/**
                 * @return {?}
                 */
                function () {
                    _this.fivHidden.emit(_this);
                    _this.visible = false;
                    player_2.destroy();
                }));
            }
        };
        /**
         * @return {?}
         */
        FivLoadingRefresherContent.prototype.fillAnimationDone = /**
         * @return {?}
         */
        function () {
            if (this.checkmark) {
                this.iconState = 'rotate';
            }
            else {
                this.postComplete();
            }
        };
        /**
         * @param {?} event
         * @param {?} icon
         * @return {?}
         */
        FivLoadingRefresherContent.prototype.changeIconAndReveal = /**
         * @param {?} event
         * @param {?} icon
         * @return {?}
         */
        function (event, icon) {
            if (event.fromState === 'normal') {
                this.icon = icon;
                this.iconState = 'normal';
            }
            else {
                if (event.fromState === 'rotate') {
                    this.postComplete();
                }
            }
        };
        /**
         * @return {?}
         */
        FivLoadingRefresherContent.prototype.postComplete = /**
         * @return {?}
         */
        function () {
            this.unload();
            this.fivComplete.emit(this);
        };
        /**
         * @param {?} progress
         * @return {?}
         */
        FivLoadingRefresherContent.prototype.setValue = /**
         * @param {?} progress
         * @return {?}
         */
        function (progress) {
            this.spinner.setValue(progress);
        };
        /**
         * @return {?}
         */
        FivLoadingRefresherContent.prototype.reset = /**
         * @return {?}
         */
        function () {
            this.spinner.setMode('indeterminate');
        };
        FivLoadingRefresherContent.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-loading-refresher-content',
                        template: "<div #background class=\"spinner-background\">\n    <fiv-loading-spinner #spinner (fivProgress)=\"fivProgress.emit($event)\" (fivComplete)=\"fillAnimationDone()\"\n        class=\"spinner\" [circleRadius]=\"8\" [diameter]=\"20\" [strokeWidth]=\"2\"></fiv-loading-spinner>\n</div>",
                        animations: [
                            animations.trigger('fabAnim', [
                                animations.transition('void => *', [
                                    animations.style({ transform: 'scale(0)' }),
                                    animations.animate('250ms ease-out')
                                ]),
                                animations.transition('* => void', [
                                    animations.animate('250ms ease-in', animations.style({ transform: 'scale(0)' }))
                                ])
                            ]),
                            animations.trigger('spinnerAnim', [
                                animations.transition('void => *', [
                                    animations.style({ opacity: '0' }),
                                    animations.animate('250ms ease-out')
                                ]),
                                animations.transition('* => void', [
                                    animations.animate('250ms ease-in', animations.style({ opacity: '0' }))
                                ])
                            ]),
                            animations.trigger('rotateAnim', [
                                animations.transition('normal => rotate', [animations.animate('125ms ease-out')]),
                                animations.transition('rotate => normal', [animations.animate('125ms ease-in')]),
                                animations.state('rotate', animations.style({ opacity: '0', transform: 'rotateZ(45deg)' })),
                                animations.state('normal', animations.style({ opacity: '1', transform: 'rotateZ(0deg)' }))
                            ]),
                            animations.trigger('fillAnim', [
                                animations.transition('* => fill', [
                                    animations.style({
                                        'stroke-dasharray': 180,
                                        'stroke-dashoffset': 90,
                                        transformOrigin: 'center',
                                        stroke: '#DE3E35'
                                    }),
                                    animations.animate('1400ms ease-out')
                                ]),
                                animations.state('fill', animations.style({
                                    'stroke-dasharray': 315,
                                    'stroke-dashoffset': 0,
                                    transformOrigin: 'center',
                                    stroke: '#1B9A59',
                                    opacity: 0
                                }))
                            ])
                        ],
                        styles: [":host{position:absolute;width:40px;height:40px;top:env(safe-area-inset-top);left:calc(50% - 20px);z-index:9}.spinner-background{position:absolute;width:40px;height:40px;background:var(--ion-color-light);border-radius:50%;box-shadow:0 4px 6px 0 rgba(0,0,0,.14),0 4px 5px rgba(0,0,0,.1)}.spinner-background fiv-loading-spinner{position:absolute;top:10px;left:10px}.rotate{-webkit-animation:1.4s linear infinite rotator;animation:1.4s linear infinite rotator}@-webkit-keyframes rotator{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(270deg);transform:rotate(270deg)}}@keyframes rotator{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(270deg);transform:rotate(270deg)}}.path{stroke-dasharray:187;stroke-dashoffset:0;-webkit-transform-origin:center;transform-origin:center;-webkit-animation:1.4s ease-in-out infinite dash,5.6s ease-in-out infinite colors;animation:1.4s ease-in-out infinite dash,5.6s ease-in-out infinite colors}.fill{stroke-dasharray:360;stroke-dashoffset:0;-webkit-transform-origin:center;transform-origin:center;-webkit-animation:1.4s ease-out fill;animation:1.4s ease-out fill;stroke:#1b9a59}@-webkit-keyframes colors{0%,100%{stroke:#4285f4}25%{stroke:#de3e35}50%{stroke:#f7c223}75%{stroke:#1b9a59}}@keyframes colors{0%,100%{stroke:#4285f4}25%{stroke:#de3e35}50%{stroke:#f7c223}75%{stroke:#1b9a59}}@-webkit-keyframes dash{0%{stroke-dashoffset:187}50%{stroke-dashoffset:46.75;-webkit-transform:rotate(135deg);transform:rotate(135deg)}100%{stroke-dashoffset:187;-webkit-transform:rotate(450deg);transform:rotate(450deg)}}@keyframes dash{0%{stroke-dashoffset:187}50%{stroke-dashoffset:46.75;-webkit-transform:rotate(135deg);transform:rotate(135deg)}100%{stroke-dashoffset:187;-webkit-transform:rotate(450deg);transform:rotate(450deg)}}@-webkit-keyframes fill{0%{stroke-dashoffset:360}80%{stroke-dashoffset:180;-webkit-transform:rotate(135deg);transform:rotate(135deg)}100%{stroke-dashoffset:0;-webkit-transform:rotate(450deg);transform:rotate(450deg)}}@keyframes fill{0%{stroke-dashoffset:360}80%{stroke-dashoffset:180;-webkit-transform:rotate(135deg);transform:rotate(135deg)}100%{stroke-dashoffset:0;-webkit-transform:rotate(450deg);transform:rotate(450deg)}}"]
                    }] }
        ];
        /** @nocollapse */
        FivLoadingRefresherContent.ctorParameters = function () { return [
            { type: core.ElementRef },
            { type: core.Renderer2 },
            { type: animations.AnimationBuilder }
        ]; };
        FivLoadingRefresherContent.propDecorators = {
            icon: [{ type: core.Input }],
            spinColor: [{ type: core.Input }],
            fabColor: [{ type: core.Input }],
            iconColor: [{ type: core.Input }],
            checkmark: [{ type: core.Input }],
            disabled: [{ type: core.Input }],
            progress: [{ type: core.Input }],
            fivComplete: [{ type: core.Output }],
            fivRefresh: [{ type: core.Output }],
            fivHidden: [{ type: core.Output }],
            fivShowed: [{ type: core.Output }],
            fivProgress: [{ type: core.Output }],
            spinner: [{ type: core.ViewChild, args: ['spinner',] }],
            spinnerRef: [{ type: core.ViewChild, args: ['spinner', { read: core.ElementRef },] }],
            background: [{ type: core.ViewChild, args: ['background',] }]
        };
        return FivLoadingRefresherContent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivLoadingContent = /** @class */ (function () {
        function FivLoadingContent(builder, renderer) {
            this.builder = builder;
            this.renderer = renderer;
            this.hintText = 'new posts';
            this.maxPullHeight = 168;
            this.minPullHeight = 112;
            this.fivProgressChanged = new core.EventEmitter();
            this.fivRefresh = new core.EventEmitter();
            this.hintVisible = false;
            this.currentProgress = 0;
            this.refreshing = false;
        }
        /**
         * @return {?}
         */
        FivLoadingContent.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivLoadingContent.prototype.refresh = /**
         * @return {?}
         */
        function () {
            this.refreshing = true;
            this.changeAnimationToProgress(112 / 168);
            this.spinner.load();
            this.fivRefresh.emit(this);
        };
        /**
         * @return {?}
         */
        FivLoadingContent.prototype.completeRefresh = /**
         * @return {?}
         */
        function () {
            this.spinner.complete();
        };
        /**
         * @return {?}
         */
        FivLoadingContent.prototype.fillAnimationDone = /**
         * @return {?}
         */
        function () {
            this.spinner.hide();
        };
        /**
         * @return {?}
         */
        FivLoadingContent.prototype.showHint = /**
         * @return {?}
         */
        function () {
            this.hintVisible = true;
        };
        /**
         * @return {?}
         */
        FivLoadingContent.prototype.onHintClicked = /**
         * @return {?}
         */
        function () {
            this.hintVisible = false;
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivLoadingContent.prototype.postHint = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (!event.fromState && event.toState === 'void') {
                this.setPullAnimationProgress(112 / 168);
                this.spinner.load();
                this.refreshing = true;
                this.fivRefresh.emit(this);
            }
        };
        /**
         * @param {?} progress
         * @return {?}
         */
        FivLoadingContent.prototype.setPullAnimationProgress = /**
         * @param {?} progress
         * @return {?}
         */
        function (progress) {
            this.currentProgress = progress;
            if (progress < 1) {
                this.renderer.setStyle(this.spinner.element.nativeElement, 'transform', "translateY(" + 168 * progress + "px)");
            }
        };
        /**
         * @param {?} progress
         * @return {?}
         */
        FivLoadingContent.prototype.changeAnimationToProgress = /**
         * @param {?} progress
         * @return {?}
         */
        function (progress) {
            var _this = this;
            return new Promise((/**
             * @param {?} resolve
             * @return {?}
             */
            function (resolve) {
                /** @type {?} */
                var animation = _this.builder.build([
                    animations.style({
                        transform: "translateY(" + _this.currentProgress *
                            168 + "px) rotateZ(" + 360 * _this.currentProgress + "deg)"
                    }),
                    animations.animate('85ms ease-in', animations.style({
                        transform: "translateY(" + progress * 168 + "px) rotateZ(" + 360 *
                            progress + "deg)"
                    }))
                ]);
                /** @type {?} */
                var player = animation.create(_this.spinner.element.nativeElement);
                player.play();
                player.onDone((/**
                 * @return {?}
                 */
                function () {
                    _this.setPullAnimationProgress(progress);
                    player.destroy();
                    resolve();
                }));
            }));
        };
        /**
         * @param {?} progress
         * @return {?}
         */
        FivLoadingContent.prototype.fivPull = /**
         * @param {?} progress
         * @return {?}
         */
        function (progress) {
            this.setPullAnimationProgress(progress);
            this.spinner.show();
            /** @type {?} */
            var value = Math.max(0, Math.min(100, (progress * 100 * this.maxPullHeight) / this.minPullHeight));
            this.spinner.setValue(value * 0.84);
        };
        /**
         * @return {?}
         */
        FivLoadingContent.prototype.onRefresh = /**
         * @return {?}
         */
        function () {
            this.refresh();
            this.spinner.load();
        };
        /**
         * @return {?}
         */
        FivLoadingContent.prototype.fivCancel = /**
         * @return {?}
         */
        function () {
            this.moveBack();
        };
        /**
         * @return {?}
         */
        FivLoadingContent.prototype.afterSpinnerHide = /**
         * @return {?}
         */
        function () {
            this.setPullAnimationProgress(0);
            this.refreshing = false;
            this.spinner.reset();
        };
        /**
         * @return {?}
         */
        FivLoadingContent.prototype.moveBack = /**
         * @return {?}
         */
        function () {
            var _this = this;
            /** @type {?} */
            var animation = this.builder.build([
                animations.style({
                    transform: "translateY(" + this.currentProgress * 168 + "px) rotateZ(" + 360 *
                        this.currentProgress + "deg)"
                }),
                animations.animate('145ms ease-in', animations.style({ transform: 'translateY(0) rotateZ(0)' }))
            ]);
            /** @type {?} */
            var player = animation.create(this.spinner.element.nativeElement);
            player.play();
            player.onDone((/**
             * @return {?}
             */
            function () {
                _this.setPullAnimationProgress(0);
                _this.spinner.visible = false;
                player.destroy();
            }));
        };
        /**
         * @param {?} progress
         * @return {?}
         */
        FivLoadingContent.prototype.onSpinnerProgress = /**
         * @param {?} progress
         * @return {?}
         */
        function (progress) {
            this.fivProgressChanged.emit(progress);
            this.renderer
                // tslint:disable-next-line:max-line-length
                .setStyle(this.spinner.element.nativeElement, 'transform', "translateY(" + 168 * this.currentProgress + "px) rotateZ(" + (360 *
                progress) /
                200 + "deg)");
        };
        FivLoadingContent.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-loading-content',
                        template: "<fiv-loading-refresher-content [progress]=\"currentProgress\" (fivProgress)=\"onSpinnerProgress($event)\" (fivHidden)=\"afterSpinnerHide()\" (fivComplete)=\"fillAnimationDone()\"\n  #spinner></fiv-loading-refresher-content>\n<ion-chip class=\"gg-hint-wrapper\" *ngIf=\"hintVisible\" [@hintAnim] (@hintAnim.done)=\"postHint($event)\" (click)=\"onHintClicked()\"\n  #hint>\n  <ion-icon class=\"icon\" name=\"md-arrow-up\"></ion-icon>\n  <ion-label *ngIf=\"hintVisible\" class=\"text\">{{hintText}}</ion-label>\n</ion-chip>\n\n<ion-content [forceOverscroll]=\"false\" fivPull [maxPullHeight]=\"maxPullHeight\" [minPullHeight]=\"minPullHeight\" (fivPull)=\"fivPull($event)\"\n  (fivRefresh)=\"onRefresh()\" (fivCancel)=\"fivCancel()\" [enabled]=\"!refreshing && !hintVisible\">\n  <div class=\"content\">\n    <ng-content></ng-content>\n  </div>\n\n</ion-content>",
                        animations: [
                            animations.trigger('fillAnim', [
                                animations.transition('* => fill', [
                                    animations.style({
                                        'stroke-dasharray': 180,
                                        'stroke-dashoffset': 90,
                                        transformOrigin: 'center',
                                        stroke: '#DE3E35'
                                    }),
                                    animations.animate('360ms ease-out')
                                ]),
                                animations.state('fill', animations.style({
                                    'stroke-dasharray': 315,
                                    'stroke-dashoffset': 0,
                                    transformOrigin: 'center',
                                    stroke: '#1B9A59'
                                }))
                            ]),
                            animations.trigger('spinnerAnim', [
                                animations.transition('* => void', [
                                    animations.animate('250ms ease-out', animations.style({ opacity: 0 }))
                                ])
                            ]),
                            animations.trigger('hintAnim', [
                                animations.transition('void => *', [
                                    animations.style({ transform: 'translateY(0px) translateX(-50%)' }),
                                    animations.animate('150ms ease-in', animations.style({
                                        opacity: 1,
                                        transform: 'translateY(calc(112px + env(safe-area-inset-top))) translateX(-50%)'
                                    }))
                                ]),
                                animations.transition('* => void', [
                                    animations.style({
                                        width: '112px',
                                        opacity: 1,
                                        transform: 'translateY(calc(112px + env(safe-area-inset-top))) translateX(-50%)'
                                    }),
                                    animations.animate('125ms ease-out', animations.style({
                                        width: '40px',
                                        transform: 'translateY(calc(112px + env(safe-area-inset-top))) translateX(-50%)'
                                    }))
                                ])
                            ])
                        ],
                        styles: [":host{height:100%;width:100%;position:absolute;top:0;bottom:0;left:0;right:0}ion-content{--padding-top:calc(env(safe-area-inset-top) + var(--fiv-padding-top, 0px))}.content{min-height:100%;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.icon{height:20px;width:20px;background:0 0;color:var(--ion-color-dark)}.text{font-size:1em;color:var(--ion-color-dark)}.gg-hint-wrapper{position:absolute;z-index:8;opacity:1;left:50%;-webkit-transform:translateY(calc(112px + env(safe-area-inset-top))) translateX(-50%);transform:translateY(calc(112px + env(safe-area-inset-top))) translateX(-50%);height:40px;padding-left:8px;padding-right:8px;background:var(--ion-color-light);border-radius:40px;box-shadow:0 4px 6px 0 rgba(0,0,0,.14),0 4px 5px rgba(0,0,0,.1);margin:0}"]
                    }] }
        ];
        /** @nocollapse */
        FivLoadingContent.ctorParameters = function () { return [
            { type: animations.AnimationBuilder },
            { type: core.Renderer2 }
        ]; };
        FivLoadingContent.propDecorators = {
            hintText: [{ type: core.Input }],
            maxPullHeight: [{ type: core.Input }],
            minPullHeight: [{ type: core.Input }],
            fivProgressChanged: [{ type: core.Output }],
            fivRefresh: [{ type: core.Output }],
            content: [{ type: core.ViewChild, args: ['content',] }],
            spinner: [{ type: core.ViewChild, args: ['spinner',] }]
        };
        return FivLoadingContent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivLoadingContentModule = /** @class */ (function () {
        function FivLoadingContentModule() {
        }
        FivLoadingContentModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivLoadingContent, FivLoadingRefresherContent],
                        imports: [common.CommonModule, FivLoadingSpinnerModule, FivPullModule, angular.IonicModule],
                        exports: [FivLoadingContent, FivLoadingRefresherContent]
                    },] }
        ];
        return FivLoadingContentModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivNetworkStatus = /** @class */ (function () {
        function FivNetworkStatus() {
            this.visible = true;
            this.status = 'online';
            this.onClick = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        FivNetworkStatus.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivNetworkStatus.prototype.show = /**
         * @return {?}
         */
        function () {
            this.visible = true;
        };
        /**
         * @return {?}
         */
        FivNetworkStatus.prototype.hide = /**
         * @return {?}
         */
        function () {
            this.visible = false;
        };
        /**
         * @param {?} status
         * @return {?}
         */
        FivNetworkStatus.prototype.setStatus = /**
         * @param {?} status
         * @return {?}
         */
        function (status) {
            this.status = status;
        };
        /**
         * @return {?}
         */
        FivNetworkStatus.prototype.FivNetworkStatusClicked = /**
         * @return {?}
         */
        function () {
            this.onClick.emit(this);
        };
        FivNetworkStatus.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-network-status',
                        template: "<ion-chip [@status] (click)=\"FivNetworkStatusClicked()\" *ngIf=\"visible\">\n  <fiv-icon [indicatorValue]=\"-1\" [fivCenter] [off]=\"status === 'offline'\" name=\"cloud\"></fiv-icon>\n</ion-chip>",
                        animations: [
                            animations.trigger('status', [
                                animations.transition('void => *', [
                                    animations.style({ opacity: 0 }),
                                    animations.animate('200ms ease-out', animations.style({ opacity: 1 }))
                                ]),
                                animations.transition('* => void', [
                                    animations.style({ opacity: 1 }),
                                    animations.animate('550ms 200ms ease-in', animations.style({ opacity: 0 }))
                                ])
                            ])
                        ],
                        styles: [":host{position:absolute;top:66px;right:8px}ion-chip{width:56px}fiv-icon{--fiv-color-icon:var(--ion-color-dark)}"]
                    }] }
        ];
        /** @nocollapse */
        FivNetworkStatus.ctorParameters = function () { return []; };
        return FivNetworkStatus;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivNetworkStatusModule = /** @class */ (function () {
        function FivNetworkStatusModule() {
        }
        FivNetworkStatusModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivNetworkStatus],
                        imports: [common.CommonModule, FivCenterModule, FivIconModule, angular.IonicModule],
                        exports: [FivNetworkStatus],
                        entryComponents: [FivNetworkStatus]
                    },] }
        ];
        return FivNetworkStatusModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivPopoverModule = /** @class */ (function () {
        function FivPopoverModule() {
        }
        FivPopoverModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivPopover],
                        imports: [common.CommonModule, FivButtonModule, angular.IonicModule],
                        exports: [FivPopover],
                        entryComponents: [FivPopover]
                    },] }
        ];
        return FivPopoverModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivPermissions = /** @class */ (function () {
        function FivPermissions(viewContainer, templateRef) {
            this.viewContainer = viewContainer;
            this.templateRef = templateRef;
            this.allowedPermissions = [];
            this.uPermissions = [];
        }
        Object.defineProperty(FivPermissions.prototype, "fivPermissionsUserPermissions", {
            set: /**
             * @param {?} userPermissions
             * @return {?}
             */
            function (userPermissions) {
                this.uPermissions = userPermissions || [];
                this.updateView();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivPermissions.prototype, "fivPermissions", {
            set: /**
             * @param {?} allowed
             * @return {?}
             */
            function (allowed) {
                this.allowedPermissions = allowed || [];
                this.updateView();
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivPermissions.prototype.checkPermission = /**
         * @return {?}
         */
        function () {
            var _this = this;
            /** @type {?} */
            var show = false;
            this.uPermissions.forEach((/**
             * @param {?} role
             * @return {?}
             */
            function (role) {
                if (_this.allowedPermissions.find((/**
                 * @param {?} a
                 * @return {?}
                 */
                function (a) { return a.toUpperCase() === role.toUpperCase(); }))) {
                    show = true;
                }
            }));
            return show;
        };
        /**
         * @return {?}
         */
        FivPermissions.prototype.updateView = /**
         * @return {?}
         */
        function () {
            if (this.checkPermission()) {
                this.viewContainer.createEmbeddedView(this.templateRef);
            }
            else {
                this.viewContainer.clear();
            }
        };
        FivPermissions.decorators = [
            { type: core.Directive, args: [{
                        selector: '[fivPermissions]'
                    },] }
        ];
        /** @nocollapse */
        FivPermissions.ctorParameters = function () { return [
            { type: core.ViewContainerRef },
            { type: core.TemplateRef }
        ]; };
        FivPermissions.propDecorators = {
            fivPermissionsUserPermissions: [{ type: core.Input }],
            fivPermissions: [{ type: core.Input }]
        };
        return FivPermissions;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivPermissionsModule = /** @class */ (function () {
        function FivPermissionsModule() {
        }
        FivPermissionsModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivPermissions],
                        imports: [common.CommonModule],
                        exports: [FivPermissions]
                    },] }
        ];
        return FivPermissionsModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivViewport = /** @class */ (function () {
        function FivViewport(elementRef) {
            this.elementRef = elementRef;
            this.fivAppear = new core.EventEmitter();
            this.fivDisappear = new core.EventEmitter();
            this.visible = false;
        }
        /**
         * @return {?}
         */
        FivViewport.prototype.ngOnInit = /**
         * @return {?}
         */
        function () {
            var _this = this;
            this.io = new IntersectionObserver((/**
             * @param {?} entries
             * @param {?} observer
             * @return {?}
             */
            function (entries, observer) {
                entries.forEach((/**
                 * @param {?} entry
                 * @return {?}
                 */
                function (entry) {
                    if (entry.isIntersecting) {
                        _this.handleIntersection();
                    }
                    else {
                        _this.handleNonIntersection();
                    }
                }));
            }));
            this.io['POLL_INTERVAL'] = 100;
            this.io.observe(this.elementRef.nativeElement);
        };
        /**
         * @return {?}
         */
        FivViewport.prototype.handleNonIntersection = /**
         * @return {?}
         */
        function () {
            if (this.visible) {
                this.fivDisappear.emit(this);
            }
            this.visible = false;
        };
        /**
         * @return {?}
         */
        FivViewport.prototype.handleIntersection = /**
         * @return {?}
         */
        function () {
            if (!this.visible) {
                this.fivAppear.emit(this);
            }
            this.visible = true;
        };
        /**
         * @return {?}
         */
        FivViewport.prototype.ngOnDestroy = /**
         * @return {?}
         */
        function () {
            this.io.disconnect();
        };
        /**
         * @return {?}
         */
        FivViewport.prototype.isVisible = /**
         * @return {?}
         */
        function () {
            return this.visible;
        };
        FivViewport.decorators = [
            { type: core.Directive, args: [{
                        selector: '[fivViewport]',
                        exportAs: 'viewport'
                    },] }
        ];
        /** @nocollapse */
        FivViewport.ctorParameters = function () { return [
            { type: core.ElementRef }
        ]; };
        FivViewport.propDecorators = {
            fivAppear: [{ type: core.Output }],
            fivDisappear: [{ type: core.Output }]
        };
        return FivViewport;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivViewportModule = /** @class */ (function () {
        function FivViewportModule() {
        }
        FivViewportModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivViewport],
                        imports: [common.CommonModule],
                        exports: [FivViewport]
                    },] }
        ];
        return FivViewportModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivLazyImage = /** @class */ (function () {
        function FivLazyImage(fivImage, image) {
            this.fivImage = fivImage;
            this.image = image;
            this.virtual = false;
            this.inViewport = false;
            this.willShow = new core.EventEmitter();
            this.willHide = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        FivLazyImage.prototype.ngOnInit = /**
         * @return {?}
         */
        function () {
            var _this = this;
            /** @type {?} */
            var io = new IntersectionObserver((/**
             * @param {?} entries
             * @param {?} observer
             * @return {?}
             */
            function (entries, observer) {
                entries.forEach((/**
                 * @param {?} entry
                 * @return {?}
                 */
                function (entry) {
                    if (entry.isIntersecting) {
                        if (!_this.inViewport) {
                            _this.handleIntersection();
                            if (!_this.virtual) {
                                io.disconnect();
                            }
                        }
                    }
                    else {
                        if (_this.inViewport) {
                            _this.inViewport = false;
                            if (_this.fivImage) {
                                _this.willHide.emit(_this.fivImage);
                            }
                            else {
                                _this.willHide.emit(_this.image.nativeElement);
                            }
                        }
                    }
                }));
            }));
            io['POLL_INTERVAL'] = 100;
            if (this.fivImage) {
                io.observe(this.fivImage.image.nativeElement);
            }
            else {
                io.observe(this.image.nativeElement);
            }
        };
        /**
         * @return {?}
         */
        FivLazyImage.prototype.handleIntersection = /**
         * @return {?}
         */
        function () {
            this.inViewport = true;
            if (this.fivLazyImage) {
                if (this.fivImage) {
                    this.fivImage.src = this.fivLazyImage;
                    this.willShow.emit(this.fivImage);
                }
                else {
                    this.image.nativeElement.src = this.fivLazyImage;
                    this.willShow.emit(this.image.nativeElement);
                }
            }
            else {
                this.willShow.emit(this.fivImage || this.image.nativeElement);
            }
        };
        FivLazyImage.decorators = [
            { type: core.Directive, args: [{
                        selector: '[fivLazyImage]'
                    },] }
        ];
        /** @nocollapse */
        FivLazyImage.ctorParameters = function () { return [
            { type: FivGalleryImage, decorators: [{ type: core.Host }, { type: core.Self }, { type: core.Optional }] },
            { type: core.ElementRef }
        ]; };
        FivLazyImage.propDecorators = {
            fivLazyImage: [{ type: core.Input }],
            virtual: [{ type: core.Input }],
            willShow: [{ type: core.Output }],
            willHide: [{ type: core.Output }]
        };
        return FivLazyImage;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivLazyImageModule = /** @class */ (function () {
        function FivLazyImageModule() {
        }
        FivLazyImageModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivLazyImage],
                        imports: [common.CommonModule],
                        exports: [FivLazyImage]
                    },] }
        ];
        return FivLazyImageModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivSearchbar = /** @class */ (function () {
        function FivSearchbar(renderer) {
            this.renderer = renderer;
            this.searching = false;
            this.titleVisible = true;
            this.closeButtonVisible = false;
            this.smallWidth = 120;
            this._small = false;
            this.fivInputChange = new core.EventEmitter();
            this.fivClose = new core.EventEmitter();
            this.open = new core.EventEmitter();
            this.state = 'normal';
        }
        Object.defineProperty(FivSearchbar.prototype, "small", {
            get: /**
             * @return {?}
             */
            function () {
                return this._small;
            },
            set: /**
             * @param {?} s
             * @return {?}
             */
            function (s) {
                if (s && !this._small) {
                    this.shrink();
                }
                else if (!s && this._small) {
                    this.grow();
                }
                this._small = s;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivSearchbar.prototype.ngOnInit = /**
         * @return {?}
         */
        function () {
            this.state = this._small ? 'small' : 'normal';
        };
        /**
         * @return {?}
         */
        FivSearchbar.prototype.shrink = /**
         * @return {?}
         */
        function () {
            this.state = 'small';
        };
        /**
         * @return {?}
         */
        FivSearchbar.prototype.grow = /**
         * @return {?}
         */
        function () {
            this.state = 'normal';
        };
        /**
         * @return {?}
         */
        FivSearchbar.prototype.openSearchbar = /**
         * @return {?}
         */
        function () {
            if (this._small) {
                this.state = 'normal';
            }
            this._open();
        };
        /**
         * @return {?}
         */
        FivSearchbar.prototype.toggleSearchbar = /**
         * @return {?}
         */
        function () {
            if (this.searching) {
                this.closeSearchbar();
            }
            else {
                this.openSearchbar();
            }
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivSearchbar.prototype.searchBarStateChange = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.fromState === 'normal' && event.toState === 'small') ;
            if (event.fromState === 'small' && event.toState === 'normal') ;
        };
        /**
         * @private
         * @return {?}
         */
        FivSearchbar.prototype._open = /**
         * @private
         * @return {?}
         */
        function () {
            this.searching = true;
            this.titleVisible = false;
            this.open.emit();
        };
        /**
         * @return {?}
         */
        FivSearchbar.prototype.closeSearchbar = /**
         * @return {?}
         */
        function () {
            if (this.small) {
                this.state = 'small';
            }
            this.searching = false;
            this.fivClose.emit();
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivSearchbar.prototype.searchAnimDone = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.fromState !== 'void') {
                this.closeButtonVisible = true;
            }
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivSearchbar.prototype.closeAnimDone = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.fromState !== 'void') {
                this.searching = false;
            }
        };
        /**
         * @param {?} event
         * @param {?} input
         * @return {?}
         */
        FivSearchbar.prototype.seachbarAnimDone = /**
         * @param {?} event
         * @param {?} input
         * @return {?}
         */
        function (event, input) {
            if (event.fromState !== 'void') {
                this.titleVisible = true;
            }
            else {
                input.setFocus();
            }
        };
        FivSearchbar.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-searchbar',
                        template: "<ion-toolbar [@searchbarAnim]=\"{value:state, params: {width: smallWidth}}\"\n  (@searchbarAnim.done)=\"searchBarStateChange($event)\" [color]=\"color\" [ngClass]=\"{'small': state === 'small'}\">\n  <ion-buttons slot=\"start\">\n    <ng-content select=\"[start]\"></ng-content>\n\n  </ion-buttons>\n  <ion-title [@titleAnim] *ngIf=\"titleVisible && state !== 'small'\">{{title}}</ion-title>\n  <ion-input (ionChange)=\"fivInputChange.emit($event)\" [placeholder]=\"!titleVisible ? placeholder : ''\" autofocus #input\n    class=\"toolbar-searchbar\" [@titleAnim] (@titleAnim.done)=\"seachbarAnimDone($event,input)\" *ngIf=\"searching\">\n  </ion-input>\n\n  <ion-buttons slot=\"end\">\n    <ion-button (click)=\"toggleSearchbar()\">\n      <fiv-icon [name]=\"searching ? 'md-close' : 'md-search'\"></fiv-icon>\n    </ion-button>\n    <ng-content select=\"[end]\"></ng-content>\n\n  </ion-buttons>\n</ion-toolbar>",
                        animations: [
                            animations.trigger('searchbarAnim', [
                                animations.transition('small => normal', [animations.animate('125ms ease-out')]),
                                animations.transition('normal => small', [animations.animate('95ms ease-in')]),
                                animations.state('small', animations.style({ width: '{{width}}px' }), {
                                    params: { width: 120 }
                                }),
                                animations.state('normal', animations.style({ width: '100%' }))
                            ]),
                            animations.trigger('titleAnim', [
                                animations.transition('void => *', [
                                    animations.style({ opacity: '0', transform: 'translateY(-20%)' }),
                                    animations.animate('175ms ease-out', animations.style({ opacity: '1', transform: 'translateY(0)' }))
                                ])
                            ])
                        ],
                        styles: [":host{position:relative;display:block;width:100%}ion-toolbar{box-shadow:0 1px 4px rgba(0,0,0,.25);transition:border-bottom-right-radius 85ms;margin-top:env(safe-area-inset-top)}ion-toolbar.small{border-bottom-right-radius:12px}.toolbar-searchbar{float:right}"]
                    }] }
        ];
        /** @nocollapse */
        FivSearchbar.ctorParameters = function () { return [
            { type: core.Renderer2 }
        ]; };
        FivSearchbar.propDecorators = {
            title: [{ type: core.Input }],
            placeholder: [{ type: core.Input }],
            color: [{ type: core.Input }],
            smallWidth: [{ type: core.Input }],
            small: [{ type: core.Input }],
            fivInputChange: [{ type: core.Output }],
            fivClose: [{ type: core.Output }],
            open: [{ type: core.Output }]
        };
        return FivSearchbar;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivSearchbarModule = /** @class */ (function () {
        function FivSearchbarModule() {
        }
        FivSearchbarModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivSearchbar],
                        imports: [common.CommonModule, angular.IonicModule, FivIconModule],
                        exports: [FivSearchbar]
                    },] }
        ];
        return FivSearchbarModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var componentModules = [
        FivAppBarModule,
        FivBackButtonModule,
        FivBottomSheetModule,
        FivButtonModule,
        FivButtonsModule,
        FivCollapsableModule,
        FivDialogModule,
        FivEditableLabelModule,
        FivExpandableModule,
        FivFeatureDiscoveryModule,
        FivGalleryModule,
        FivIconModule,
        FivLoadingContentModule,
        FivFabModule,
        FivLoadingProgressBarModule,
        FivLoadingSpinnerModule,
        FivNetworkStatusModule,
        FivOverlayModule,
        FivPasswordInputModule,
        FivPopoverModule,
        FivRippleModule,
        FivRouterItemModule,
        FivStepperModule,
        FivSearchbarModule
    ];
    /** @type {?} */
    var directiveModules = [
        FivCenterModule,
        FivIfModule,
        FivLazyImageModule,
        FivPermissionsModule,
        FivPullModule,
        FivViewportModule
    ];
    var FivethreeCoreModule = /** @class */ (function () {
        function FivethreeCoreModule() {
        }
        FivethreeCoreModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: __spread([
                            common.CommonModule,
                            forms.FormsModule,
                            angular.IonicModule
                        ], componentModules, directiveModules),
                        exports: __spread(componentModules, directiveModules)
                    },] }
        ];
        return FivethreeCoreModule;
    }());

    exports.CUSTOM_EDITIABLE_LABEL_CONTROL_VALUE_ACCESSOR = CUSTOM_EDITIABLE_LABEL_CONTROL_VALUE_ACCESSOR;
    exports.CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR = CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR;
    exports.DrawerState = DrawerState;
    exports.FabState = FabState;
    exports.FivAppBar = FivAppBar;
    exports.FivAppBarModule = FivAppBarModule;
    exports.FivAppBarTab = FivAppBarTab;
    exports.FivAppBarTabContent = FivAppBarTabContent;
    exports.FivBackButton = FivBackButton;
    exports.FivBackButtonModule = FivBackButtonModule;
    exports.FivBottomSheet = FivBottomSheet;
    exports.FivBottomSheetContent = FivBottomSheetContent;
    exports.FivBottomSheetModule = FivBottomSheetModule;
    exports.FivButton = FivButton;
    exports.FivButtonModule = FivButtonModule;
    exports.FivButtons = FivButtons;
    exports.FivButtonsModule = FivButtonsModule;
    exports.FivCenterModule = FivCenterModule;
    exports.FivCollapsableMenuButton = FivCollapsableMenuButton;
    exports.FivCollapsableModule = FivCollapsableModule;
    exports.FivDialog = FivDialog;
    exports.FivDialogModule = FivDialogModule;
    exports.FivDialogService = FivDialogService;
    exports.FivEditableLabel = FivEditableLabel;
    exports.FivEditableLabelModule = FivEditableLabelModule;
    exports.FivExpandable = FivExpandable;
    exports.FivExpandableIndicator = FivExpandableIndicator;
    exports.FivExpandableModule = FivExpandableModule;
    exports.FivFab = FivFab;
    exports.FivFabModule = FivFabModule;
    exports.FivFeature = FivFeature;
    exports.FivFeatureDiscoveryModule = FivFeatureDiscoveryModule;
    exports.FivGallery = FivGallery;
    exports.FivGalleryImage = FivGalleryImage;
    exports.FivGalleryModule = FivGalleryModule;
    exports.FivIconModule = FivIconModule;
    exports.FivIfModule = FivIfModule;
    exports.FivLazyImage = FivLazyImage;
    exports.FivLazyImageModule = FivLazyImageModule;
    exports.FivLoadingContent = FivLoadingContent;
    exports.FivLoadingContentModule = FivLoadingContentModule;
    exports.FivLoadingProgressBar = FivLoadingProgressBar;
    exports.FivLoadingProgressBarModule = FivLoadingProgressBarModule;
    exports.FivLoadingService = FivLoadingService;
    exports.FivLoadingSpinnerModule = FivLoadingSpinnerModule;
    exports.FivNetworkStatus = FivNetworkStatus;
    exports.FivNetworkStatusModule = FivNetworkStatusModule;
    exports.FivOverlayModule = FivOverlayModule;
    exports.FivOverlayService = FivOverlayService;
    exports.FivPasswordInput = FivPasswordInput;
    exports.FivPasswordInputModule = FivPasswordInputModule;
    exports.FivPermissionsModule = FivPermissionsModule;
    exports.FivPopoverModule = FivPopoverModule;
    exports.FivPullModule = FivPullModule;
    exports.FivRippleModule = FivRippleModule;
    exports.FivRouterItem = FivRouterItem;
    exports.FivRouterItemModule = FivRouterItemModule;
    exports.FivRoutingStateService = FivRoutingStateService;
    exports.FivSearchbar = FivSearchbar;
    exports.FivSearchbarModule = FivSearchbarModule;
    exports.FivStep = FivStep;
    exports.FivStepContent = FivStepContent;
    exports.FivStepHeader = FivStepHeader;
    exports.FivStepper = FivStepper;
    exports.FivStepperHorizontal = FivStepperHorizontal;
    exports.FivStepperModule = FivStepperModule;
    exports.FivViewportModule = FivViewportModule;
    exports.FivethreeCoreModule = FivethreeCoreModule;
    exports.ImageService = ImageService;
    exports.Position = Position;
    exports.isNavigateable = isNavigateable;
    exports.ɵa = FivIcon;
    exports.ɵb = FivCenter;
    exports.ɵc = FivFeatureDiscovery;
    exports.ɵd = FivRipple;
    exports.ɵe = FivLoadingSpinner;
    exports.ɵf = FivCollapsableMenu;
    exports.ɵg = FivOverlay;
    exports.ɵh = FivOverlayContent;
    exports.ɵi = FivPull;
    exports.ɵj = FivGalleryToolbar;
    exports.ɵk = FivGalleryToolbarContent;
    exports.ɵl = FivIfPlatform;
    exports.ɵm = FivLoadingRefresherContent;
    exports.ɵn = FivPopover;
    exports.ɵo = FivPermissions;
    exports.ɵp = FivViewport;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=fivethree-core.umd.js.map
