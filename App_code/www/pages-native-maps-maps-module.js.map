{"version":3,"sources":["webpack:///./src/app/pages/native/maps/maps.module.ts","webpack:///./src/app/pages/native/maps/maps.page.html","webpack:///./src/app/pages/native/maps/maps.page.scss","webpack:///./src/app/pages/native/maps/maps.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEN;AAEvC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mDAAQ;KACpB;CACF,CAAC;AAWF;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAT1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;SACzB,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB3B,8S;;;;;;;;;;;ACAA,wBAAwB,gBAAgB,iBAAiB,EAAE,+CAA+C,mb;;;;;;;;;;;;;;;;;ACAjC;AAQzE;IAQE;IAAgB,CAAC;IAEjB,2BAAQ,GAAR;QACE,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,iCAAc,GAAd;IAEA,CAAC;IAED,0BAAO,GAAP;QACE,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QACxD,IAAI,UAAU,GAAG;YACf,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,EAAE;YACR,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO;SAkFzC;QACD,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;QAC1E,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IACD,4BAAS,GAAT;QAEE,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YAClC,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI;YACrC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE;SAC/B,CAAC,CAAC;QAEH,IAAI,OAAO,GAAG,wBAAwB,CAAC;QAEvC,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAEtC,CAAC;IACD,gCAAa,GAAb,UAAc,MAAM,EAAE,OAAO;QAA7B,iBAUC;QARC,IAAI,UAAU,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YAC1C,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,OAAO,EAAE;YAC7C,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IAEL,CAAC;IA9HiB;QAAjB,+DAAS,CAAC,KAAK,CAAC;wEAAa,wDAAU;gDAAC;IAL9B,QAAQ;QALpB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,mGAA+B;;SAEhC,CAAC;;OACW,QAAQ,CAoIpB;IAAD,eAAC;CAAA;AApIoB","file":"pages-native-maps-maps-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MapsPage } from './maps.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MapsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [MapsPage]\n})\nexport class MapsPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Google Maps</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div #map id=\\\"map\\\"></div>\\n</ion-content>\"","module.exports = \"#map {\\n  width: 100%;\\n  height: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy90ZWNobGFiL3Byb2plY3QvdW5pamF5YS9pb25pYy9BcHBfU291cmNlX0NvZGUvQXBwX2NvZGUvc3JjL2FwcC9wYWdlcy9uYXRpdmUvbWFwcy9tYXBzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBSTtFQUNJLFdBQVc7RUFDWCxZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9uYXRpdmUvbWFwcy9tYXBzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiAgICAjbWFwIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICB9Il19 */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\ndeclare var google;\n\n@Component({\n  selector: 'app-maps',\n  templateUrl: './maps.page.html',\n  styleUrls: ['./maps.page.scss'],\n})\nexport class MapsPage implements OnInit {\n\n  /**\n   * For more https://www.joshmorony.com/ionic-2-how-to-use-google-maps-geolocation-video-tutorial/\n   */\n  @ViewChild('map') mapElement: ElementRef;\n  map: any;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.loadMap();\n  }\n  ionViewDidLoad() {\n\n  }\n\n  loadMap() {\n    let latLng = new google.maps.LatLng(-34.9290, 138.6010);\n    let mapOptions = {\n      center: latLng,\n      zoom: 15,\n      mapTypeId: google.maps.MapTypeId.ROADMAP,\n      //// Uncommit this for additional styles\n      // styles: [\n      //   { elementType: 'geometry', stylers: [{ color: '#242f3e' }] },\n      //   { elementType: 'labels.text.stroke', stylers: [{ color: '#242f3e' }] },\n      //   { elementType: 'labels.text.fill', stylers: [{ color: '#746855' }] },\n      //   {\n      //     featureType: 'administrative.locality',\n      //     elementType: 'labels.text.fill',\n      //     stylers: [{ color: '#d59563' }]\n      //   },\n      //   {\n      //     featureType: 'poi',\n      //     elementType: 'labels.text.fill',\n      //     stylers: [{ color: '#d59563' }]\n      //   },\n      //   {\n      //     featureType: 'poi.park',\n      //     elementType: 'geometry',\n      //     stylers: [{ color: '#263c3f' }]\n      //   },\n      //   {\n      //     featureType: 'poi.park',\n      //     elementType: 'labels.text.fill',\n      //     stylers: [{ color: '#6b9a76' }]\n      //   },\n      //   {\n      //     featureType: 'road',\n      //     elementType: 'geometry',\n      //     stylers: [{ color: '#38414e' }]\n      //   },\n      //   {\n      //     featureType: 'road',\n      //     elementType: 'geometry.stroke',\n      //     stylers: [{ color: '#212a37' }]\n      //   },\n      //   {\n      //     featureType: 'road',\n      //     elementType: 'labels.text.fill',\n      //     stylers: [{ color: '#9ca5b3' }]\n      //   },\n      //   {\n      //     featureType: 'road.highway',\n      //     elementType: 'geometry',\n      //     stylers: [{ color: '#746855' }]\n      //   },\n      //   {\n      //     featureType: 'road.highway',\n      //     elementType: 'geometry.stroke',\n      //     stylers: [{ color: '#1f2835' }]\n      //   },\n      //   {\n      //     featureType: 'road.highway',\n      //     elementType: 'labels.text.fill',\n      //     stylers: [{ color: '#f3d19c' }]\n      //   },\n      //   {\n      //     featureType: 'transit',\n      //     elementType: 'geometry',\n      //     stylers: [{ color: '#2f3948' }]\n      //   },\n      //   {\n      //     featureType: 'transit.station',\n      //     elementType: 'labels.text.fill',\n      //     stylers: [{ color: '#d59563' }]\n      //   },\n      //   {\n      //     featureType: 'water',\n      //     elementType: 'geometry',\n      //     stylers: [{ color: '#17263c' }]\n      //   },\n      //   {\n      //     featureType: 'water',\n      //     elementType: 'labels.text.fill',\n      //     stylers: [{ color: '#515c6d' }]\n      //   },\n      //   {\n      //     featureType: 'water',\n      //     elementType: 'labels.text.stroke',\n      //     stylers: [{ color: '#17263c' }]\n      //   }\n      // ]\n    }\n    this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions);\n    this.addMarker();\n  }\n  addMarker() {\n\n    let marker = new google.maps.Marker({\n      map: this.map,\n      animation: google.maps.Animation.DROP,\n      position: this.map.getCenter()\n    });\n\n    let content = \"<h4>RCAP DESIGNS!</h4>\";\n\n    this.addInfoWindow(marker, content);\n\n  }\n  addInfoWindow(marker, content) {\n\n    let infoWindow = new google.maps.InfoWindow({\n      content: content\n    });\n\n    google.maps.event.addListener(marker, 'click', () => {\n      infoWindow.open(this.map, marker);\n    });\n\n  }\n}\n"],"sourceRoot":""}